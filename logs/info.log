2022-11-22 16:58:00,133 -[test_login.py - 43] -INFO:运行成功,测试编号为:1,测试场景:登录接口测试主流程
2022-11-22 16:58:00,140 -[test_login.py - 43] -INFO:运行成功,测试编号为:2,测试场景:登录接口用户名为空的场景
2022-11-22 16:58:00,145 -[test_login.py - 43] -INFO:运行成功,测试编号为:3,测试场景:登录接口密码为空的场景
2022-11-22 16:58:02,189 -[test_login.py - 43] -INFO:运行成功,测试编号为:4,测试场景:登录接口用户名错误的场景
2022-11-22 16:58:04,254 -[test_login.py - 43] -INFO:运行成功,测试编号为:5,测试场景:登录接口密码错误的场景
2022-11-22 16:58:06,318 -[test_register.py - 63] -ERROR:断言失败，期望结果为:{'code': 9999, 'msg': '恭喜您，注册成功！'}
2022-11-22 16:58:06,318 -[test_register.py - 64] -ERROR:assert {'code': 1014...g': '用户名已存在！'} == {'code': 9999...: '恭喜您，注册成功！'}
  Differing items:
  {'msg': '用户名已存在！'} != {'msg': '恭喜您，注册成功！'}
  {'code': 1014} != {'code': 9999}
  Use -v to get more diff
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_register.py", line 61, in test_register
    assert res == case['exp']
AssertionError: assert {'code': 1014...g': '用户名已存在！'} == {'code': 9999...: '恭喜您，注册成功！'}
  Differing items:
  {'msg': '用户名已存在！'} != {'msg': '恭喜您，注册成功！'}
  {'code': 1014} != {'code': 9999}
  Use -v to get more diff
2022-11-22 16:58:06,365 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 16:58:06,370 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 16:58:06,374 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 16:58:06,379 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 16:58:06,383 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 16:58:06,387 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 16:58:06,392 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 16:58:08,464 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 16:58:10,538 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 16:58:12,599 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 18:55:21,653 -[test_login.py - 43] -INFO:运行成功,测试编号为:1,测试场景:登录接口测试主流程
2022-11-22 18:55:21,660 -[test_login.py - 43] -INFO:运行成功,测试编号为:2,测试场景:登录接口用户名为空的场景
2022-11-22 18:55:21,666 -[test_login.py - 43] -INFO:运行成功,测试编号为:3,测试场景:登录接口密码为空的场景
2022-11-22 18:55:23,710 -[test_login.py - 43] -INFO:运行成功,测试编号为:4,测试场景:登录接口用户名错误的场景
2022-11-22 18:55:25,754 -[test_login.py - 43] -INFO:运行成功,测试编号为:5,测试场景:登录接口密码错误的场景
2022-11-22 18:55:27,814 -[test_register.py - 63] -ERROR:断言失败，期望结果为:{'code': 9999, 'msg': '恭喜您，注册成功！'}
2022-11-22 18:55:27,814 -[test_register.py - 64] -ERROR:assert {'code': 1014...g': '用户名已存在！'} == {'code': 9999...: '恭喜您，注册成功！'}
  Differing items:
  {'code': 1014} != {'code': 9999}
  {'msg': '用户名已存在！'} != {'msg': '恭喜您，注册成功！'}
  Use -v to get more diff
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_register.py", line 61, in test_register
    assert res == case['exp']
AssertionError: assert {'code': 1014...g': '用户名已存在！'} == {'code': 9999...: '恭喜您，注册成功！'}
  Differing items:
  {'code': 1014} != {'code': 9999}
  {'msg': '用户名已存在！'} != {'msg': '恭喜您，注册成功！'}
  Use -v to get more diff
2022-11-22 18:55:27,861 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 18:55:27,866 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 18:55:27,870 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 18:55:27,875 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 18:55:27,879 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 18:55:27,884 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 18:55:27,888 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 18:55:29,954 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 18:55:32,017 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 18:55:34,072 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 19:26:37,290 -[test_login.py - 43] -INFO:运行成功,测试编号为:1,测试场景:登录接口测试主流程
2022-11-22 19:26:37,296 -[test_login.py - 43] -INFO:运行成功,测试编号为:2,测试场景:登录接口用户名为空的场景
2022-11-22 19:26:37,301 -[test_login.py - 43] -INFO:运行成功,测试编号为:3,测试场景:登录接口密码为空的场景
2022-11-22 19:26:39,352 -[test_login.py - 43] -INFO:运行成功,测试编号为:4,测试场景:登录接口用户名错误的场景
2022-11-22 19:26:41,394 -[test_login.py - 43] -INFO:运行成功,测试编号为:5,测试场景:登录接口密码错误的场景
2022-11-22 19:26:43,435 -[test_register.py - 63] -ERROR:断言失败，期望结果为:{'code': 9999, 'msg': '恭喜您，注册成功！'}
2022-11-22 19:26:43,436 -[test_register.py - 64] -ERROR:assert {'code': 1014...g': '用户名已存在！'} == {'code': 9999...: '恭喜您，注册成功！'}
  Differing items:
  {'code': 1014} != {'code': 9999}
  {'msg': '用户名已存在！'} != {'msg': '恭喜您，注册成功！'}
  Use -v to get more diff
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_register.py", line 61, in test_register
    assert res == case['exp']
AssertionError: assert {'code': 1014...g': '用户名已存在！'} == {'code': 9999...: '恭喜您，注册成功！'}
  Differing items:
  {'code': 1014} != {'code': 9999}
  {'msg': '用户名已存在！'} != {'msg': '恭喜您，注册成功！'}
  Use -v to get more diff
2022-11-22 19:26:43,484 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 19:26:43,488 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 19:26:43,493 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 19:26:43,497 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 19:26:43,502 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 19:26:43,506 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 19:26:43,510 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 19:26:45,570 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 19:26:47,639 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 19:26:49,716 -[test_register.py - 67] -INFO:运行成功,测试编号为[1101]
2022-11-22 20:57:45,322 -[test_login.py - 42] -INFO:运行成功,测试编号为:1,测试场景:登录接口测试主流程
2022-11-22 20:57:45,327 -[test_login.py - 42] -INFO:运行成功,测试编号为:2,测试场景:登录接口用户名为空的场景
2022-11-22 20:57:45,331 -[test_login.py - 42] -INFO:运行成功,测试编号为:3,测试场景:登录接口密码为空的场景
2022-11-22 20:57:47,385 -[test_login.py - 42] -INFO:运行成功,测试编号为:4,测试场景:登录接口用户名错误的场景
2022-11-22 20:57:49,445 -[test_login.py - 42] -INFO:运行成功,测试编号为:5,测试场景:登录接口密码错误的场景
2022-11-22 21:03:15,521 -[test_login.py - 42] -INFO:运行成功,测试编号为:1,测试场景:登录接口测试主流程
2022-11-22 21:03:15,526 -[test_login.py - 42] -INFO:运行成功,测试编号为:2,测试场景:登录接口用户名为空的场景
2022-11-22 21:03:15,529 -[test_login.py - 42] -INFO:运行成功,测试编号为:3,测试场景:登录接口密码为空的场景
2022-11-22 21:03:17,566 -[test_login.py - 42] -INFO:运行成功,测试编号为:4,测试场景:登录接口用户名错误的场景
2022-11-22 21:03:19,604 -[test_login.py - 42] -INFO:运行成功,测试编号为:5,测试场景:登录接口密码错误的场景
2022-11-22 21:11:22,782 -[test_register.py - 38] -INFO:运行成功,测试编号为:1,测试场景:注册接口测试主流程
2022-11-22 21:11:22,787 -[test_register.py - 38] -INFO:运行成功,测试编号为:2,测试场景:注册接口用户名为空的场景
2022-11-22 21:11:22,790 -[test_register.py - 38] -INFO:运行成功,测试编号为:3,测试场景:注册接口用户名为空的场景
2022-11-22 21:11:22,793 -[test_register.py - 38] -INFO:运行成功,测试编号为:4,测试场景:注册接口用户名不在6-8位的场景
2022-11-22 21:11:22,796 -[test_register.py - 38] -INFO:运行成功,测试编号为:5,测试场景:注册接口手机号为空的场景
2022-11-22 21:11:22,799 -[test_register.py - 38] -INFO:运行成功,测试编号为:6,测试场景:注册接口手机号码格式错误的场景
2022-11-22 21:11:22,802 -[test_register.py - 38] -INFO:运行成功,测试编号为:7,测试场景:注册接口邮箱为空的场景
2022-11-22 21:11:22,805 -[test_register.py - 38] -INFO:运行成功,测试编号为:8,测试场景:注册接口邮箱格式不正确的场景
2022-11-22 21:11:24,852 -[test_register.py - 38] -INFO:运行成功,测试编号为:9,测试场景:注册接口用户名已存在的场景
2022-11-22 21:11:26,917 -[test_register.py - 38] -INFO:运行成功,测试编号为:10,测试场景:注册接口手机号码已注册的场景
2022-11-22 21:11:28,973 -[test_register.py - 38] -INFO:运行成功,测试编号为:11,测试场景:注册接口邮箱已注册的场景
2022-11-22 21:14:29,533 -[test_login.py - 42] -INFO:运行成功,测试编号为:1,测试场景:登录接口测试主流程
2022-11-22 21:14:29,541 -[test_login.py - 42] -INFO:运行成功,测试编号为:2,测试场景:登录接口用户名为空的场景
2022-11-22 21:14:29,545 -[test_login.py - 42] -INFO:运行成功,测试编号为:3,测试场景:登录接口密码为空的场景
2022-11-22 21:14:31,597 -[test_login.py - 42] -INFO:运行成功,测试编号为:4,测试场景:登录接口用户名错误的场景
2022-11-22 21:14:33,667 -[test_login.py - 42] -INFO:运行成功,测试编号为:5,测试场景:登录接口密码错误的场景
2022-11-22 21:14:35,919 -[test_register.py - 38] -INFO:运行成功,测试编号为:2,测试场景:注册接口用户名为空的场景
2022-11-22 21:14:35,924 -[test_register.py - 38] -INFO:运行成功,测试编号为:3,测试场景:注册接口用户名为空的场景
2022-11-22 21:14:35,929 -[test_register.py - 38] -INFO:运行成功,测试编号为:4,测试场景:注册接口用户名不在6-8位的场景
2022-11-22 21:14:35,933 -[test_register.py - 38] -INFO:运行成功,测试编号为:5,测试场景:注册接口手机号为空的场景
2022-11-22 21:14:35,937 -[test_register.py - 38] -INFO:运行成功,测试编号为:6,测试场景:注册接口手机号码格式错误的场景
2022-11-22 21:14:35,941 -[test_register.py - 38] -INFO:运行成功,测试编号为:7,测试场景:注册接口邮箱为空的场景
2022-11-22 21:14:35,946 -[test_register.py - 38] -INFO:运行成功,测试编号为:8,测试场景:注册接口邮箱格式不正确的场景
2022-11-22 21:14:38,005 -[test_register.py - 38] -INFO:运行成功,测试编号为:9,测试场景:注册接口用户名已存在的场景
2022-11-22 21:14:40,047 -[test_register.py - 38] -INFO:运行成功,测试编号为:10,测试场景:注册接口手机号码已注册的场景
2022-11-22 21:14:42,113 -[test_register.py - 38] -INFO:运行成功,测试编号为:11,测试场景:注册接口邮箱已注册的场景
2022-11-22 21:31:37,446 -[test_register.py - 39] -INFO:运行成功,测试编号为:2,测试场景:注册接口用户名为空的场景
2022-11-22 21:31:37,449 -[test_register.py - 39] -INFO:运行成功,测试编号为:3,测试场景:注册接口用户名为空的场景
2022-11-22 21:31:37,452 -[test_register.py - 39] -INFO:运行成功,测试编号为:4,测试场景:注册接口用户名不在6-8位的场景
2022-11-22 21:31:37,454 -[test_register.py - 39] -INFO:运行成功,测试编号为:5,测试场景:注册接口手机号为空的场景
2022-11-22 21:31:37,457 -[test_register.py - 39] -INFO:运行成功,测试编号为:6,测试场景:注册接口手机号码格式错误的场景
2022-11-22 21:31:37,460 -[test_register.py - 39] -INFO:运行成功,测试编号为:7,测试场景:注册接口邮箱为空的场景
2022-11-22 21:31:37,463 -[test_register.py - 39] -INFO:运行成功,测试编号为:8,测试场景:注册接口邮箱格式不正确的场景
2022-11-22 21:31:39,523 -[test_register.py - 39] -INFO:运行成功,测试编号为:9,测试场景:注册接口用户名已存在的场景
2022-11-22 21:31:41,584 -[test_register.py - 39] -INFO:运行成功,测试编号为:10,测试场景:注册接口手机号码已注册的场景
2022-11-22 21:31:43,627 -[test_register.py - 39] -INFO:运行成功,测试编号为:11,测试场景:注册接口邮箱已注册的场景
2022-11-23 14:02:46,648 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:1,测试场景:登录接口测试主流程
2022-11-23 14:04:56,184 -[test_business_login.py - 39] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1001, 'msg': '用户名不能为空'}
2022-11-23 14:04:56,185 -[test_business_login.py - 40] -ERROR:assert {'code': 1001, 'msg': '用户名不能为空'} == '登录成功'
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login.py", line 37, in test_login
    assert res == case['expect']
AssertionError: assert {'code': 1001, 'msg': '用户名不能为空'} == '登录成功'
2022-11-23 14:06:03,827 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 14:06:03,837 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 14:06:06,467 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 14:06:06,472 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 14:07:54,575 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 14:07:54,581 -[test_business_login.py - 39] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC41ODA3MDAyOmE1ODFmODFmMmYxOGI5YjdhMGQ5MDkwYjFmODU0MmU2MTMzODU1NDE='}
2022-11-23 14:07:54,581 -[test_business_login.py - 40] -ERROR:assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC41ODA3MDAyOmE1ODFmODFmMmYxOGI5YjdhMGQ5MDkwYjFmODU0MmU2MTMzODU1NDE='} == '登录成功'
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login.py", line 37, in test_login
    assert res == case['expect']
AssertionError: assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC41ODA3MDAyOmE1ODFmODFmMmYxOGI5YjdhMGQ5MDkwYjFmODU0MmU2MTMzODU1NDE='} == '登录成功'
2022-11-23 14:07:54,630 -[test_business_login.py - 39] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42Mjk3MTE6ODUzMWE3NjlhYjM2NGM1ZWMyOTYxOGMwNTA3MGIzNmVkMDZlNjA5Yw=='}
2022-11-23 14:07:54,630 -[test_business_login.py - 40] -ERROR:assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42Mjk3MTE6ODUzMWE3NjlhYjM2NGM1ZWMyOTYxOGMwNTA3MGIzNmVkMDZlNjA5Yw=='} == '登录成功'
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login.py", line 37, in test_login
    assert res == case['expect']
AssertionError: assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42Mjk3MTE6ODUzMWE3NjlhYjM2NGM1ZWMyOTYxOGMwNTA3MGIzNmVkMDZlNjA5Yw=='} == '登录成功'
2022-11-23 14:07:54,639 -[test_business_login.py - 39] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42Mzg3MTM6YzljZGI5ZTBmOGIwNjJmMzg2MmM5ODVmMDAyNmMwZmNlMTRiM2YyNw=='}
2022-11-23 14:07:54,640 -[test_business_login.py - 40] -ERROR:assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42Mzg3MTM6YzljZGI5ZTBmOGIwNjJmMzg2MmM5ODVmMDAyNmMwZmNlMTRiM2YyNw=='} == '登录成功'
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login.py", line 37, in test_login
    assert res == case['expect']
AssertionError: assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42Mzg3MTM6YzljZGI5ZTBmOGIwNjJmMzg2MmM5ODVmMDAyNmMwZmNlMTRiM2YyNw=='} == '登录成功'
2022-11-23 14:07:54,649 -[test_business_login.py - 39] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42NDg3MTUzOmNmNWQzY2Y5OTZiMjMxYjYzMDQwYzczMWJkMDcwNTk4ZWVlZjRmMjI='}
2022-11-23 14:07:54,649 -[test_business_login.py - 40] -ERROR:assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42NDg3MTUzOmNmNWQzY2Y5OTZiMjMxYjYzMDQwYzczMWJkMDcwNTk4ZWVlZjRmMjI='} == '登录成功'
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login.py", line 37, in test_login
    assert res == case['expect']
AssertionError: assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42NDg3MTUzOmNmNWQzY2Y5OTZiMjMxYjYzMDQwYzczMWJkMDcwNTk4ZWVlZjRmMjI='} == '登录成功'
2022-11-23 14:07:54,658 -[test_business_login.py - 39] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42NTc3MTc6Y2UzNGQ2MjJlOTRiNTk4MjllZjI4ZWZjN2FkYTM4MGI2NTI1ZmE2Yw=='}
2022-11-23 14:07:54,658 -[test_business_login.py - 40] -ERROR:assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42NTc3MTc6Y2UzNGQ2MjJlOTRiNTk4MjllZjI4ZWZjN2FkYTM4MGI2NTI1ZmE2Yw=='} == '登录成功'
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login.py", line 37, in test_login
    assert res == case['expect']
AssertionError: assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42NTc3MTc6Y2UzNGQ2MjJlOTRiNTk4MjllZjI4ZWZjN2FkYTM4MGI2NTI1ZmE2Yw=='} == '登录成功'
2022-11-23 14:07:54,666 -[test_business_login.py - 39] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42NjY3MTk6YmZjZGQ3ZmYxNmI0OGI0ZjVmNDI1MzRiYTAwMjFhMDMwYWNlZDMwMQ=='}
2022-11-23 14:07:54,667 -[test_business_login.py - 40] -ERROR:assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42NjY3MTk6YmZjZGQ3ZmYxNmI0OGI0ZjVmNDI1MzRiYTAwMjFhMDMwYWNlZDMwMQ=='} == '登录成功'
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login.py", line 37, in test_login
    assert res == case['expect']
AssertionError: assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42NjY3MTk6YmZjZGQ3ZmYxNmI0OGI0ZjVmNDI1MzRiYTAwMjFhMDMwYWNlZDMwMQ=='} == '登录成功'
2022-11-23 14:07:54,675 -[test_business_login.py - 39] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42NzQ3MjE6NWM5ZDI4MzFhMDllMTFkNmY5Yjg0YTVjNGNhMGNkMDIyYjgyNTk3MQ=='}
2022-11-23 14:07:54,675 -[test_business_login.py - 40] -ERROR:assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42NzQ3MjE6NWM5ZDI4MzFhMDllMTFkNmY5Yjg0YTVjNGNhMGNkMDIyYjgyNTk3MQ=='} == '登录成功'
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login.py", line 37, in test_login
    assert res == case['expect']
AssertionError: assert {'code': 1000, 'msg': '登录成功', 'token': 'MTY2OTIxMzY3NC42NzQ3MjE6NWM5ZDI4MzFhMDllMTFkNmY5Yjg0YTVjNGNhMGNkMDIyYjgyNTk3MQ=='} == '登录成功'
2022-11-23 14:11:34,146 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 14:11:49,622 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 14:11:49,627 -[test_business_login.py - 39] -ERROR:断言失败，期望结果为:{'code': 1003, 'msg': '用户类型不能为空'},实际结果为:{'code': 9999, 'msg': '用户类型key值不存在'}
2022-11-23 14:11:49,627 -[test_business_login.py - 40] -ERROR:assert {'code': 9999...'用户类型key值不存在'} == {'code': 1003...': '用户类型不能为空'}
  Differing items:
  {'code': 9999} != {'code': 1003}
  {'msg': '用户类型key值不存在'} != {'msg': '用户类型不能为空'}
  Full diff:
  - {'code': 1003, 'msg': '用户类型不能为空'}
  ?          ^^^^               ^^^
  + {'code': 9999, 'msg': '用户类型key值不存在'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login.py", line 37, in test_login
    assert res == case['expect']
AssertionError: assert {'code': 9999...'用户类型key值不存在'} == {'code': 1003...': '用户类型不能为空'}
  Differing items:
  {'code': 9999} != {'code': 1003}
  {'msg': '用户类型key值不存在'} != {'msg': '用户类型不能为空'}
  Full diff:
  - {'code': 1003, 'msg': '用户类型不能为空'}
  ?          ^^^^               ^^^
  + {'code': 9999, 'msg': '用户类型key值不存在'}...
  
  ...Full output truncated (2 lines hidden), use '-vv' to show
2022-11-23 14:12:13,100 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 14:12:13,105 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 14:12:25,223 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 14:12:25,227 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 14:12:25,231 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误
2022-11-23 14:15:27,955 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 14:15:27,960 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 14:15:27,964 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 14:15:27,969 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 14:15:27,974 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 14:15:27,978 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 14:15:28,000 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 14:15:28,004 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 14:39:05,195 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 14:39:05,200 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 14:39:05,204 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 14:39:05,209 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 14:39:05,214 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 14:39:05,218 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 14:39:05,224 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 14:39:05,229 -[test_business_login.py - 43] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 16:44:15,618 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 16:44:15,623 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 16:44:15,628 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 16:44:15,633 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 16:44:15,638 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 16:44:15,643 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 16:44:15,647 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 16:44:15,652 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 16:52:54,093 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 16:52:54,107 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 16:52:54,123 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 16:52:54,139 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 16:52:54,154 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 16:52:54,172 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 16:52:54,176 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 16:52:54,180 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 17:07:58,624 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 17:07:58,629 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 17:07:58,633 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 17:07:58,638 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 17:07:58,642 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 17:07:58,648 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 17:07:58,653 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 17:07:58,682 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 17:17:49,117 -[test_business_login02.py - 51] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 17:17:49,121 -[test_business_login02.py - 51] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 17:17:49,126 -[test_business_login02.py - 51] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 17:17:49,130 -[test_business_login02.py - 51] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 17:17:49,135 -[test_business_login02.py - 51] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 17:17:49,139 -[test_business_login02.py - 51] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 17:17:49,143 -[test_business_login02.py - 51] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 17:17:49,147 -[test_business_login02.py - 51] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 17:44:36,047 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 17:44:36,053 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 17:44:36,057 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 17:44:36,062 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 17:44:36,067 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 17:44:36,071 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 17:44:36,075 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 17:44:36,079 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 17:46:36,630 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 17:46:36,635 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 17:46:36,639 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 17:46:36,644 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 17:46:36,648 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 17:46:36,652 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 17:46:36,657 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 17:46:36,661 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 20:39:02,281 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 20:39:02,286 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 20:39:02,291 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 20:39:02,312 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 20:39:02,317 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 20:39:02,321 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 20:39:02,344 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 20:39:02,348 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 20:39:52,212 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:39:52,212 -[test_business_login03.py - 41] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 36, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 20:39:52,273 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 20:39:52,288 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 20:39:52,304 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:39:52,304 -[test_business_login03.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'code': 1004} != {'code': 1007}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'code': 1004} != {'code': 1007}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:39:52,313 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 20:39:52,317 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 20:39:52,323 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:39:52,323 -[test_business_login03.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'code': 1004} != {'code': 1005}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'code': 1004} != {'code': 1005}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:39:52,332 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:39:52,332 -[test_business_login03.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'code': 1004} != {'code': 1006}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'code': 1004} != {'code': 1006}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:43:31,568 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 20:43:31,572 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 20:43:31,590 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 20:43:31,595 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 20:43:31,599 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 20:43:31,604 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 20:43:31,608 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 20:43:31,612 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 20:43:55,281 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:43:55,281 -[test_business_login03.py - 41] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 36, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 20:43:55,328 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 20:43:55,333 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 20:43:55,339 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:43:55,339 -[test_business_login03.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:43:55,347 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 20:43:55,377 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 20:43:55,384 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:43:55,384 -[test_business_login03.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:43:55,409 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:43:55,409 -[test_business_login03.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:49:06,619 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1001, 'msg': '用户名不能为空'}
2022-11-23 20:49:06,619 -[test_business_login03.py - 41] -ERROR:assert '用户名不能为空' == '登录成功'
  - 登录成功
  + 用户名不能为空
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 36, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名不能为空' == '登录成功'
  - 登录成功
  + 用户名不能为空
2022-11-23 20:49:06,687 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 20:49:06,692 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 20:49:06,697 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:49:06,698 -[test_business_login03.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'code': 1004} != {'code': 1007}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'code': 1004} != {'code': 1007}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:49:06,707 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 20:49:06,712 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 20:49:06,718 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:49:06,718 -[test_business_login03.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'code': 1004} != {'code': 1005}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'code': 1004} != {'code': 1005}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:49:06,727 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:49:06,727 -[test_business_login03.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'code': 1004} != {'code': 1006}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'code': 1004} != {'code': 1006}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 20:50:11,174 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1007, 'msg': '用户名或者密码错误'}
2022-11-23 20:50:11,174 -[test_business_login03.py - 41] -ERROR:assert '用户名或者密码错误' == '登录成功'
  - 登录成功
  + 用户名或者密码错误
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 36, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名或者密码错误' == '登录成功'
  - 登录成功
  + 用户名或者密码错误
2022-11-23 20:50:11,237 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 20:50:11,242 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 20:50:11,247 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 20:50:11,252 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 20:50:11,257 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 20:50:11,262 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 20:50:11,267 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 20:58:26,794 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 20:58:26,799 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 20:58:26,804 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 20:58:26,809 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 20:58:26,814 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 20:58:26,818 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 20:58:26,823 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 20:58:26,828 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 20:59:18,450 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 20:59:18,454 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 20:59:18,459 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 20:59:18,464 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 20:59:18,470 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 20:59:18,475 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 20:59:18,479 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 20:59:18,484 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 21:20:23,169 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 21:20:23,174 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:20:23,199 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:20:23,215 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 21:20:23,220 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:20:23,224 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:20:23,228 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 21:20:23,232 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 21:20:36,578 -[test_business_login03.py - 45] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:20:36,578 -[test_business_login03.py - 46] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 41, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 21:20:36,624 -[test_business_login03.py - 49] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:20:36,629 -[test_business_login03.py - 49] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:20:36,634 -[test_business_login03.py - 45] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:20:36,634 -[test_business_login03.py - 46] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 43, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:20:36,643 -[test_business_login03.py - 49] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:20:36,648 -[test_business_login03.py - 49] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:20:36,653 -[test_business_login03.py - 45] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:20:36,653 -[test_business_login03.py - 46] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 43, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:20:36,664 -[test_business_login03.py - 45] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:20:36,664 -[test_business_login03.py - 46] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 43, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:52,781 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:52,781 -[test_business_login03.py - 45] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 40, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 21:24:52,831 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:24:52,836 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:24:52,841 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:52,841 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:52,853 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:24:52,858 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:24:52,863 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:52,863 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:52,873 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:52,873 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:58,881 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:58,881 -[test_business_login03.py - 45] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 40, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 21:24:58,930 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:24:58,946 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:24:58,962 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:58,962 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:58,994 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:24:59,009 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:24:59,014 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:59,014 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:59,024 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:24:59,024 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:26:45,445 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 21:26:45,450 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:26:45,455 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:26:45,460 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 21:26:45,464 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:26:45,468 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:26:45,472 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 21:26:45,476 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 21:27:16,862 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:27:16,863 -[test_business_login03.py - 45] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 40, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 21:27:16,926 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:27:16,942 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:27:16,958 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:27:16,958 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:27:16,990 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:27:17,005 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:27:17,010 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:27:17,010 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:27:17,038 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:27:17,038 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:27:50,976 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 21:27:50,981 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:27:50,985 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:27:50,990 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 21:27:50,994 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:27:50,999 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:27:51,003 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 21:27:51,007 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 21:28:05,117 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 21:28:05,122 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:28:05,126 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:28:05,131 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 21:28:05,135 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:28:05,139 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:28:05,144 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 21:28:05,148 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 21:29:46,739 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:46,739 -[test_business_login03.py - 45] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 40, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 21:29:46,789 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:29:46,811 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:29:46,817 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:46,817 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:46,827 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:29:46,833 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:29:46,838 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:46,838 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:46,848 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:46,848 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:57,041 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:57,041 -[test_business_login03.py - 45] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 40, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 21:29:57,087 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:29:57,103 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:29:57,108 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:57,108 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:57,117 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:29:57,121 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:29:57,126 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:57,126 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:57,135 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:29:57,135 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:05,101 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:05,101 -[test_business_login03.py - 45] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 40, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 21:30:05,164 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:30:05,181 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:30:05,186 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:05,186 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'code': 1004} != {'code': 1007}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'code': 1004} != {'code': 1007}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:05,195 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:30:05,201 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:30:05,206 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:05,206 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'code': 1004} != {'code': 1005}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'code': 1004} != {'code': 1005}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:05,216 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:05,216 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'code': 1004} != {'code': 1006}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'code': 1004} != {'code': 1006}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:13,672 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 21:30:13,677 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:30:13,681 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:30:13,686 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 21:30:13,690 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:30:13,695 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:30:13,699 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 21:30:13,703 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 21:30:22,839 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 21:30:22,844 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:30:22,848 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:30:22,852 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 21:30:22,856 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:30:22,860 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:30:22,864 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 21:30:22,868 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 21:30:35,672 -[test_business_login01.py - 40] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:35,672 -[test_business_login01.py - 41] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login01.py", line 36, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 21:30:35,720 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:30:35,725 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:30:35,729 -[test_business_login01.py - 40] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:35,730 -[test_business_login01.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login01.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:35,738 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:30:35,742 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:30:35,748 -[test_business_login01.py - 40] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:35,748 -[test_business_login01.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login01.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:35,757 -[test_business_login01.py - 40] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:35,757 -[test_business_login01.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login01.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:30:47,484 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 21:30:47,489 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:30:47,493 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:30:47,498 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 21:30:47,503 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:30:47,507 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:30:47,511 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 21:30:47,516 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 21:45:16,869 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:16,869 -[test_business_login03.py - 45] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 40, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 21:45:16,936 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:45:16,952 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:45:16,957 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:16,957 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'code': 1004} != {'code': 1007}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'code': 1004} != {'code': 1007}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:16,966 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:45:16,971 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:45:16,977 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:16,977 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'code': 1004} != {'code': 1005}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'code': 1004} != {'code': 1005}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:16,986 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:16,986 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'code': 1004} != {'code': 1006}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'code': 1004} != {'code': 1006}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:26,910 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 21:45:26,915 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:45:26,919 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:45:26,924 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 21:45:26,929 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:45:26,933 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:45:26,937 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 21:45:26,941 -[test_business_login02.py - 56] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 21:45:42,996 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:42,996 -[test_business_login03.py - 45] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 40, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 21:45:43,059 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:45:43,064 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:45:43,069 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:43,069 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:43,078 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:45:43,083 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:45:43,088 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:43,088 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:43,097 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:45:43,097 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:48:00,853 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:48:00,853 -[test_business_login03.py - 45] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 40, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 21:48:00,899 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:48:00,904 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:48:00,909 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:48:00,909 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:48:00,918 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:48:00,924 -[test_business_login03.py - 48] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:48:00,929 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:48:00,929 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:48:00,939 -[test_business_login03.py - 44] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:48:00,940 -[test_business_login03.py - 45] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 42, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:56:29,451 -[test_business_login03.py - 41] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:56:29,451 -[test_business_login03.py - 42] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 37, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-23 21:56:29,498 -[test_business_login03.py - 45] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 21:56:29,503 -[test_business_login03.py - 45] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 21:56:29,508 -[test_business_login03.py - 41] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:56:29,508 -[test_business_login03.py - 42] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 39, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:56:29,517 -[test_business_login03.py - 45] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 21:56:29,521 -[test_business_login03.py - 45] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 21:56:29,526 -[test_business_login03.py - 41] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:56:29,526 -[test_business_login03.py - 42] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 39, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:56:29,535 -[test_business_login03.py - 41] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 21:56:29,535 -[test_business_login03.py - 42] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business_login03.py", line 39, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-23 22:04:43,779 -[test_business_login03.py - 47] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 22:05:03,091 -[test_business_login03.py - 47] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 22:05:03,121 -[test_business_login03.py - 47] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 22:05:03,137 -[test_business_login03.py - 47] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 22:05:03,149 -[test_business_login03.py - 47] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 22:05:03,160 -[test_business_login03.py - 47] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 22:05:03,174 -[test_business_login03.py - 47] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 22:05:03,182 -[test_business_login03.py - 47] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 22:05:03,188 -[test_business_login03.py - 47] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 22:08:50,607 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 22:08:50,613 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 22:08:50,618 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 22:08:50,623 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 22:08:50,629 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 22:08:50,634 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 22:08:50,639 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 22:08:50,645 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 22:09:52,417 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 22:09:52,426 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 22:09:52,436 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 22:09:52,446 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 22:09:52,454 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 22:09:52,463 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 22:09:52,498 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 22:09:52,507 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-23 22:10:43,965 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-23 22:10:43,970 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-23 22:10:43,992 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-23 22:10:43,998 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-23 22:10:44,004 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-23 22:10:44,012 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-23 22:10:44,017 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-23 22:10:44,023 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-24 11:13:57,376 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-24 11:13:57,381 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-24 11:13:57,386 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-24 11:13:57,391 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-24 11:13:57,396 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-24 11:13:57,400 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-24 11:13:57,405 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-24 11:13:57,409 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-24 21:32:21,455 -[test_business_good_select01.py - 112] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:32:21,455 -[test_business_good_select01.py - 113] -ERROR:assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 85, in test_goods_select
    assert res["msg"] == case["expect"]  # 断言响应结果中msg对应的值 == 期望结果（登录成功）
AssertionError: assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
2022-11-24 21:32:21,509 -[test_business_good_select01.py - 112] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:32:21,509 -[test_business_good_select01.py - 113] -ERROR:assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 91, in test_goods_select
    assert res["msg"] == case["expect"] and len(res["goods_tiems"]) == 1
AssertionError: assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
2022-11-24 21:32:21,521 -[test_business_good_select01.py - 116] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-24 21:32:21,676 -[test_business_good_select01.py - 112] -ERROR:断言失败,期望结果为:{'code': 1008, 'msg': '没有符合条件的数据'},实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:32:21,676 -[test_business_good_select01.py - 113] -ERROR:assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'code': 9999} != {'code': 1008}
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  Full diff:
  - {'code': 1008, 'msg': '没有符合条件的数据'}
  + {'code': 9999, 'msg': 'token key值不存在'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 110, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'code': 9999} != {'code': 1008}
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  Full diff:
  - {'code': 1008, 'msg': '没有符合条件的数据'}
  + {'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:36:59,800 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-24 21:36:59,806 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-24 21:36:59,812 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-24 21:36:59,817 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-24 21:36:59,822 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-24 21:36:59,827 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-24 21:36:59,832 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-24 21:36:59,837 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-24 21:37:13,640 -[test_business_good_select01.py - 112] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:37:13,640 -[test_business_good_select01.py - 113] -ERROR:assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 85, in test_goods_select
    assert res["msg"] == case["expect"]  # 断言响应结果中msg对应的值 == 期望结果（登录成功）
AssertionError: assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
2022-11-24 21:37:13,710 -[test_business_good_select01.py - 112] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:37:13,710 -[test_business_good_select01.py - 113] -ERROR:assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 91, in test_goods_select
    assert res["msg"] == case["expect"] and len(res["goods_tiems"]) == 1
AssertionError: assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
2022-11-24 21:37:13,722 -[test_business_good_select01.py - 116] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-24 21:37:13,823 -[test_business_good_select01.py - 112] -ERROR:断言失败,期望结果为:{'code': 1008, 'msg': '没有符合条件的数据'},实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:37:13,823 -[test_business_good_select01.py - 113] -ERROR:assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'code': 9999} != {'code': 1008}
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  Full diff:
  - {'code': 1008, 'msg': '没有符合条件的数据'}
  + {'code': 9999, 'msg': 'token key值不存在'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 110, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'code': 9999} != {'code': 1008}
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  Full diff:
  - {'code': 1008, 'msg': '没有符合条件的数据'}
  + {'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:48:35,132 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:48:35,132 -[test_business_good_select01.py - 110] -ERROR:assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 82, in test_goods_select
    assert res["msg"] == case["expect"]  # 断言响应结果中msg对应的值 == 期望结果（登录成功）
AssertionError: assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
2022-11-24 21:48:35,185 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:48:35,185 -[test_business_good_select01.py - 110] -ERROR:assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 88, in test_goods_select
    assert res["msg"] == case["expect"] and len(res["goods_tiems"]) == 1
AssertionError: assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
2022-11-24 21:48:35,198 -[test_business_good_select01.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-24 21:48:35,263 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:{'code': 1008, 'msg': '没有符合条件的数据'},实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:48:35,263 -[test_business_good_select01.py - 110] -ERROR:assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  {'code': 9999} != {'code': 1008}
  Use -v to get more diff
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 107, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  {'code': 9999} != {'code': 1008}
  Use -v to get more diff
2022-11-24 21:49:46,113 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-24 21:49:46,118 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-24 21:49:46,123 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-24 21:49:46,128 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-24 21:49:46,134 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-24 21:49:46,139 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-24 21:49:46,144 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-24 21:49:46,149 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-24 21:49:57,789 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:49:57,790 -[test_business_good_select01.py - 110] -ERROR:assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 82, in test_goods_select
    assert res["msg"] == case["expect"]  # 断言响应结果中msg对应的值 == 期望结果（登录成功）
AssertionError: assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
2022-11-24 21:49:57,845 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:49:57,845 -[test_business_good_select01.py - 110] -ERROR:assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 88, in test_goods_select
    assert res["msg"] == case["expect"] and len(res["goods_tiems"]) == 1
AssertionError: assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
2022-11-24 21:49:57,858 -[test_business_good_select01.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-24 21:49:57,936 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:{'code': 1008, 'msg': '没有符合条件的数据'},实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:49:57,936 -[test_business_good_select01.py - 110] -ERROR:assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'code': 9999} != {'code': 1008}
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  Use -v to get more diff
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 107, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'code': 9999} != {'code': 1008}
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  Use -v to get more diff
2022-11-24 21:50:10,081 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-24 21:50:10,086 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-24 21:50:10,091 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-24 21:50:10,096 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-24 21:50:10,101 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-24 21:50:10,105 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-24 21:50:10,111 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-24 21:50:10,116 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-24 21:50:18,690 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:50:18,690 -[test_business_good_select01.py - 110] -ERROR:assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 82, in test_goods_select
    assert res["msg"] == case["expect"]  # 断言响应结果中msg对应的值 == 期望结果（登录成功）
AssertionError: assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
2022-11-24 21:50:18,744 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:50:18,744 -[test_business_good_select01.py - 110] -ERROR:assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 88, in test_goods_select
    assert res["msg"] == case["expect"] and len(res["goods_tiems"]) == 1
AssertionError: assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
2022-11-24 21:50:18,757 -[test_business_good_select01.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-24 21:50:18,815 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:{'code': 1008, 'msg': '没有符合条件的数据'},实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:50:18,816 -[test_business_good_select01.py - 110] -ERROR:assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  {'code': 9999} != {'code': 1008}
  Use -v to get more diff
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 107, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  {'code': 9999} != {'code': 1008}
  Use -v to get more diff
2022-11-24 21:54:30,377 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:54:30,378 -[test_business_good_select01.py - 110] -ERROR:assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 82, in test_goods_select
    assert res["msg"] == case["expect"]  # 断言响应结果中msg对应的值 == 期望结果（登录成功）
AssertionError: assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
2022-11-24 21:54:30,449 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:54:30,449 -[test_business_good_select01.py - 110] -ERROR:assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 82, in test_goods_select
    assert res["msg"] == case["expect"]  # 断言响应结果中msg对应的值 == 期望结果（登录成功）
AssertionError: assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
2022-11-24 21:54:30,464 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:54:30,464 -[test_business_good_select01.py - 110] -ERROR:assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 88, in test_goods_select
    assert res["msg"] == case["expect"] and len(res["goods_tiems"]) == 1
AssertionError: assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
2022-11-24 21:54:30,479 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:54:30,479 -[test_business_good_select01.py - 110] -ERROR:assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 88, in test_goods_select
    assert res["msg"] == case["expect"] and len(res["goods_tiems"]) == 1
AssertionError: assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
2022-11-24 21:54:30,495 -[test_business_good_select01.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-24 21:54:30,619 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:{'code': 1008, 'msg': '没有符合条件的数据'},实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:54:30,619 -[test_business_good_select01.py - 110] -ERROR:assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  {'code': 9999} != {'code': 1008}
  Use -v to get more diff
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 107, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  {'code': 9999} != {'code': 1008}
  Use -v to get more diff
2022-11-24 21:54:30,632 -[test_business_good_select01.py - 109] -ERROR:断言失败,期望结果为:{'code': 1008, 'msg': '没有符合条件的数据'},实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:54:30,632 -[test_business_good_select01.py - 110] -ERROR:assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  {'code': 9999} != {'code': 1008}
  Use -v to get more diff
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 107, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  {'code': 9999} != {'code': 1008}
  Use -v to get more diff
2022-11-24 21:56:30,326 -[test_business_good_select01.py - 110] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:56:30,326 -[test_business_good_select01.py - 111] -ERROR:assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 83, in test_goods_select
    assert res["msg"] == case["expect"]  # 断言响应结果中msg对应的值 == 期望结果（登录成功）
AssertionError: assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
2022-11-24 21:56:30,390 -[test_business_good_select01.py - 110] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:56:30,390 -[test_business_good_select01.py - 111] -ERROR:assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 83, in test_goods_select
    assert res["msg"] == case["expect"]  # 断言响应结果中msg对应的值 == 期望结果（登录成功）
AssertionError: assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
2022-11-24 21:56:30,405 -[test_business_good_select01.py - 110] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:56:30,406 -[test_business_good_select01.py - 111] -ERROR:assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 89, in test_goods_select
    assert res["msg"] == case["expect"] and len(res["goods_tiems"]) == 1
AssertionError: assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
2022-11-24 21:56:30,419 -[test_business_good_select01.py - 110] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:56:30,420 -[test_business_good_select01.py - 111] -ERROR:assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 89, in test_goods_select
    assert res["msg"] == case["expect"] and len(res["goods_tiems"]) == 1
AssertionError: assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
2022-11-24 21:56:30,435 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-24 21:56:30,550 -[test_business_good_select01.py - 110] -ERROR:断言失败,期望结果为:{'code': 1008, 'msg': '没有符合条件的数据'},实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:56:30,550 -[test_business_good_select01.py - 111] -ERROR:assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  {'code': 9999} != {'code': 1008}
  Use -v to get more diff
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 108, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  {'code': 9999} != {'code': 1008}
  Use -v to get more diff
2022-11-24 21:56:30,564 -[test_business_good_select01.py - 110] -ERROR:断言失败,期望结果为:{'code': 1008, 'msg': '没有符合条件的数据'},实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:56:30,564 -[test_business_good_select01.py - 111] -ERROR:assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  {'code': 9999} != {'code': 1008}
  Use -v to get more diff
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 108, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  {'code': 9999} != {'code': 1008}
  Use -v to get more diff
2022-11-24 21:57:54,531 -[test_business_good_select01.py - 110] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:57:54,531 -[test_business_good_select01.py - 111] -ERROR:assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 83, in test_goods_select
    assert res["msg"] == case["expect"]  # 断言响应结果中msg对应的值 == 期望结果（登录成功）
AssertionError: assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
2022-11-24 21:57:54,595 -[test_business_good_select01.py - 110] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:57:54,595 -[test_business_good_select01.py - 111] -ERROR:assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 83, in test_goods_select
    assert res["msg"] == case["expect"]  # 断言响应结果中msg对应的值 == 期望结果（登录成功）
AssertionError: assert 'token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在
2022-11-24 21:57:54,611 -[test_business_good_select01.py - 110] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:57:54,611 -[test_business_good_select01.py - 111] -ERROR:assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 89, in test_goods_select
    assert res["msg"] == case["expect"] and len(res["goods_tiems"]) == 1
AssertionError: assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
2022-11-24 21:57:54,626 -[test_business_good_select01.py - 110] -ERROR:断言失败,期望结果为:查询成功,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:57:54,626 -[test_business_good_select01.py - 111] -ERROR:assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 89, in test_goods_select
    assert res["msg"] == case["expect"] and len(res["goods_tiems"]) == 1
AssertionError: assert ('token key值不存在' == '查询成功'
  - 查询成功
  + token key值不存在)
2022-11-24 21:57:54,642 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-24 21:57:54,760 -[test_business_good_select01.py - 110] -ERROR:断言失败,期望结果为:{'code': 1008, 'msg': '没有符合条件的数据'},实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:57:54,761 -[test_business_good_select01.py - 111] -ERROR:assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'code': 9999} != {'code': 1008}
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  Use -v to get more diff
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 108, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'code': 9999} != {'code': 1008}
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  Use -v to get more diff
2022-11-24 21:57:54,774 -[test_business_good_select01.py - 110] -ERROR:断言失败,期望结果为:{'code': 1008, 'msg': '没有符合条件的数据'},实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2022-11-24 21:57:54,774 -[test_business_good_select01.py - 111] -ERROR:assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'code': 9999} != {'code': 1008}
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  Use -v to get more diff
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 108, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 9999...oken key值不存在'} == {'code': 1008...: '没有符合条件的数据'}
  Differing items:
  {'code': 9999} != {'code': 1008}
  {'msg': 'token key值不存在'} != {'msg': '没有符合条件的数据'}
  Use -v to get more diff
2022-11-24 21:58:59,462 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 21:58:59,756 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 21:58:59,781 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 22:01:00,419 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:01:23,115 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:02:06,585 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:05:52,901 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:07:07,061 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:11:47,615 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:15:04,100 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:15:15,499 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:15:23,981 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:15:41,374 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:17:51,435 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:18:30,811 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:18:56,771 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:19:22,777 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:20:13,364 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:22:31,277 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-24 22:22:47,784 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-24 22:23:03,222 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-24 22:23:20,193 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-24 22:23:33,624 -[test_business_good_select01.py - 111] -ERROR:断言失败,期望结果为:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'},实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '干脆面', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 100}]}
2022-11-24 22:23:33,624 -[test_business_good_select01.py - 112] -ERROR:assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1007}
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '干脆面',
                    'num': 100,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (3 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 109, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1007}
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '干脆面',
                    'num': 100,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (3 lines hidden), use '-vv' to show
2022-11-24 22:23:33,686 -[test_business_good_select01.py - 111] -ERROR:断言失败,期望结果为:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'},实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '方便面', 'shopPrice': 5.0, 'promotePrice': 0.0, 'num': 1000}]}
2022-11-24 22:23:33,686 -[test_business_good_select01.py - 112] -ERROR:assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1007}
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '方便面',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (3 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 109, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1007}
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '方便面',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (3 lines hidden), use '-vv' to show
2022-11-24 22:24:00,510 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 22:24:22,985 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-24 22:24:49,509 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-24 22:25:12,679 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-24 22:25:30,828 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-24 22:25:43,264 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-24 22:26:01,917 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-24 22:26:12,745 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-24 22:26:12,752 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-24 22:26:12,757 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-24 22:26:12,763 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-24 22:26:12,768 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-24 22:26:12,773 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-24 22:26:12,779 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-24 22:26:12,784 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-24 22:26:28,463 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-24 22:26:43,423 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-24 22:26:59,594 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-24 22:27:21,761 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:27:22,029 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 22:27:22,054 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 22:30:07,993 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:30:08,264 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 22:30:08,289 -[test_business_good_select01.py - 115] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 22:40:07,404 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:40:35,593 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:40:35,861 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 22:40:35,886 -[test_business_good_select01.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 22:44:53,962 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:44:54,228 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 22:44:54,253 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 22:51:49,283 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 22:51:49,599 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 22:51:49,623 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 23:38:14,099 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 23:38:14,378 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 23:38:14,404 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 23:52:30,819 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-24 23:52:31,024 -[test_business_good_select02.py - 110] -ERROR:断言失败,期望结果为:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'},实际结果为:{'code': 1002, 'msg': '商品编号必须为6位数字'}
2022-11-24 23:52:31,024 -[test_business_good_select02.py - 111] -ERROR:assert {'code': 1002, 'msg': '商品编号必须为6位数字'} == {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
  Differing items:
  {'msg': '商品编号必须为6位数字'} != {'msg': '鉴权失败,请检查token是否失效'}
  {'code': 1002} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
  + {'code': 1002, 'msg': '商品编号必须为6位数字'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select02.py", line 108, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 1002, 'msg': '商品编号必须为6位数字'} == {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
  Differing items:
  {'msg': '商品编号必须为6位数字'} != {'msg': '鉴权失败,请检查token是否失效'}
  {'code': 1002} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
  + {'code': 1002, 'msg': '商品编号必须为6位数字'}
2022-11-24 23:52:31,052 -[test_business_good_select02.py - 110] -ERROR:断言失败,期望结果为:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'},实际结果为:{'code': 1002, 'msg': '商品编号必须为6位数字'}
2022-11-24 23:52:31,052 -[test_business_good_select02.py - 111] -ERROR:assert {'code': 1002, 'msg': '商品编号必须为6位数字'} == {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
  Differing items:
  {'msg': '商品编号必须为6位数字'} != {'msg': '鉴权失败,请检查token是否失效'}
  {'code': 1002} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
  + {'code': 1002, 'msg': '商品编号必须为6位数字'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select02.py", line 108, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 1002, 'msg': '商品编号必须为6位数字'} == {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
  Differing items:
  {'msg': '商品编号必须为6位数字'} != {'msg': '鉴权失败,请检查token是否失效'}
  {'code': 1002} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
  + {'code': 1002, 'msg': '商品编号必须为6位数字'}
2022-11-24 23:52:31,069 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-24 23:52:31,105 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:03:56,550 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 00:03:56,846 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:03:56,873 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:10:48,888 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-25 00:10:49,102 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:10:49,140 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:13:56,089 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-25 00:13:56,328 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:13:56,363 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:15:31,527 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-25 00:15:31,744 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:15:31,792 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:26:28,428 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 00:26:28,725 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:26:28,753 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:28:57,182 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 00:28:57,472 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:28:57,496 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:30:19,754 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 00:30:20,068 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 00:30:20,092 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 08:37:08,912 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 08:37:09,322 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 08:37:09,347 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 08:41:13,258 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 08:41:13,442 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 08:41:40,586 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-25 08:45:16,792 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-25 08:45:35,062 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-25 09:17:06,723 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-25 09:17:06,729 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-25 09:17:37,124 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 09:17:37,130 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-25 09:17:37,137 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-25 09:17:37,143 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-25 09:17:37,156 -[test_business_good_select02.py - 110] -ERROR:断言失败,期望结果为:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'},实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '巧克力泡泡花束', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 0}]}
2022-11-25 09:17:37,162 -[test_business_good_select02.py - 111] -ERROR:assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  {'code': 1000} != {'code': 1007}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '巧克力泡泡花束',
                    'num': 0,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (15 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select02.py", line 108, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  {'code': 1000} != {'code': 1007}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '巧克力泡泡花束',
                    'num': 0,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (15 lines hidden), use '-vv' to show
2022-11-25 09:17:37,232 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 09:17:37,238 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-25 09:17:37,243 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-25 09:17:37,249 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-25 09:17:37,255 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-25 09:17:37,262 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-25 09:17:37,269 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-25 09:17:37,277 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-25 09:17:37,285 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-25 09:20:38,209 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-25 09:20:38,215 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-25 09:20:38,220 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-25 09:20:38,226 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-25 09:20:38,232 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-25 09:20:38,237 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-25 09:20:38,242 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-25 09:20:38,250 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-25 09:34:58,411 -[test_business_good_select01.py - 65] -ERROR:断言失败，期望结果为:查询成功,实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '六个核桃', 'shopPrice': 52.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '方便面', 'shopPrice': 5.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '元气森林', 'shopPrice': 7.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '自嗨锅', 'shopPrice': 30.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '瑞幸咖啡', 'shopPrice': 30.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '气泡水12', 'shopPrice': 99999999.99, 'promotePrice': 0.0, 'num': 99999999}, {'goodsName': '巧克力泡泡', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '干脆面', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '巧克力泡泡花束', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 0}, {'goodsName': '香槟玫瑰', 'shopPrice': 0.1, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '羽绒服', 'shopPrice': 789.89, 'promotePrice': 0.0, 'num': 100}]}
2022-11-25 09:34:58,411 -[test_business_good_select01.py - 66] -ERROR:assert {'code': 1000, 'goods_tiems': [{'goodsName': '预留数据', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 100.0}, {'goodsName': '六个核桃', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 52.0}, {'goodsName': '方便面', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 5.0}, {'goodsName': '元气森林', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 7.0}, {'goodsName': '自嗨锅', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 30.0}, {'goodsName': '瑞幸咖啡', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 30.0}, ...], 'msg': '查询成功'} == '查询成功'
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 63, in test_goods_select
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1000, 'goods_tiems': [{'goodsName': '预留数据', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 100.0}, {'goodsName': '六个核桃', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 52.0}, {'goodsName': '方便面', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 5.0}, {'goodsName': '元气森林', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 7.0}, {'goodsName': '自嗨锅', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 30.0}, {'goodsName': '瑞幸咖啡', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 30.0}, ...], 'msg': '查询成功'} == '查询成功'
2022-11-25 09:34:58,477 -[test_business_good_select01.py - 65] -ERROR:断言失败，期望结果为:查询成功,实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '巧克力泡泡花束', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 0}]}
2022-11-25 09:34:58,477 -[test_business_good_select01.py - 66] -ERROR:assert (100000, '预留数据', 10000, '该数据为自动化预留数据请勿删除', 1000, datetime.datetime(2021, 1, 29, 16, 5, 9), ...) == 1
 +  where 1 = len([{'goodsName': '巧克力泡泡花束', 'num': 0, 'promotePrice': 0.0, 'shopPrice': 9.99}])
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 61, in test_goods_select
    assert db_count == len(res['goods_tiems'])
AssertionError: assert (100000, '预留数据', 10000, '该数据为自动化预留数据请勿删除', 1000, datetime.datetime(2021, 1, 29, 16, 5, 9), ...) == 1
 +  where 1 = len([{'goodsName': '巧克力泡泡花束', 'num': 0, 'promotePrice': 0.0, 'shopPrice': 9.99}])
2022-11-25 09:37:46,991 -[test_business_good_select01.py - 65] -ERROR:断言失败，期望结果为:查询成功,实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '六个核桃', 'shopPrice': 52.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '方便面', 'shopPrice': 5.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '元气森林', 'shopPrice': 7.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '自嗨锅', 'shopPrice': 30.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '瑞幸咖啡', 'shopPrice': 30.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '气泡水12', 'shopPrice': 99999999.99, 'promotePrice': 0.0, 'num': 99999999}, {'goodsName': '巧克力泡泡', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '干脆面', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '巧克力泡泡花束', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 0}, {'goodsName': '香槟玫瑰', 'shopPrice': 0.1, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '羽绒服', 'shopPrice': 789.89, 'promotePrice': 0.0, 'num': 100}]}
2022-11-25 09:37:46,991 -[test_business_good_select01.py - 66] -ERROR:assert {'code': 1000, 'goods_tiems': [{'goodsName': '预留数据', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 100.0}, {'goodsName': '六个核桃', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 52.0}, {'goodsName': '方便面', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 5.0}, {'goodsName': '元气森林', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 7.0}, {'goodsName': '自嗨锅', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 30.0}, {'goodsName': '瑞幸咖啡', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 30.0}, ...], 'msg': '查询成功'} == '查询成功'
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 63, in test_goods_select
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1000, 'goods_tiems': [{'goodsName': '预留数据', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 100.0}, {'goodsName': '六个核桃', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 52.0}, {'goodsName': '方便面', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 5.0}, {'goodsName': '元气森林', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 7.0}, {'goodsName': '自嗨锅', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 30.0}, {'goodsName': '瑞幸咖啡', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 30.0}, ...], 'msg': '查询成功'} == '查询成功'
2022-11-25 09:37:47,040 -[test_business_good_select01.py - 69] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-25 09:38:39,971 -[test_business_good_select01.py - 69] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-25 09:38:56,228 -[test_business_good_select01.py - 65] -ERROR:断言失败，期望结果为:查询成功,实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '六个核桃', 'shopPrice': 52.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '方便面', 'shopPrice': 5.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '元气森林', 'shopPrice': 7.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '自嗨锅', 'shopPrice': 30.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '瑞幸咖啡', 'shopPrice': 30.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '气泡水12', 'shopPrice': 99999999.99, 'promotePrice': 0.0, 'num': 99999999}, {'goodsName': '巧克力泡泡', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '干脆面', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 100}, {'goodsName': '巧克力泡泡花束', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 0}, {'goodsName': '香槟玫瑰', 'shopPrice': 0.1, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '羽绒服', 'shopPrice': 789.89, 'promotePrice': 0.0, 'num': 100}]}
2022-11-25 09:38:56,228 -[test_business_good_select01.py - 66] -ERROR:assert {'code': 1000, 'goods_tiems': [{'goodsName': '预留数据', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 100.0}, {'goodsName': '六个核桃', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 52.0}, {'goodsName': '方便面', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 5.0}, {'goodsName': '元气森林', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 7.0}, {'goodsName': '自嗨锅', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 30.0}, {'goodsName': '瑞幸咖啡', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 30.0}, ...], 'msg': '查询成功'} == '查询成功'
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 63, in test_goods_select
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1000, 'goods_tiems': [{'goodsName': '预留数据', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 100.0}, {'goodsName': '六个核桃', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 52.0}, {'goodsName': '方便面', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 5.0}, {'goodsName': '元气森林', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 7.0}, {'goodsName': '自嗨锅', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 30.0}, {'goodsName': '瑞幸咖啡', 'num': 1000, 'promotePrice': 0.0, 'shopPrice': 30.0}, ...], 'msg': '查询成功'} == '查询成功'
2022-11-25 09:49:43,644 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 09:50:30,181 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-25 09:50:45,052 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-25 09:50:45,057 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-25 09:50:55,143 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-25 09:50:55,148 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-25 09:50:55,152 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-25 09:51:07,507 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-25 09:51:07,513 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-25 09:51:07,517 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-25 09:51:07,521 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-25 09:51:07,527 -[test_business_good_select01.py - 81] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'},实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '巧克力泡泡花束', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 0}]}
2022-11-25 09:51:07,527 -[test_business_good_select01.py - 82] -ERROR:assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  {'code': 1000} != {'code': 1007}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '巧克力泡泡花束',
                    'num': 0,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (15 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 79, in test_goods_select
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  {'code': 1000} != {'code': 1007}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '巧克力泡泡花束',
                    'num': 0,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (15 lines hidden), use '-vv' to show
2022-11-25 09:51:34,638 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-25 09:51:34,643 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-25 09:51:34,648 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-25 09:51:34,652 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-25 09:51:34,657 -[test_business_good_select01.py - 81] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'},实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '巧克力泡泡花束', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 0}]}
2022-11-25 09:51:34,658 -[test_business_good_select01.py - 82] -ERROR:assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  {'code': 1000} != {'code': 1007}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '巧克力泡泡花束',
                    'num': 0,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (15 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 79, in test_goods_select
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  {'code': 1000} != {'code': 1007}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '巧克力泡泡花束',
                    'num': 0,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (15 lines hidden), use '-vv' to show
2022-11-25 09:51:34,706 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-25 09:51:34,711 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-25 09:51:34,715 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-25 09:51:34,720 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-25 09:51:34,726 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-25 09:51:34,731 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-25 09:51:34,736 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-25 09:51:34,740 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-25 09:51:34,746 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-25 10:09:14,617 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-25 10:09:14,622 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-25 10:09:14,627 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-25 10:09:14,631 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-25 10:09:14,637 -[test_business_good_select01.py - 81] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'},实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '巧克力泡泡花束', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 0}]}
2022-11-25 10:09:14,637 -[test_business_good_select01.py - 82] -ERROR:assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  {'code': 1000} != {'code': 1007}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '巧克力泡泡花束',
                    'num': 0,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (15 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 79, in test_goods_select
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  {'code': 1000} != {'code': 1007}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '巧克力泡泡花束',
                    'num': 0,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (15 lines hidden), use '-vv' to show
2022-11-25 10:09:14,705 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-25 10:09:14,736 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-25 10:09:14,741 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-25 10:09:14,746 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-25 10:09:14,752 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-25 10:09:14,758 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-25 10:09:14,764 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-25 10:09:14,770 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-25 10:09:14,776 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-25 10:27:07,935 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-25 10:27:07,942 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-25 10:27:07,949 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-25 10:27:07,955 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-25 10:27:07,962 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-25 10:27:07,969 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-25 10:27:07,975 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-25 10:27:07,982 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-25 10:27:07,989 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-25 10:27:07,996 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-25 10:27:08,002 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-25 10:27:08,009 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-25 10:27:08,016 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-25 10:27:08,023 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-25 10:27:08,031 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-25 10:27:08,039 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-25 10:27:08,048 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-25 10:27:08,055 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-25 10:27:08,062 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-25 10:27:08,070 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-25 10:27:08,078 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-25 10:27:08,085 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-25 10:27:08,092 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-25 10:27:08,100 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-25 10:27:08,107 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-25 10:27:08,114 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-25 10:27:08,122 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-25 10:27:08,129 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-25 10:27:08,136 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-25 10:27:08,143 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-25 10:27:08,151 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-25 10:27:08,158 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-25 10:27:08,169 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-25 10:27:08,178 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-25 10:27:08,185 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-25 10:27:08,193 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-25 10:27:08,202 -[test_business_good_select01.py - 81] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'},实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '巧克力泡泡花束', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 0}]}
2022-11-25 10:27:08,202 -[test_business_good_select01.py - 82] -ERROR:assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1007}
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '巧克力泡泡花束',
                    'num': 0,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (3 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 79, in test_goods_select
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1007}
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '巧克力泡泡花束',
                    'num': 0,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (3 lines hidden), use '-vv' to show
2022-11-25 10:27:08,255 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-25 10:27:08,262 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-25 10:27:08,268 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-25 10:27:08,275 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-25 10:27:08,284 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-25 10:27:08,292 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-25 10:27:08,299 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-25 10:27:08,306 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-25 10:27:08,315 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-25 10:27:08,324 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 10:27:08,334 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-25 10:27:08,342 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-25 10:27:08,351 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-25 10:27:08,367 -[test_business_good_select02.py - 110] -ERROR:断言失败,期望结果为:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'},实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '羽绒服', 'shopPrice': 789.89, 'promotePrice': 0.0, 'num': 100}]}
2022-11-25 10:27:08,367 -[test_business_good_select02.py - 111] -ERROR:assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1007}
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '羽绒服',
                    'num': 100,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (3 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select02.py", line 108, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1007}
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '羽绒服',
                    'num': 100,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (3 lines hidden), use '-vv' to show
2022-11-25 10:27:08,384 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 10:27:08,391 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-25 10:27:08,398 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-25 10:27:08,406 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-25 10:27:08,415 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-25 10:27:08,423 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-25 10:27:08,432 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-25 10:27:08,440 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-25 10:27:08,475 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-25 12:29:57,024 -[test_business_register.py - 37] -INFO:运行成功,测试编号为:1,测试场景:注册-正确流程
2022-11-25 12:32:25,467 -[test_business_register.py - 37] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程
2022-11-25 12:39:51,690 -[test_business_register.py - 37] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程
2022-11-25 12:49:04,562 -[test_business_register.py - 41] -INFO:运行成功,测试编号为:2,测试场景:business注册-用户名为空
2022-11-25 12:52:46,361 -[test_business_register.py - 41] -INFO:运行成功,测试编号为:2,测试场景:business注册-用户名为空
2022-11-25 12:58:55,242 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:2,测试场景:business注册-用户名为空
2022-11-25 13:00:18,920 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(均不填）
2022-11-25 13:00:18,924 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:2,测试场景:business注册-用户名为空
2022-11-25 14:06:46,097 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:06:46,236 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:07:37,771 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:07:37,777 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:07:37,781 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:09:36,968 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:09:37,120 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:09:37,124 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名为空
2022-11-25 14:09:48,976 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:09:49,116 -[test_business_register.py - 43] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:14:12,211 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:14:12,221 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:14:12,227 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:14:14,362 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:14:14,368 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:14:14,371 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:14:59,028 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:14:59,059 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:14:59,064 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:14:59,067 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误
2022-11-25 14:16:38,091 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:16:38,097 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:16:38,100 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:16:38,104 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:16:38,107 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:19:06,951 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:19:06,967 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:19:06,971 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:19:06,975 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:19:06,978 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:19:06,981 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:20:37,206 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:20:37,229 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:20:37,233 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:20:37,237 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:20:37,241 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:20:37,244 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:20:37,249 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:21:11,640 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:21:11,647 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:21:11,652 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:21:11,656 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:21:11,659 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:21:11,663 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:21:11,667 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:21:11,673 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-已注册用户名
2022-11-25 14:21:21,245 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:21:21,251 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:21:21,255 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:21:21,258 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:21:21,261 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:21:21,264 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:21:21,269 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:21:21,274 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-已注册用户名
2022-11-25 14:21:24,688 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:21:24,694 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:21:24,699 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:21:24,703 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:21:24,706 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:21:24,709 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:21:24,714 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:21:24,718 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-已注册用户名
2022-11-25 14:22:11,798 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:22:11,807 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:22:11,815 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:22:11,820 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:22:11,826 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:22:11,832 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:22:11,839 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:22:11,847 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-已注册用户名
2022-11-25 14:22:12,785 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:22:12,792 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:22:12,795 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:22:12,799 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:22:12,802 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:22:12,806 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:22:12,810 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:22:12,814 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-已注册用户名
2022-11-25 14:22:16,184 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:22:16,190 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:22:16,194 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:22:16,198 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:22:16,201 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:22:16,204 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:22:16,209 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:22:16,214 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-已注册用户名
2022-11-25 14:24:13,368 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:24:13,375 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:24:13,379 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:24:13,384 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:24:13,389 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:24:13,393 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:24:13,398 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:24:13,404 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-已注册用户名
2022-11-25 14:24:18,030 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:24:18,035 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:24:18,039 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:24:18,042 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:24:18,046 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:24:18,049 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:24:18,066 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:24:18,071 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-已注册用户名
2022-11-25 14:29:16,748 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:29:16,777 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:29:16,781 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:29:16,785 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:29:16,788 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:29:16,791 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:29:16,797 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:29:16,801 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:31:38,312 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:31:38,342 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:31:38,345 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:31:38,349 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:31:38,352 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:31:38,355 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:31:38,360 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:31:38,365 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:31:38,369 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 14:31:38,372 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 14:33:50,459 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:33:50,465 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:33:50,469 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:33:50,472 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:33:50,475 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:33:50,478 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:33:50,483 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:33:50,486 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:33:50,489 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 14:33:50,492 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 14:33:50,496 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 14:34:49,660 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:34:49,667 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:34:49,671 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:34:49,674 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:34:49,677 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:34:49,681 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:34:49,686 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:34:49,690 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:34:49,695 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 14:34:49,698 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 14:34:49,702 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 14:34:49,705 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:12,测试场景:business注册-密码纯字母
2022-11-25 14:35:22,134 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:35:22,140 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:35:22,144 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:35:22,147 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:35:22,151 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:35:22,155 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:6,测试场景:business注册-用户名字母+数字+其他符号
2022-11-25 14:35:22,159 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:35:22,162 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:35:22,166 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 14:35:22,169 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 14:35:22,172 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 14:35:22,175 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:12,测试场景:business注册-密码纯字母
2022-11-25 14:37:35,758 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:37:35,764 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:37:35,767 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:37:35,770 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:37:35,774 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:37:35,916 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:37:35,920 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:37:35,924 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 14:37:35,928 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 14:37:35,932 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 14:37:35,936 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:12,测试场景:business注册-密码纯字母
2022-11-25 14:37:35,940 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:13,测试场景:business注册-用户名纯字母
2022-11-25 14:39:39,959 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:39:39,965 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:39:39,968 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:39:39,971 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:39:39,975 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:39:40,122 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:39:40,126 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:39:40,130 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 14:39:40,134 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 14:39:40,137 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 14:39:40,141 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:12,测试场景:business注册-密码纯字母
2022-11-25 14:39:40,145 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:13,测试场景:business注册-用户名纯字母
2022-11-25 14:40:15,802 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:40:15,809 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:40:15,812 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:40:15,815 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:40:15,819 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:40:15,961 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:40:15,965 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:40:15,969 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 14:40:15,972 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 14:40:15,976 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 14:40:15,980 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:12,测试场景:business注册-密码纯字母
2022-11-25 14:40:15,984 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:13,测试场景:business注册-用户名纯字母
2022-11-25 14:41:00,605 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:41:00,611 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:41:00,615 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:41:00,618 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:41:00,622 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:41:00,763 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:41:00,767 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:41:00,771 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 14:41:00,775 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 14:41:00,778 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 14:41:00,782 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:12,测试场景:business注册-密码纯字母
2022-11-25 14:41:00,786 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:13,测试场景:business注册-用户名纯字母
2022-11-25 14:41:00,789 -[test_business_register.py - 45] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 14:45:02,046 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:45:02,077 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:45:02,081 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:45:02,085 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:45:02,089 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:45:02,239 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:45:02,244 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:45:02,247 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 14:45:02,251 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 14:45:02,255 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 14:45:02,258 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:12,测试场景:business注册-密码纯字母
2022-11-25 14:45:02,262 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:13,测试场景:business注册-用户名纯字母
2022-11-25 14:45:02,266 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 14:45:02,269 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 14:45:02,274 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 14:54:06,380 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:54:06,386 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:54:06,392 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:54:06,396 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:54:06,400 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:54:06,545 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:54:06,549 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:54:06,553 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 14:54:06,557 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 14:54:06,561 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 14:54:06,673 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 14:54:06,677 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 14:54:06,680 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 14:54:06,684 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 14:54:06,688 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 14:54:06,691 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 14:55:17,847 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:55:17,854 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:55:17,857 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:55:17,861 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:55:17,866 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:55:18,016 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:55:18,020 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:55:18,025 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 14:55:18,029 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 14:55:18,033 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 14:55:18,131 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 14:55:18,135 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 14:55:18,139 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 14:55:18,143 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 14:55:18,147 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 14:55:18,150 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 14:57:27,642 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 14:57:27,649 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 14:57:27,653 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 14:57:27,657 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 14:57:27,662 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 14:57:27,807 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 14:57:27,811 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 14:57:27,815 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 14:57:27,819 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 14:57:27,824 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 14:57:27,922 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 14:57:27,926 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 14:57:27,929 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 14:57:27,934 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 14:57:27,938 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 14:57:27,942 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 14:58:15,774 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 14:58:15,781 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-25 14:58:15,787 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-25 14:58:15,793 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-25 14:58:15,804 -[test_business_good_select02.py - 110] -ERROR:断言失败,期望结果为:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'},实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '巧克力泡泡', 'shopPrice': 9.99, 'promotePrice': 0.0, 'num': 100}]}
2022-11-25 14:58:15,804 -[test_business_good_select02.py - 111] -ERROR:assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1007}
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '巧克力泡泡',
                    'num': 100,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (15 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select02.py", line 108, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1007}
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '巧克力泡泡',
                    'num': 100,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (15 lines hidden), use '-vv' to show
2022-11-25 14:58:15,857 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 14:58:15,863 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-25 14:58:15,868 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-25 14:58:15,875 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-25 14:58:15,882 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-25 14:58:15,888 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-25 14:58:15,895 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-25 14:58:15,901 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-25 14:58:15,908 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-25 14:58:43,985 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 14:58:43,992 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-25 14:58:43,997 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-25 14:58:44,002 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-25 14:58:44,014 -[test_business_good_select02.py - 110] -ERROR:断言失败,期望结果为:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'},实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '羽绒服', 'shopPrice': 789.89, 'promotePrice': 0.0, 'num': 100}]}
2022-11-25 14:58:44,014 -[test_business_good_select02.py - 111] -ERROR:assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1007}
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '羽绒服',
                    'num': 100,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (15 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select02.py", line 108, in test_goods_select
    assert res == case["expect"]  # 验证响应结果和期望结果一致
AssertionError: assert {'code': 1000...'msg': '查询成功'} == {'code': 1007...请检查token是否失效'}
  Differing items:
  {'code': 1000} != {'code': 1007}
  {'msg': '查询成功'} != {'msg': '鉴权失败,请检查token是否失效'}
  Left contains 1 more item:
  {'goods_tiems': [{'goodsName': '羽绒服',
                    'num': 100,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (15 lines hidden), use '-vv' to show
2022-11-25 14:58:44,088 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 14:58:44,118 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-25 14:58:44,123 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-25 14:58:44,129 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-25 14:58:44,135 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-25 14:58:44,140 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-25 14:58:44,147 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-25 14:58:44,155 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-25 14:58:44,162 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-25 14:59:17,982 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 14:59:18,144 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 15:08:23,178 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 15:08:23,189 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 15:08:23,197 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 15:08:23,203 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 15:08:23,210 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 15:08:23,480 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 15:08:23,486 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 15:08:23,493 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 15:08:23,498 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 15:08:23,610 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 15:08:23,617 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 15:08:23,624 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 15:08:23,748 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 15:08:23,755 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 15:08:30,979 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 15:08:30,989 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 15:08:30,996 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 15:08:31,003 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 15:08:31,010 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 15:08:31,263 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 15:08:31,269 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 15:08:31,275 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 15:08:31,281 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 15:08:31,389 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 15:08:31,414 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 15:08:31,421 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 15:08:31,575 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 15:08:31,582 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 15:09:06,294 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 15:09:06,303 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 15:09:06,311 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 15:09:06,318 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 15:09:06,324 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 15:09:06,589 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 15:09:06,597 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 15:09:06,603 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 15:09:06,611 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 15:09:06,722 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 15:09:06,729 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 15:09:06,736 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 15:09:06,862 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 15:09:06,868 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 15:10:11,298 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 15:10:11,304 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 15:10:11,308 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 15:10:11,312 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 15:10:11,316 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 15:10:11,571 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 15:10:11,575 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 15:10:11,578 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 15:10:11,582 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 15:10:11,685 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 15:10:11,690 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 15:10:11,694 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 15:10:11,814 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 15:10:11,817 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 15:11:53,999 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 15:11:54,007 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 15:11:54,011 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 15:11:54,015 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 15:11:54,018 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 15:11:54,261 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 15:11:54,265 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 15:11:54,269 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 15:11:54,272 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 15:11:54,373 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 15:11:54,378 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 15:11:54,383 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 15:11:54,502 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 15:11:54,507 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 15:11:58,794 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 15:11:58,802 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 15:11:58,806 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 15:11:58,809 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 15:11:58,812 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 15:11:59,072 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 15:11:59,075 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 15:11:59,079 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 15:11:59,083 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 15:11:59,182 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 15:11:59,187 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 15:11:59,191 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 15:11:59,308 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 15:11:59,312 -[test_business_register.py - 47] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 15:25:38,760 -[test_business_register.py - 48] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 15:33:32,191 -[test_business_register.py - 48] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 15:33:44,326 -[test_business_register.py - 48] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 15:33:44,333 -[test_business_register.py - 48] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 15:33:44,337 -[test_business_register.py - 48] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 15:54:21,461 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 15:56:01,402 -[test_business_register.py - 50] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 15:59:11,175 -[test_business_register.py - 48] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 16:07:53,028 -[test_business_register.py - 48] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 16:07:54,236 -[test_business_register.py - 48] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 16:11:39,293 -[test_business_register.py - 48] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 16:11:40,246 -[test_business_register.py - 48] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 16:12:54,134 -[test_business_register.py - 48] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含com或者cn
2022-11-25 16:13:23,909 -[test_business_register.py - 48] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 16:27:51,991 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 16:28:16,092 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 16:28:31,995 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 16:28:32,003 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 16:28:32,007 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 16:28:32,011 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 16:28:32,015 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 16:28:32,157 -[test_business_register.py - 51] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 16:30:57,862 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 16:30:57,870 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 16:30:57,874 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 16:30:57,878 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 16:30:57,881 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 16:30:58,027 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 16:31:30,867 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 16:32:10,002 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 16:32:10,007 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 16:37:22,626 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 16:37:22,632 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 16:37:26,404 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 16:37:26,409 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 16:43:17,092 -[test_business_register.py - 49] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 16:49:10,044 -[test_business_register.py - 53] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 17:05:28,629 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:07:20,230 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:08:45,056 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:10:37,392 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:12:01,247 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:12:01,252 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-25 17:12:50,512 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 17:12:50,517 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 17:12:50,521 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 17:12:50,525 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 17:12:50,528 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 17:12:50,781 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 17:12:50,785 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 17:12:50,789 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 17:12:50,792 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 17:12:50,890 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 17:12:50,895 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 17:12:50,899 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 17:12:50,904 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 17:12:50,909 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 17:12:50,915 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 17:12:50,920 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 17:12:51,036 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:12:51,138 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 17:12:51,144 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 17:13:39,656 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 17:13:39,798 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 17:13:39,803 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 17:13:39,807 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 17:13:40,026 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 17:13:40,031 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 17:13:40,034 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 17:13:40,037 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 17:13:40,152 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 17:13:40,156 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 17:13:40,159 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 17:13:40,164 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 17:13:40,167 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 17:13:40,171 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 17:13:40,174 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 17:13:40,269 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:13:40,275 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-25 17:13:40,281 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 17:13:40,288 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 17:15:59,296 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 17:15:59,718 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 17:15:59,726 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 17:15:59,734 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 17:16:00,437 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 17:16:00,444 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 17:16:00,450 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 17:16:00,456 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 17:16:00,801 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 17:16:00,808 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 17:16:00,814 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 17:16:00,822 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 17:16:00,829 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 17:16:00,836 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 17:16:00,842 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 17:16:01,186 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:16:01,194 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-25 17:16:01,201 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 17:16:01,207 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 17:16:02,085 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 17:16:02,258 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 17:16:02,263 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 17:16:02,267 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 17:16:02,463 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 17:16:02,466 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 17:16:02,470 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 17:16:02,474 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 17:16:02,598 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 17:16:02,601 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 17:16:02,605 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 17:16:02,610 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 17:16:02,615 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 17:16:02,618 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 17:16:02,622 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 17:16:02,720 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:16:02,726 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-25 17:16:02,732 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 17:16:02,736 -[test_business_register.py - 59] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 17:19:24,329 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 17:19:24,337 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 17:19:24,341 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 17:19:24,345 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 17:19:24,348 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 17:19:24,592 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 17:19:24,597 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 17:19:24,601 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 17:19:24,605 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 17:19:24,703 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 17:19:24,707 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 17:19:24,712 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 17:19:24,828 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 17:19:24,833 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 17:19:24,837 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 17:19:24,934 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:19:24,940 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-25 17:19:24,944 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 17:19:24,948 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 17:22:01,765 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 17:22:01,772 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 17:22:01,776 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 17:22:01,779 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 17:22:01,783 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 17:22:02,042 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 17:22:02,046 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 17:22:02,050 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 17:22:02,053 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 17:22:02,159 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 17:22:02,163 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 17:22:02,169 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 17:22:02,288 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 17:22:02,294 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 17:22:02,298 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 17:22:02,400 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:22:02,406 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-25 17:22:02,410 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 17:22:02,415 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 17:22:33,243 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 17:22:33,381 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 17:22:33,385 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 17:22:33,389 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 17:22:33,583 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 17:22:33,588 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 17:22:33,593 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 17:22:33,599 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 17:22:33,714 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 17:22:33,718 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 17:22:33,721 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 17:22:33,828 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 17:22:33,832 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 17:22:33,836 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 17:22:33,935 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:22:33,959 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-25 17:22:33,964 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 17:22:33,968 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 17:29:31,121 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 17:29:31,129 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 17:29:31,133 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 17:29:31,136 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 17:29:31,139 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 17:29:31,377 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 17:29:31,380 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 17:29:31,383 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 17:29:31,387 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 17:29:31,483 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 17:29:31,487 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 17:29:31,491 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 17:29:31,497 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 17:29:31,501 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 17:29:31,505 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 17:29:31,509 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 17:29:31,625 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:29:31,630 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-25 17:29:31,635 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 17:29:31,638 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 17:30:28,941 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 17:30:28,949 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 17:30:28,952 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 17:30:28,955 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 17:30:28,959 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 17:30:29,197 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 17:30:29,201 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 17:30:29,205 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 17:30:29,208 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 17:30:29,305 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 17:30:29,309 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 17:30:29,313 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 17:30:29,319 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 17:30:29,322 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 17:30:29,326 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 17:30:29,330 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 17:30:29,443 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:30:29,448 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-25 17:30:29,454 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 17:30:29,457 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 17:32:46,896 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 17:32:46,903 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 17:32:46,907 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 17:32:46,910 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 17:32:46,914 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 17:32:47,062 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 17:32:47,066 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 17:32:47,070 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 17:32:47,074 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 17:32:47,078 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 17:32:47,172 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 17:32:47,176 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 17:32:47,179 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 17:32:47,184 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 17:32:47,187 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 17:32:47,191 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 17:32:47,194 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 17:32:47,288 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:32:47,296 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-25 17:32:47,302 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 17:32:47,306 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 17:39:19,160 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 17:39:19,167 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 17:39:19,171 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 17:39:19,174 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 17:39:19,178 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 17:39:19,327 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 17:39:19,331 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 17:39:19,335 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 17:39:19,338 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 17:39:19,341 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 17:39:19,439 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 17:39:19,442 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 17:39:19,446 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 17:39:19,451 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 17:39:19,454 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 17:39:19,457 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 17:39:19,461 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 17:39:19,557 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:39:19,563 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-25 17:39:19,569 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 17:39:19,575 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 17:56:09,743 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-25 17:56:09,750 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-25 17:56:09,754 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-25 17:56:09,757 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-25 17:56:09,761 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-25 17:56:09,902 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-25 17:56:09,906 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-25 17:56:09,910 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-25 17:56:09,913 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-25 17:56:09,917 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-25 17:56:10,019 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-25 17:56:10,023 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-25 17:56:10,026 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-25 17:56:10,032 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-25 17:56:10,035 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-25 17:56:10,038 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-25 17:56:10,041 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-25 17:56:10,148 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-25 17:56:10,153 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-25 17:56:10,159 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-25 17:56:10,164 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-25 20:37:48,555 -[test_goods_input.py - 47] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 20:46:46,566 -[test_goods_input.py - 51] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 20:59:13,635 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-25 20:59:13,641 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-25 20:59:13,646 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-25 20:59:13,669 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-25 20:59:13,705 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-25 20:59:13,711 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-25 20:59:13,716 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-25 20:59:13,721 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-25 20:59:13,726 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-25 20:59:13,732 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-25 20:59:13,737 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-25 20:59:13,742 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-25 20:59:13,748 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-25 20:59:13,755 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-25 20:59:19,902 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:07:31,887 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-正确流程
2022-11-25 21:08:39,068 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-正确流程
2022-11-25 21:09:29,646 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:09:29,654 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-正确流程
2022-11-25 21:10:07,088 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:10:41,525 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:10:41,533 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:10:41,538 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-正确流程
2022-11-25 21:10:57,154 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:10:57,164 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:10:57,171 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-正确流程
2022-11-25 21:17:20,548 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:17:20,557 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:17:20,721 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-25 21:17:20,742 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-25 21:21:07,097 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:21:07,106 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:21:07,251 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-25 21:21:07,258 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-25 21:23:52,460 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:23:52,481 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:23:52,489 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-25 21:23:52,495 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-25 21:23:52,502 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-25 21:24:43,769 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:24:43,778 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:24:43,786 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-25 21:24:43,793 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-25 21:24:43,802 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-25 21:30:24,539 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:30:24,547 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:30:24,555 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-25 21:30:24,562 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-25 21:30:24,568 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-25 21:30:24,575 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:30:24,581 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:35:29,497 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:35:29,505 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:35:29,513 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-25 21:35:29,519 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-25 21:35:29,526 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-25 21:35:29,533 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:35:29,540 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:35:29,548 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-25 21:37:52,464 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:37:52,472 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:37:52,479 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-25 21:37:52,486 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-25 21:37:52,494 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-25 21:37:52,501 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:37:52,509 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:37:52,516 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-25 21:37:52,524 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-25 21:39:29,573 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:39:29,582 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:39:29,590 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-25 21:39:29,596 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-25 21:39:29,603 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-25 21:39:29,611 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:39:29,618 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:39:29,625 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-25 21:39:29,633 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-25 21:39:29,642 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-25 21:43:24,610 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:43:24,618 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:43:24,655 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-25 21:43:24,662 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-25 21:43:24,687 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-25 21:43:24,694 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:43:24,701 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:43:24,710 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-25 21:43:24,718 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-25 21:43:24,725 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-25 21:43:24,731 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-25 21:43:24,738 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-25 21:43:24,745 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-25 21:48:08,358 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:48:08,366 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:48:08,374 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-25 21:48:08,380 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-25 21:48:08,387 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-25 21:48:08,394 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:48:08,402 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:48:08,410 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-25 21:48:08,417 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-25 21:48:08,425 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-25 21:48:08,432 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-25 21:48:08,440 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-25 21:48:08,447 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-25 21:50:38,407 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 21:50:38,415 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 21:50:38,423 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-25 21:50:38,429 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-25 21:50:38,437 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-25 21:50:38,444 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:50:38,451 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-25 21:50:38,459 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-25 21:50:38,467 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-25 21:50:38,475 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-25 21:50:38,482 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-25 21:50:38,488 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-25 21:50:38,496 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-25 22:04:32,620 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-25 22:04:32,624 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-25 22:04:32,628 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-25 22:04:32,633 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-25 22:04:32,637 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-25 22:04:32,641 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-25 22:04:32,645 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-25 22:04:32,649 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-25 22:05:54,091 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-25 22:05:54,099 -[test_business_good_select01.py - 81] -ERROR:断言失败，期望结果为:查询成功,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2022-11-25 22:05:54,099 -[test_business_good_select01.py - 82] -ERROR:assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 59, in test_goods_select
    assert res['msg'] == case['expect'] and 1 == len(res['goods_tiems'])
AssertionError: assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
2022-11-25 22:05:54,153 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-25 22:05:54,159 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-25 22:05:54,163 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-25 22:05:54,169 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-25 22:05:54,173 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-25 22:05:54,177 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-25 22:05:54,184 -[test_business_good_select01.py - 81] -ERROR:断言失败，期望结果为:查询成功,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2022-11-25 22:05:54,184 -[test_business_good_select01.py - 82] -ERROR:assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 59, in test_goods_select
    assert res['msg'] == case['expect'] and 1 == len(res['goods_tiems'])
AssertionError: assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
2022-11-25 22:05:54,196 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-25 22:05:54,202 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-25 22:05:54,207 -[test_business_good_select01.py - 81] -ERROR:断言失败，期望结果为:查询成功,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2022-11-25 22:05:54,207 -[test_business_good_select01.py - 82] -ERROR:assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 59, in test_goods_select
    assert res['msg'] == case['expect'] and 1 == len(res['goods_tiems'])
AssertionError: assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
2022-11-25 22:05:54,218 -[test_business_good_select01.py - 81] -ERROR:断言失败，期望结果为:查询成功,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2022-11-25 22:05:54,218 -[test_business_good_select01.py - 82] -ERROR:assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 59, in test_goods_select
    assert res['msg'] == case['expect'] and 1 == len(res['goods_tiems'])
AssertionError: assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
2022-11-25 22:05:54,229 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-25 22:35:42,304 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-25 22:35:42,312 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-25 22:35:42,319 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-25 22:35:42,326 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-25 22:35:42,333 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-25 22:35:42,340 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-25 22:35:42,347 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-25 22:35:42,355 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-25 22:35:42,362 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-25 22:35:42,369 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-25 22:35:42,375 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-25 22:35:42,382 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-25 22:35:42,389 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-25 22:35:42,398 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 09:48:21,957 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-27 09:48:21,965 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-27 09:48:21,972 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-27 09:48:21,977 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-27 09:48:21,984 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-27 09:48:21,991 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-27 09:48:21,998 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-27 09:48:22,007 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-27 09:48:22,014 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-27 09:48:22,021 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-27 09:48:22,046 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-27 09:48:22,053 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-27 09:48:22,094 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-27 09:48:22,103 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 09:51:21,812 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 09:51:21,821 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-27 09:52:44,960 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-27 09:54:55,077 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-27 09:55:21,051 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-27 09:55:21,058 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-27 09:59:49,937 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-27 10:01:50,862 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-27 11:10:12,488 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-27 11:10:12,497 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-27 11:10:12,504 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-27 11:10:12,511 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-27 11:10:12,518 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-27 11:10:12,525 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-27 11:10:12,533 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-27 11:10:12,540 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-27 11:10:12,547 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-27 11:10:12,553 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-27 11:10:12,560 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-27 11:10:12,567 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-27 11:10:12,573 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-27 11:10:12,581 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 11:10:12,591 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-27 11:10:12,600 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-27 11:10:12,618 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-27 11:10:12,625 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-27 11:10:12,858 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-27 11:10:12,865 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-27 11:12:48,205 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-27 11:12:48,214 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-27 11:12:48,221 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-27 11:12:48,227 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-27 11:12:48,234 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-27 11:12:48,241 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-27 11:12:48,264 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-27 11:12:48,296 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-27 11:12:48,304 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-27 11:12:48,311 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-27 11:12:48,318 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-27 11:12:48,325 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-27 11:12:48,342 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-27 11:12:48,352 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 11:12:48,365 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-27 11:12:48,373 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-27 11:12:48,381 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-27 11:12:48,389 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-27 11:12:48,567 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-27 11:12:48,575 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-27 11:20:23,088 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-27 11:20:23,095 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-27 11:20:23,099 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-27 11:20:23,102 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-27 11:20:23,105 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-27 11:20:23,252 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-27 11:20:23,256 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-27 11:20:23,261 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-27 11:20:23,266 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-27 11:20:23,270 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-27 11:20:23,373 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-27 11:20:23,376 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-27 11:20:23,381 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-27 11:20:23,387 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-27 11:20:23,391 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-27 11:20:23,395 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-27 11:20:23,398 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-27 11:20:23,498 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-27 11:20:23,504 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-27 11:20:23,509 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-27 11:20:23,513 -[test_business_register.py - 62] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-27 11:23:34,426 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-27 11:23:34,434 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-27 11:23:34,438 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-27 11:23:34,441 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-27 11:23:34,445 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-27 11:23:34,586 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-27 11:23:34,590 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-27 11:23:34,594 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-27 11:23:34,598 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-27 11:23:34,601 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-27 11:23:34,701 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-27 11:23:34,705 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-27 11:23:34,709 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-27 11:23:34,729 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-27 11:23:34,733 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-27 11:23:34,737 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-27 11:23:34,740 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-27 11:23:34,849 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-27 11:23:34,873 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-27 11:23:34,878 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-27 11:23:34,882 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-27 11:35:06,159 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-27 11:35:06,165 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-27 11:35:06,169 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-27 11:35:06,172 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-27 11:35:06,176 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-27 11:35:06,322 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-27 11:35:06,327 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-27 11:35:06,330 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-27 11:35:06,334 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-27 11:35:06,338 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-27 11:35:06,439 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-27 11:35:06,443 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-27 11:35:06,446 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-27 11:35:06,452 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-27 11:35:06,456 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-27 11:35:06,459 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-27 11:35:06,462 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-27 11:35:06,561 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-27 11:35:06,584 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-27 11:35:06,590 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-27 11:35:06,594 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-27 11:35:10,662 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-27 11:35:10,671 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-27 11:35:10,675 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-27 11:35:10,679 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-27 11:35:10,682 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-27 11:35:10,833 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-27 11:35:10,837 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-27 11:35:10,841 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-27 11:35:10,845 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-27 11:35:10,849 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-27 11:35:10,966 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-27 11:35:10,969 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-27 11:35:10,973 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-27 11:35:10,978 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-27 11:35:10,981 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-27 11:35:10,984 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-27 11:35:10,987 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-27 11:35:11,085 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-27 11:35:11,091 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-27 11:35:11,097 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-27 11:35:11,100 -[test_business_register.py - 64] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-27 11:37:27,057 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-27 11:37:27,065 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-27 11:37:27,071 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-27 11:37:27,074 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-27 11:37:27,078 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-27 11:37:27,222 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-27 11:37:27,228 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-27 11:37:27,232 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-27 11:37:27,237 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-27 11:37:27,241 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-27 11:37:27,342 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-27 11:37:27,346 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-27 11:37:27,350 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-27 11:37:27,369 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-27 11:37:27,373 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-27 11:37:27,378 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-27 11:37:27,382 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-27 11:37:27,482 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-27 11:37:27,487 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-27 11:37:27,491 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-27 11:37:27,496 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-27 11:37:46,998 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-27 11:37:47,006 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-27 11:37:47,010 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-27 11:37:47,013 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-27 11:37:47,017 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-27 11:37:47,194 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-27 11:37:47,200 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-27 11:37:47,204 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-27 11:37:47,208 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-27 11:37:47,212 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-27 11:37:47,313 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-27 11:37:47,317 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-27 11:37:47,321 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-27 11:37:47,325 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-27 11:37:47,329 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-27 11:37:47,334 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-27 11:37:47,338 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-27 11:37:47,443 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-27 11:37:47,449 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-27 11:37:47,453 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-27 11:37:47,457 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-27 11:37:50,738 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-27 11:37:50,746 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-27 11:37:50,750 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-27 11:37:50,754 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-27 11:37:50,757 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-27 11:37:50,906 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-27 11:37:50,912 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-27 11:37:50,917 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-27 11:37:50,921 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-27 11:37:50,924 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-27 11:37:51,023 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-27 11:37:51,027 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-27 11:37:51,031 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-27 11:37:51,036 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-27 11:37:51,039 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-27 11:37:51,044 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-27 11:37:51,048 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-27 11:37:51,151 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-27 11:37:51,156 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-27 11:37:51,160 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-27 11:37:51,164 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-27 11:40:26,460 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-27 11:40:26,480 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-27 11:40:26,487 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-27 11:40:26,495 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-27 11:40:26,502 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-27 11:40:26,509 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-27 11:40:26,516 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-27 11:40:26,523 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-27 11:40:26,530 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-27 11:40:26,537 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-27 11:40:26,543 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-27 11:40:26,550 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-27 11:40:26,557 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-27 11:40:26,568 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 11:40:26,579 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-27 11:40:26,588 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-27 11:40:26,595 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-27 11:40:26,603 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-27 11:40:26,784 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-27 11:40:26,792 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-27 15:42:35,516 -[test_goods_promote.py - 55] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 15:45:36,563 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 15:50:24,854 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 15:50:24,879 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:None,测试场景:促销设置-token为空
2022-11-27 15:50:28,550 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 15:50:28,558 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:None,测试场景:促销设置-token为空
2022-11-27 15:51:38,936 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 15:51:38,944 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 15:51:38,952 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 15:52:15,787 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 15:52:15,794 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 15:52:15,801 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 15:52:15,808 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 15:54:35,582 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 15:54:35,590 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 15:54:35,598 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 15:54:35,607 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 15:54:35,616 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 15:54:35,624 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 15:54:35,632 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间比当前时间小
2022-11-27 15:56:36,334 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 15:56:36,341 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 15:56:36,346 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 15:56:36,355 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 15:56:36,361 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 15:56:36,367 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 16:11:45,106 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-27 16:11:45,114 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-27 16:11:45,122 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-27 16:11:45,128 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-27 16:11:45,136 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-27 16:11:45,143 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-27 16:11:45,150 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-27 16:11:45,180 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-27 16:11:45,187 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-27 16:11:45,211 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-27 16:11:45,243 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-27 16:11:45,251 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-27 16:11:45,259 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-27 16:11:45,270 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 16:11:45,282 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-27 16:11:45,291 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-27 16:11:45,299 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-27 16:11:45,307 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-27 16:11:45,464 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-27 16:11:45,472 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-27 16:12:04,682 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-27 16:12:04,691 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-27 16:12:04,698 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-27 16:12:04,704 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-27 16:12:04,711 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-27 16:12:04,718 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-27 16:12:04,724 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-27 16:12:04,742 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-27 16:12:04,748 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-27 16:12:04,755 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-27 16:12:04,762 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-27 16:12:04,790 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-27 16:12:04,835 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-27 16:12:04,846 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 16:12:04,857 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-27 16:12:04,884 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-27 16:12:04,892 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-27 16:12:04,900 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-27 16:12:05,058 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-27 16:12:05,067 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-27 16:14:23,288 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-27 16:14:23,311 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-27 16:14:23,319 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-27 16:14:23,325 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-27 16:14:23,332 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-27 16:14:23,339 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-27 16:14:23,346 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-27 16:14:23,354 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-27 16:14:23,361 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-27 16:14:23,367 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-27 16:14:23,375 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-27 16:14:23,382 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-27 16:14:23,389 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-27 16:14:23,399 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 16:14:23,411 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-27 16:14:23,420 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-27 16:14:23,427 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-27 16:14:23,436 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-27 16:14:23,600 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-27 16:14:23,609 -[test_goods_input.py - 58] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-27 16:15:01,203 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-27 16:15:01,209 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-27 16:15:01,215 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-27 16:15:01,221 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-27 16:15:01,226 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-27 16:15:01,231 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-27 16:15:01,236 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-27 16:15:01,241 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-27 16:15:01,245 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-27 16:15:01,250 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-27 16:15:01,256 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-27 16:15:01,262 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-27 16:15:01,268 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-27 16:15:01,275 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 16:15:01,283 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-27 16:15:01,288 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-27 16:15:01,293 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-27 16:15:01,298 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-27 16:15:01,469 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-27 16:15:01,475 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-27 16:18:51,249 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-27 16:18:51,256 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-27 16:18:51,260 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-27 16:18:51,266 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-27 16:18:51,270 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-27 16:18:51,274 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-27 16:18:51,278 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-27 16:18:51,283 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-27 16:18:51,287 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-27 16:18:51,290 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-27 16:18:51,295 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-27 16:18:51,299 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-27 16:18:51,303 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-27 16:18:51,308 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 16:18:51,316 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-27 16:18:51,322 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-27 16:18:51,326 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-27 16:18:51,331 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-27 16:18:51,483 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-27 16:18:51,488 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-27 16:20:42,940 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-27 16:20:42,946 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-27 16:20:42,952 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-27 16:20:42,957 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-27 16:20:42,967 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-27 16:20:42,972 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-27 16:20:42,977 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-27 16:20:42,984 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-27 16:20:42,990 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-27 16:20:42,996 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-27 16:20:43,001 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-27 16:20:43,007 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-27 16:20:43,012 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-27 16:20:43,020 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-27 16:21:30,719 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 16:21:30,726 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 16:21:30,732 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 16:21:30,740 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 16:21:30,746 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 16:21:30,753 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 16:22:28,259 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 16:22:28,288 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 16:22:28,295 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 16:22:28,302 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 16:22:28,308 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 16:22:28,314 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 16:23:49,545 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 16:25:02,722 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 16:25:14,550 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 16:25:14,556 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 16:29:04,294 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 16:29:04,302 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 16:29:27,228 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 16:29:27,234 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 16:29:27,242 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:9,测试场景:促销设置-不存在的商品编号
2022-11-27 16:30:25,839 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 16:30:25,846 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 16:30:25,853 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 16:30:25,859 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 16:30:25,866 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 16:30:25,872 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 16:30:25,879 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 16:30:25,885 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 16:30:25,892 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:9,测试场景:促销设置-不存在的商品编号
2022-11-27 16:34:24,995 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 16:34:25,001 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束
2022-11-27 16:34:25,009 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:10,测试场景:促销设置-不存在的商品编号
2022-11-27 16:34:25,015 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:11,测试场景:促销设置-商品编号为空
2022-11-27 16:43:46,764 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 16:43:46,771 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 16:43:46,778 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 16:43:46,785 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 16:49:29,970 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 16:51:13,230 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 16:51:13,237 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 16:51:13,244 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 16:51:13,250 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 16:51:13,257 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 16:51:13,264 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 16:51:13,271 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 16:51:13,277 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 16:51:13,284 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 16:51:13,291 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 16:51:13,298 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 16:51:13,305 -[test_goods_promote.py - 54] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:03:36,804 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:03:54,779 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:03:54,807 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:03:54,839 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:03:54,871 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:03:54,880 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:03:54,889 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:03:54,899 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:03:54,910 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:03:54,918 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:03:54,927 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:03:54,936 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:03:54,948 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:03:54,958 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:03:58,569 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:03:58,576 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:03:58,594 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:03:58,628 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:03:58,658 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:03:58,666 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:03:58,674 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:03:58,684 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:03:58,693 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:03:58,700 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:03:58,709 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:03:58,717 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:03:58,726 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:04:01,489 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:04:01,497 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:04:01,505 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:04:01,557 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:04:01,564 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:04:01,574 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:04:01,583 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:04:01,590 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:04:01,599 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:04:01,608 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:04:01,616 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:04:01,623 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:04:01,631 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:08:09,299 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:08:09,306 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:08:09,316 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:08:09,324 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:08:09,332 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:08:09,340 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:08:09,348 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:08:09,356 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:08:09,364 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:08:09,372 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:08:09,380 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:08:09,387 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:08:09,400 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:08:12,470 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:08:12,477 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:08:12,485 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:08:12,493 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:08:12,503 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:08:12,512 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:08:12,521 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:08:12,529 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:08:12,538 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:08:12,547 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:08:12,555 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:08:12,563 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:08:45,643 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:08:45,653 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:08:45,662 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:08:45,672 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:08:45,682 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:08:45,692 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:08:45,704 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:08:45,715 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:08:45,725 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:08:45,735 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:08:45,744 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:08:45,755 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:10:01,134 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:10:01,144 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:10:01,154 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:10:01,180 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:10:01,209 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:10:01,220 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:10:01,230 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:10:01,239 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:10:01,249 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:10:01,259 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:10:01,267 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:10:01,275 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:10:01,284 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:10:24,151 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:10:24,161 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:10:24,170 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:10:24,179 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:10:24,189 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:10:24,198 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:10:24,208 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:10:24,218 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:10:24,228 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:10:24,238 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:10:24,247 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:10:24,255 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:10:24,265 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:10:27,598 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:10:27,607 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:10:27,616 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:10:27,627 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:10:27,636 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:10:27,645 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:10:27,653 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:10:27,662 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:10:27,670 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:10:27,679 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:10:27,688 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:10:27,697 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:10:27,706 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:15:22,882 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:15:22,891 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:15:22,900 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:15:22,909 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:15:22,918 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:15:22,927 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:15:22,938 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:15:22,948 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:15:22,958 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:15:23,127 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:15:23,136 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:15:23,147 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:15:36,257 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:15:36,266 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:15:36,276 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:15:36,284 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:15:36,293 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:15:36,303 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:15:36,311 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:15:36,319 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:15:36,329 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:15:36,479 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:15:36,489 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:15:36,499 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:22:04,031 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:22:04,039 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:22:04,047 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:22:04,055 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:22:04,061 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:22:04,069 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:22:04,077 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:22:04,084 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:22:04,092 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:22:04,099 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:22:04,106 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:22:04,114 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:22:04,123 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:22:08,744 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:22:08,752 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:22:08,761 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:22:08,769 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:22:08,779 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:22:08,787 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:22:08,795 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:22:08,803 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:22:08,811 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:22:08,819 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:22:08,827 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:22:08,834 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:22:08,869 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:24:00,331 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:24:00,338 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:24:00,345 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:24:00,353 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:24:00,360 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:24:00,368 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:24:00,375 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:24:00,383 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:24:00,390 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:24:00,398 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:24:00,406 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:24:00,414 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:24:00,422 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:24:45,096 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:24:45,104 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:24:45,111 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:24:45,119 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:24:45,126 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:24:45,134 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:24:45,141 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:24:45,149 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:24:45,156 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:24:45,164 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:24:45,173 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:24:45,181 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:24:45,191 -[test_goods_promote.py - 63] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:26:09,441 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:26:09,449 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:26:09,457 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:26:09,466 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:26:09,475 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:26:09,483 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:26:09,494 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:26:09,501 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:26:09,509 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:26:09,517 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:26:09,525 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:26:09,533 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:26:09,541 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:26:39,254 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:26:39,261 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:26:39,269 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:26:39,276 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:26:39,283 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:26:39,290 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:26:39,297 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:26:39,304 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:26:39,311 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:26:39,317 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:26:39,324 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:26:39,332 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:26:39,341 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:30:05,511 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:30:05,520 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:30:05,527 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:30:05,535 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:30:05,542 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:30:05,550 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:30:05,558 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:30:05,566 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:30:05,574 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:30:05,582 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:30:05,590 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:30:05,597 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:30:05,606 -[test_goods_promote.py - 61] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:30:25,226 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:30:25,235 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:30:25,243 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:30:25,252 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:30:25,261 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:30:25,270 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:30:25,278 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:30:25,286 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:30:25,294 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:30:25,302 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:30:25,310 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:30:25,318 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:30:25,329 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:44:25,213 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:44:25,220 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:44:25,228 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:44:25,235 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:44:25,266 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:44:25,297 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:44:25,328 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:44:25,358 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:44:25,390 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:44:25,398 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:44:25,406 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:44:25,438 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:44:25,448 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:44:28,618 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:44:28,626 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:44:28,634 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:44:28,641 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:44:28,647 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:44:28,674 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:44:28,682 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:44:28,688 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:44:28,695 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:44:28,701 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:44:28,709 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:44:28,715 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:44:28,737 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:45:40,527 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:45:40,534 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:45:40,552 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:45:40,558 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:45:40,584 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:45:40,614 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:45:40,621 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:45:40,629 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:45:40,636 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:45:40,644 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:45:40,651 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:45:40,678 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:45:40,689 -[test_goods_promote.py - 56] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:47:42,759 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 17:47:42,767 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 17:47:42,775 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 17:47:42,782 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 17:47:42,789 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 17:47:42,797 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 17:47:42,804 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 17:47:42,811 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 17:47:42,819 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 17:47:42,825 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 17:47:42,832 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 17:47:42,838 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 17:47:42,847 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 17:48:17,814 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-27 17:48:17,822 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-27 17:48:17,826 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-27 17:48:17,829 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-27 17:48:17,833 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-27 17:48:17,990 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-27 17:48:17,996 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-27 17:48:18,000 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-27 17:48:18,004 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-27 17:48:18,009 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-27 17:48:18,108 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-27 17:48:18,112 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-27 17:48:18,116 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-27 17:48:18,121 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-27 17:48:18,124 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-27 17:48:18,129 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-27 17:48:18,132 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-27 17:48:18,258 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-27 17:48:18,264 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-27 17:48:18,269 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-27 17:48:18,273 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-27 17:48:34,010 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-27 17:48:34,035 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-27 17:48:34,050 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-27 17:48:34,067 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-27 17:48:34,072 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-27 17:48:34,076 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-27 17:48:34,081 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-27 17:48:34,085 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-27 17:48:34,090 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-27 17:48:34,094 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-27 17:48:34,098 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-27 17:48:34,104 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-27 17:48:34,111 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-27 17:48:34,118 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 17:48:34,126 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-27 17:48:34,132 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-27 17:48:34,138 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-27 17:48:34,143 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-27 17:48:34,294 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-27 17:48:34,299 -[test_goods_input.py - 57] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-27 19:16:03,884 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-27 19:16:03,891 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-27 19:16:03,896 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-27 19:16:03,902 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-27 19:16:03,907 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-27 19:16:03,912 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-27 19:16:03,916 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-27 19:16:03,921 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-27 19:16:03,926 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-27 19:16:03,930 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-27 19:16:03,934 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-27 19:16:03,951 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-27 19:16:03,956 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-27 19:16:03,962 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-27 19:16:03,969 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-27 19:16:03,975 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-27 19:16:03,980 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-27 19:16:03,984 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-27 19:16:04,155 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-27 19:16:04,161 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-27 19:20:54,963 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 19:20:54,970 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:20:54,977 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:20:54,983 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:20:54,990 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:20:55,016 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:20:55,024 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:20:55,031 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:20:55,038 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:20:55,044 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:20:55,052 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:20:55,059 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 19:20:55,069 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 19:29:10,761 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 19:29:10,792 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:29:10,823 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:29:10,855 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:29:10,887 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:29:10,919 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:29:10,927 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:29:10,934 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:29:10,942 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:29:10,950 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:29:10,958 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:29:10,966 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 19:29:10,976 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 19:34:38,426 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 19:34:38,433 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:34:38,439 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:34:38,446 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:34:38,453 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:34:38,462 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:34:38,470 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:34:38,477 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:34:38,484 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:34:38,490 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:34:38,498 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:34:38,506 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 19:34:38,514 -[test_goods_promote.py - 57] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 19:36:09,991 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 19:36:09,999 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:36:10,007 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:36:10,015 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:36:10,023 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:36:10,031 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:36:10,040 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:36:10,049 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:36:10,057 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:36:10,065 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:36:10,072 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:36:10,080 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 19:36:10,089 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 19:37:08,034 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 19:37:08,041 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:37:08,049 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:37:08,057 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:37:08,063 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:37:08,070 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:37:08,077 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:37:08,085 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:37:08,091 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:37:08,098 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:37:08,106 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:37:08,113 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 19:37:08,123 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 19:37:28,010 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 19:37:28,018 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:37:28,025 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:37:28,032 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:37:28,039 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:37:28,046 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:37:28,054 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:37:28,062 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:37:28,069 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:37:28,076 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:37:28,083 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:37:28,092 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 19:37:28,101 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 19:38:15,456 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 19:38:15,462 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:38:15,469 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:38:15,475 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:38:15,482 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:38:15,488 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:38:15,495 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:38:15,502 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:38:15,508 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:38:15,514 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:38:15,521 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:38:15,528 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 19:38:15,537 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 19:40:17,262 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 19:40:17,269 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:40:17,276 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:40:17,282 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:40:17,289 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:40:17,296 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:40:17,302 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:40:17,309 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:40:17,315 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:40:17,322 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:40:17,329 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:40:17,335 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 19:40:17,346 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 19:42:59,585 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 19:42:59,592 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:42:59,600 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:42:59,609 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:42:59,616 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:42:59,623 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:42:59,630 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:42:59,636 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:42:59,642 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:42:59,648 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:42:59,657 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:42:59,663 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 19:42:59,671 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 19:49:31,259 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 19:49:31,270 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:49:31,279 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:49:31,288 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:49:31,297 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:49:31,306 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:49:31,337 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:49:31,347 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:49:31,356 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:49:31,365 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:49:31,374 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:49:31,382 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 19:49:31,392 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 19:50:29,419 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 19:50:29,429 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:50:29,438 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:50:29,446 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:50:29,454 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:50:29,461 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:50:29,470 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:50:29,478 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:50:29,486 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:50:29,494 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:50:29,503 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:50:29,511 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 19:50:29,521 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 19:50:55,211 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 19:50:55,218 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:50:55,225 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:50:55,232 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:50:55,239 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:50:55,247 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:50:55,255 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:50:55,262 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:50:55,268 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:50:55,275 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:50:55,283 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:50:55,290 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 19:50:55,298 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 19:50:55,528 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 19:50:55,537 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 19:50:55,544 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 19:50:55,553 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 19:50:55,561 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 19:50:55,571 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 19:50:55,581 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 19:50:55,590 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 19:50:55,600 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 19:50:55,610 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 19:50:55,619 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 20:19:10,163 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 20:19:10,170 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 20:19:10,176 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 20:19:10,182 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 20:19:10,189 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 20:19:10,196 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 20:19:10,223 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 20:19:10,229 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 20:19:10,238 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 20:19:10,245 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 20:19:10,251 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 20:19:10,259 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 20:19:10,267 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 20:19:28,866 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 20:19:28,872 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 20:19:28,881 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 20:19:28,889 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 20:19:28,894 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 20:19:28,900 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 20:19:28,907 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 20:19:28,913 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 20:19:28,921 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 20:19:28,928 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 20:19:28,934 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 20:19:28,940 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 20:19:28,949 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 20:37:47,367 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:38:51,319 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:38:51,326 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:38:53,742 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:38:53,748 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:40:57,679 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:40:57,685 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:40:57,692 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 20:40:57,698 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 20:41:00,201 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:41:00,206 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:41:00,212 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 20:41:00,219 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 20:42:22,126 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:42:22,132 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:42:22,138 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 20:42:22,144 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 20:42:22,149 -[test_goods_delete.py - 46] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 20:45:20,208 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:45:20,214 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:45:20,221 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 20:45:20,227 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 20:45:20,233 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 20:45:20,239 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 20:45:44,818 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:45:44,824 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:45:44,830 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 20:45:44,836 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 20:45:44,841 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 20:47:33,919 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:47:33,925 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:47:33,932 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 20:47:33,938 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 20:47:33,944 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 20:47:55,928 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:47:56,125 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 20:48:18,276 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:48:18,477 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 20:48:52,527 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:48:52,732 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 20:50:28,268 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:50:28,274 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:50:28,304 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 20:50:28,312 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 20:50:28,317 -[test_goods_delete.py - 49] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 20:53:45,464 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:53:45,471 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:53:45,479 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 20:53:45,488 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 20:53:45,502 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 20:53:45,661 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 20:55:21,310 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:55:21,316 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:55:21,324 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 20:55:21,331 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 20:55:21,338 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 20:55:21,503 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 20:56:18,665 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:56:18,671 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:56:18,679 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 20:56:18,702 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 20:56:18,709 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 20:56:18,865 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 20:56:59,393 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 20:56:59,400 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 20:56:59,407 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 20:56:59,414 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 20:56:59,419 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 20:56:59,427 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 20:56:59,435 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:00:15,657 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-27 21:00:15,664 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-27 21:00:15,670 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-27 21:00:15,677 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-27 21:00:15,683 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-27 21:00:15,690 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-27 21:00:15,696 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-27 21:00:15,704 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-27 21:00:15,714 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-27 21:00:15,720 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-27 21:00:15,727 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-27 21:00:15,733 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-27 21:00:15,742 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-27 21:00:21,116 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 21:00:21,123 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 21:00:21,130 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 21:00:21,137 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 21:00:21,143 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 21:00:21,151 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:00:21,159 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:00:24,041 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 21:00:24,047 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 21:00:24,054 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 21:00:24,062 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 21:00:24,070 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 21:00:24,077 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:00:24,085 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:01:31,873 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 21:01:31,880 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 21:01:31,887 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 21:01:31,894 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 21:01:31,901 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 21:01:31,908 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:01:31,916 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:01:46,327 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 21:01:46,334 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 21:01:46,342 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 21:01:46,349 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 21:01:46,356 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 21:01:46,364 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:01:46,374 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:01:49,167 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 21:01:49,174 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 21:01:49,181 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 21:01:49,188 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 21:01:49,194 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 21:01:49,201 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:01:49,210 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:23:58,807 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 21:23:58,814 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 21:23:58,821 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 21:23:58,828 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 21:23:58,834 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 21:23:58,844 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:23:58,852 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:32:10,970 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 21:32:10,977 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 21:32:10,984 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 21:32:10,991 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 21:32:10,998 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 21:32:11,010 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:32:11,018 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:32:23,445 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 21:32:23,453 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 21:32:23,460 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 21:32:23,470 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 21:32:23,477 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 21:32:23,486 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:32:23,513 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:32:47,566 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 21:32:47,573 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 21:32:47,580 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 21:32:47,590 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 21:32:47,597 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 21:32:47,605 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:32:47,613 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:47:37,272 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-27 21:47:37,279 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-27 21:47:37,288 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-27 21:47:37,296 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-27 21:47:37,303 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-27 21:47:37,335 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-27 21:47:37,345 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-28 08:45:35,850 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-28 08:45:35,857 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-28 08:45:35,864 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-28 08:45:35,872 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-28 08:45:35,879 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-28 08:45:35,887 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-28 08:45:35,895 -[test_goods_delete.py - 51] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-28 09:04:45,291 -[test_business_login01.py - 40] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1007, 'msg': '用户名或者密码错误'}
2022-11-28 09:04:45,291 -[test_business_login01.py - 41] -ERROR:assert '用户名或者密码错误' == '登录成功'
  - 登录成功
  + 用户名或者密码错误
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login01.py", line 36, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名或者密码错误' == '登录成功'
  - 登录成功
  + 用户名或者密码错误
2022-11-28 09:04:45,401 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-28 09:04:45,408 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-28 09:04:45,432 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-28 09:04:45,439 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-28 09:04:45,444 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-28 09:04:45,450 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-28 09:04:45,456 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-28 09:04:45,467 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-28 09:04:45,474 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-28 09:04:45,481 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-28 09:04:45,488 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-28 09:04:45,494 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-28 09:04:45,501 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-28 09:04:45,510 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-28 09:04:45,516 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-28 09:04:45,528 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-28 09:04:45,536 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-28 09:04:45,543 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-28 09:04:45,552 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-28 09:04:45,560 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-28 09:04:45,567 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-28 09:04:45,574 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-28 09:04:45,582 -[test_business_login03.py - 46] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-28 09:04:45,592 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-28 09:04:45,598 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-28 09:04:45,604 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-28 09:04:45,610 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-28 09:04:45,615 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-28 09:04:45,623 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-28 09:04:45,629 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-28 09:04:45,635 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-28 09:04:45,648 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-28 09:04:45,654 -[test_business_good_select01.py - 81] -ERROR:断言失败，期望结果为:查询成功,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2022-11-28 09:04:45,655 -[test_business_good_select01.py - 82] -ERROR:assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 59, in test_goods_select
    assert res['msg'] == case['expect'] and 1 == len(res['goods_tiems'])
AssertionError: assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
2022-11-28 09:04:45,673 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-28 09:04:45,680 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-28 09:04:45,686 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-28 09:04:45,694 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-28 09:04:45,701 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-28 09:04:45,708 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-28 09:04:45,716 -[test_business_good_select01.py - 81] -ERROR:断言失败，期望结果为:查询成功,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2022-11-28 09:04:45,716 -[test_business_good_select01.py - 82] -ERROR:assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 59, in test_goods_select
    assert res['msg'] == case['expect'] and 1 == len(res['goods_tiems'])
AssertionError: assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
2022-11-28 09:04:45,731 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-28 09:04:45,739 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-28 09:04:45,747 -[test_business_good_select01.py - 81] -ERROR:断言失败，期望结果为:查询成功,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2022-11-28 09:04:45,747 -[test_business_good_select01.py - 82] -ERROR:assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 59, in test_goods_select
    assert res['msg'] == case['expect'] and 1 == len(res['goods_tiems'])
AssertionError: assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
2022-11-28 09:04:45,762 -[test_business_good_select01.py - 81] -ERROR:断言失败，期望结果为:查询成功,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2022-11-28 09:04:45,762 -[test_business_good_select01.py - 82] -ERROR:assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business02_goods_select\test_business_good_select01.py", line 59, in test_goods_select
    assert res['msg'] == case['expect'] and 1 == len(res['goods_tiems'])
AssertionError: assert ('没有符合条件的数据' == '查询成功'
  - 查询成功
  + 没有符合条件的数据)
2022-11-28 09:04:45,775 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-28 09:04:45,786 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-28 09:04:45,795 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-28 09:04:45,803 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-28 09:04:45,812 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-28 09:04:45,827 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-28 09:04:45,835 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-28 09:04:45,842 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-28 09:04:45,850 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-28 09:04:45,858 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-28 09:04:45,866 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-28 09:04:45,875 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-28 09:04:45,884 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-28 09:04:45,892 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-28 09:04:45,901 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-28 09:04:45,915 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-28 09:04:45,926 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-28 09:04:45,932 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-28 09:04:45,938 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-28 09:04:45,944 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-28 09:04:46,066 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-28 09:04:46,073 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-28 09:04:46,080 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-28 09:04:46,086 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-28 09:04:46,091 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-28 09:04:46,193 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-28 09:04:46,200 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-28 09:04:46,206 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-28 09:04:46,226 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-28 09:04:46,232 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-28 09:04:46,239 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-28 09:04:46,245 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-28 09:04:46,360 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-28 09:04:46,367 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-28 09:04:46,374 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-28 09:04:46,380 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-28 09:04:46,396 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-28 09:04:46,406 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-28 09:04:46,413 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-28 09:04:46,421 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-28 09:04:46,429 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-28 09:04:46,435 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-28 09:04:46,442 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-28 09:04:46,449 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-28 09:04:46,457 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-28 09:04:46,465 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-28 09:04:46,471 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-28 09:04:46,478 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-28 09:04:46,484 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-28 09:04:46,492 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-28 09:04:46,501 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-28 09:04:46,509 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-28 09:04:46,516 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-28 09:04:46,522 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-28 09:04:46,628 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-28 09:04:46,634 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-28 09:04:46,650 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 09:04:46,660 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 09:04:46,669 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 09:04:46,678 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 09:04:46,686 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 09:04:46,694 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 09:04:46,702 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 09:04:46,712 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 09:04:46,723 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 09:04:46,732 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 09:04:46,741 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 09:04:46,751 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 09:04:46,761 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 09:04:46,775 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-28 09:04:46,786 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-28 09:04:46,795 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-28 09:04:46,804 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-28 09:04:46,815 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-28 09:04:46,827 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-28 09:04:46,839 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-28 09:08:09,945 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 09:08:09,952 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 09:08:09,958 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 09:08:09,967 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 09:08:09,975 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 09:08:09,982 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 09:08:09,988 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 09:08:09,994 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 09:08:10,001 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 09:08:10,008 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 09:08:10,015 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 09:08:10,021 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 09:08:10,028 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 09:08:14,188 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-28 09:08:14,195 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-28 09:08:14,202 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-28 09:08:14,209 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-28 09:08:14,217 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-28 09:08:14,225 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-28 09:08:14,234 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-28 10:42:52,688 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-28 10:42:52,693 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-28 10:42:52,698 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-28 10:42:52,704 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-28 10:42:52,709 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-28 10:42:52,714 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-28 10:42:52,720 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-28 10:42:52,725 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-28 10:42:52,730 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-28 10:42:52,735 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-28 10:42:52,739 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-28 10:42:52,744 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-28 10:42:52,749 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-28 10:42:52,754 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-28 10:42:52,762 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-28 10:42:52,767 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-28 10:42:52,772 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-28 10:42:52,776 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-28 10:42:53,002 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-28 10:42:53,008 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-28 10:43:59,841 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 10:43:59,849 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 10:43:59,856 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 10:43:59,863 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 10:43:59,870 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 10:43:59,877 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 10:43:59,884 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 10:43:59,890 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 10:43:59,898 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 10:43:59,904 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 10:43:59,911 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 10:43:59,917 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 10:43:59,925 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 10:45:12,280 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-28 10:45:12,286 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-28 10:45:12,290 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-28 10:45:12,296 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-28 10:45:12,301 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-28 10:45:12,305 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-28 10:45:12,310 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-28 10:45:12,315 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-28 10:45:12,320 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-28 10:45:12,325 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-28 10:45:12,329 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-28 10:45:12,334 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-28 10:45:12,338 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-28 10:45:12,345 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-28 10:45:12,352 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-28 10:45:12,357 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-28 10:45:12,362 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-28 10:45:12,366 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-28 10:45:12,530 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-28 10:45:12,535 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-28 10:45:18,847 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 10:45:18,854 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 10:45:18,860 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 10:45:18,867 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 10:45:18,873 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 10:45:18,879 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 10:45:18,885 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 10:45:18,891 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 10:45:18,900 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 10:45:18,906 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 10:45:18,913 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 10:45:18,944 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 10:45:18,953 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:24:36,368 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:24:36,376 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:24:36,383 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:24:36,411 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:24:36,419 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:24:36,427 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:24:36,434 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:24:36,441 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:24:36,450 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:24:36,457 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:24:36,464 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:24:36,471 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:24:36,480 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:24:57,202 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:24:57,235 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:24:57,242 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:24:57,250 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:24:57,283 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:24:57,291 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:24:57,298 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:24:57,306 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:24:57,316 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:24:57,324 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:24:57,331 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:24:57,338 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:24:57,347 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:25:01,397 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:25:01,405 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:25:01,413 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:25:01,421 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:25:01,428 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:25:01,436 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:25:01,443 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:25:01,451 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:25:01,460 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:25:01,468 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:25:01,475 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:25:01,483 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:25:01,511 -[test_goods_promote.py - 59] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:26:02,091 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-28 11:26:02,099 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-28 11:26:02,108 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-28 11:26:02,117 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-28 11:26:02,125 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-28 11:26:02,135 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-28 11:26:02,144 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-28 11:31:39,711 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:31:39,719 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:31:39,725 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:31:39,732 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:31:39,739 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:31:39,746 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:31:39,755 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:31:39,762 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:31:39,780 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:31:39,787 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:31:39,794 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:31:39,801 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:31:39,809 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:31:45,523 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:31:45,530 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:31:45,537 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:31:45,544 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:31:45,551 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:31:45,557 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:31:45,564 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:31:45,570 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:31:45,579 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:31:45,585 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:31:45,593 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:31:45,600 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:31:45,610 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:31:48,401 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:31:48,409 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:31:48,416 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:31:48,422 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:31:48,440 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:31:48,447 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:31:48,454 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:31:48,460 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:31:48,467 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:31:48,476 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:31:48,483 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:31:48,503 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:31:48,512 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:32:06,279 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:32:06,286 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:32:06,293 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:32:06,300 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:32:06,307 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:32:06,314 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:32:06,320 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:32:06,327 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:32:06,336 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:32:06,342 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:32:06,349 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:32:06,356 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:32:06,364 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:32:09,200 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:32:09,207 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:32:09,214 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:32:09,220 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:32:09,227 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:32:09,234 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:32:09,241 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:32:09,248 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:32:09,257 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:32:09,265 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:32:09,272 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:32:09,279 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:32:09,287 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:32:12,025 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:32:12,032 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:32:12,065 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:32:12,073 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:32:12,080 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:32:12,087 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:32:12,094 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:32:12,101 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:32:12,110 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:32:12,119 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:32:12,126 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:32:12,144 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:32:12,154 -[test_goods_promote.py - 58] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:38:37,608 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:38:37,615 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:38:37,622 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:38:37,629 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:38:37,638 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:38:37,646 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:38:37,654 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:38:37,663 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:38:37,671 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:38:37,680 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:38:37,688 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:38:37,698 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:40:18,962 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:40:18,970 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:40:18,978 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:40:18,986 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:40:18,994 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:40:19,001 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:40:19,033 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:40:19,043 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:40:19,050 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:40:19,080 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:40:19,088 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:40:19,098 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:43:07,001 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:43:07,009 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:43:07,017 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:43:07,025 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:43:07,033 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:43:07,041 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:43:07,049 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:43:07,059 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:43:07,067 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:43:07,075 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:43:07,083 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:43:07,094 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:44:13,460 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:44:13,468 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:44:13,476 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:44:13,484 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:44:13,492 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:44:13,500 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:44:13,507 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:44:13,517 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:44:13,525 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:44:13,532 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:44:13,540 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:44:13,550 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:44:37,725 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:44:37,733 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:44:37,741 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:44:37,749 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:44:37,756 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:44:37,764 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:44:37,772 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:44:37,784 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:44:37,792 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:44:37,801 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:44:37,809 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:44:37,819 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:45:11,443 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:45:11,450 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:45:11,457 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:45:11,464 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:45:11,470 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:45:11,477 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:45:11,483 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:45:11,490 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:45:11,498 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:45:11,505 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:45:11,512 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:45:11,520 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:45:11,530 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:45:18,206 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:45:18,213 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:45:18,220 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:45:18,227 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:45:18,235 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:45:18,242 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:45:18,251 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:45:18,277 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:45:18,287 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:45:18,295 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:45:18,302 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:45:18,310 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:45:18,320 -[test_goods_promote.py - 62] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:54:07,571 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:54:07,578 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:54:07,584 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:54:07,591 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:54:07,598 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:54:07,604 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:54:07,611 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:54:07,618 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:54:07,627 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:54:07,634 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:54:07,641 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:54:07,647 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:54:07,655 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:55:37,136 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:55:37,143 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:55:37,172 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:55:37,205 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:55:37,212 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:55:37,236 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:55:37,269 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:55:37,277 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:55:37,285 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:55:37,317 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:55:37,326 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:55:37,334 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:55:37,343 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:55:37,350 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-28 11:55:40,662 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-28 11:55:40,669 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-28 11:55:40,677 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-28 11:55:40,683 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-28 11:55:40,690 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-28 11:55:40,696 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-28 11:55:40,702 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-28 11:55:40,709 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-28 11:55:40,717 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-28 11:55:40,724 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-28 11:55:40,731 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-28 11:55:40,755 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-28 11:55:40,788 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-28 11:55:40,819 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-28 14:47:36,121 -[test_order_items.py - 42] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程
2022-11-28 14:48:15,070 -[test_order_items.py - 42] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程
2022-11-28 14:48:17,511 -[test_order_items.py - 42] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程
2022-11-28 14:52:22,099 -[test_order_items.py - 42] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程
2022-11-28 14:53:16,407 -[test_order_items.py - 42] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程
2022-11-28 14:56:20,663 -[test_order_items.py - 44] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程
2022-11-28 15:01:42,524 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程
2022-11-28 15:05:29,767 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程
2022-11-28 15:05:29,772 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:05:29,776 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:06:38,192 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程
2022-11-28 15:06:38,197 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:06:38,202 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:06:38,206 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 15:07:25,802 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程
2022-11-28 15:07:25,807 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:07:25,811 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:07:25,815 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 15:07:25,820 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 15:09:19,514 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程
2022-11-28 15:09:19,535 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:09:19,540 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:09:19,546 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 15:09:19,554 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 15:09:19,562 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 15:24:32,896 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 15:24:32,901 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:24:32,906 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:24:32,910 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 15:24:32,918 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 15:24:32,926 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 15:24:32,935 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 15:33:17,240 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 15:33:17,245 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:33:17,250 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:33:17,254 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 15:33:17,262 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 15:33:17,271 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 15:33:17,279 -[test_order_items.py - 45] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 15:35:27,876 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 15:35:27,881 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:35:27,885 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:35:27,889 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 15:35:27,903 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 15:35:27,911 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 15:35:27,920 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 15:35:39,604 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 15:35:39,608 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:35:39,614 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:35:39,640 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 15:35:39,648 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 15:35:39,657 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 15:35:39,667 -[test_order_items.py - 48] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 15:38:55,541 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 15:38:55,546 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:38:55,551 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:38:55,556 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 15:38:55,564 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 15:38:55,573 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 15:38:55,583 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 15:41:40,424 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-28 15:41:40,433 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-28 15:41:40,442 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-28 15:41:40,451 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-28 15:41:40,468 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-28 15:41:40,476 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-28 15:41:40,485 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-28 15:41:40,494 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-28 15:41:40,503 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-28 15:41:40,512 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-28 15:41:40,521 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-28 15:41:40,531 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-28 15:41:40,541 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-28 15:41:40,552 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-28 15:41:41,723 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-28 15:41:41,729 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-28 15:41:41,734 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-28 15:41:41,739 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-28 15:41:41,748 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-28 15:41:41,752 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-28 15:41:41,757 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-28 15:41:41,761 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-28 15:41:41,766 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-28 15:41:41,772 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-28 15:41:41,777 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-28 15:41:41,782 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-28 15:41:41,787 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-28 15:41:41,792 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-28 15:42:24,818 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:42:24,823 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:42:24,828 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 15:42:24,838 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 15:42:24,847 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 15:42:24,857 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 15:43:42,586 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 15:43:42,591 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:43:42,595 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:43:42,600 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 15:43:42,609 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 15:43:42,618 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 15:43:42,628 -[test_order_items.py - 49] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 15:58:19,509 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 15:58:19,514 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:58:19,518 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:58:19,522 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 15:58:19,530 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 15:58:19,539 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 15:58:19,548 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 15:58:19,560 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 15:58:22,610 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 15:58:22,615 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 15:58:22,620 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 15:58:22,624 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 15:58:22,633 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 15:58:22,641 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 15:58:22,652 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 15:58:22,662 -[test_order_items.py - 55] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 16:00:01,018 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 16:00:01,023 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 16:00:01,027 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 16:00:01,032 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 16:00:01,041 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 16:00:01,051 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 16:00:01,061 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 16:00:01,074 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 16:00:01,086 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 16:00:06,075 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 16:00:06,080 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 16:00:06,085 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 16:00:06,089 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 16:00:06,098 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 16:00:06,107 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 16:00:06,117 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 16:00:06,128 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 16:00:06,139 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 16:02:19,780 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 16:02:19,785 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 16:02:19,790 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 16:02:19,795 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 16:02:19,803 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 16:02:19,812 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 16:02:19,822 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 16:02:19,833 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 16:02:19,846 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 16:02:19,858 -[test_order_items.py - 60] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 16:05:03,349 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 16:05:03,354 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 16:05:03,358 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 16:05:03,362 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 16:05:03,370 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 16:05:03,378 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 16:05:03,387 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 16:05:03,398 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 16:05:03,409 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 16:05:03,419 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-28 16:05:12,808 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 16:05:12,812 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 16:05:12,817 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 16:05:12,822 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 16:05:12,831 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 16:05:12,839 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 16:05:12,849 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 16:05:12,860 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 16:05:12,872 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 16:07:29,808 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 16:07:29,813 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 16:07:29,818 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 16:07:29,823 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 16:07:29,832 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 16:07:29,840 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 16:07:29,850 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 16:07:29,861 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 16:07:29,871 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 16:07:29,882 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 16:07:29,893 -[test_order_items.py - 62] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-28 16:08:35,596 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 16:08:35,601 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 16:08:35,605 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 16:08:35,610 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 16:08:35,618 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 16:08:35,627 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 16:08:35,637 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 16:08:35,647 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 16:08:35,658 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 16:08:35,669 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 16:08:35,680 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-28 16:08:51,797 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 16:08:51,802 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 16:08:51,807 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 16:08:51,811 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 16:08:51,820 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 16:08:51,829 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 16:08:51,839 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 16:08:51,850 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 16:08:51,861 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 16:08:51,872 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 16:08:51,883 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-28 16:25:03,226 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 16:25:03,231 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 16:25:03,236 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 16:25:03,240 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 16:25:03,248 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 16:25:03,256 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 16:25:03,266 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 16:25:03,277 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 16:25:03,288 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 16:25:03,298 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 16:25:03,309 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-28 16:25:06,467 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 16:25:06,472 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 16:25:06,476 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 16:25:06,480 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 16:25:06,488 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 16:25:06,496 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 16:25:06,505 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 16:25:06,515 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 16:25:06,525 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 16:25:06,535 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 16:25:06,546 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-28 17:26:57,541 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 17:26:57,546 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 17:26:57,550 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 17:26:57,555 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 17:26:57,564 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 17:26:57,573 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 17:26:57,583 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 17:26:57,595 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 17:26:57,606 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 17:26:57,617 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 17:26:57,630 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-28 17:34:16,033 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 17:34:16,038 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 17:34:16,043 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 17:34:16,047 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 17:34:16,055 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 17:34:16,064 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 17:34:16,103 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 17:34:16,150 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 17:34:16,187 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 17:34:16,200 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 17:34:16,213 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-28 17:34:22,070 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 17:34:22,075 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 17:34:22,080 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 17:34:22,085 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 17:34:22,094 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 17:34:22,104 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 17:34:22,114 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 17:34:22,126 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 17:34:22,137 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 17:34:22,148 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 17:34:22,160 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-28 17:34:25,572 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 17:34:25,576 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 17:34:25,581 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 17:34:25,586 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 17:34:25,594 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 17:34:25,603 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 17:34:25,613 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 17:34:25,624 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 17:34:25,652 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 17:34:25,663 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 17:34:25,675 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-28 17:34:53,606 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 17:34:53,611 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 17:34:53,616 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 17:34:53,620 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 17:34:53,629 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 17:34:53,638 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 17:34:53,647 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 17:34:53,658 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 17:34:53,669 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 17:34:53,680 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 17:34:53,691 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-28 17:34:56,969 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 17:34:56,974 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 17:34:56,980 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 17:34:56,984 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 17:34:56,992 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 17:34:57,001 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 17:34:57,011 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 17:34:57,022 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 17:34:57,032 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 17:34:57,044 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 17:34:57,055 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-28 17:34:59,722 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-28 17:34:59,727 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-28 17:34:59,732 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-28 17:34:59,736 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-28 17:34:59,744 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-28 17:34:59,753 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-28 17:34:59,762 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-28 17:34:59,773 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-28 17:34:59,784 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-28 17:34:59,795 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-28 17:34:59,806 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 10:47:29,301 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 10:47:29,309 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 10:47:29,317 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 10:47:29,325 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 10:47:29,333 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 10:47:29,342 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 10:47:29,351 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 10:47:33,303 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 10:47:33,310 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 10:47:33,318 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 10:47:33,326 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 10:47:33,332 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 10:47:33,353 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 10:47:33,362 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 10:47:36,551 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 10:47:36,560 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 10:47:36,567 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 10:47:36,575 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 10:47:36,582 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 10:47:36,591 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 10:47:36,600 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 14:05:22,771 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 14:05:22,779 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 14:05:22,788 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 14:05:22,795 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 14:05:22,803 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 14:05:22,810 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 14:05:22,818 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 14:05:22,825 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 14:05:22,835 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 14:05:22,843 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 14:05:22,851 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 14:05:22,859 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 14:05:22,869 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 14:05:22,876 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 14:18:52,771 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 14:18:52,775 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:18:52,780 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:18:52,785 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:18:52,789 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:18:52,794 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:18:52,798 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:18:52,803 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:20:13,802 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 14:20:13,807 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:20:13,811 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:20:13,815 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:20:13,819 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:20:13,823 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:20:13,827 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:20:13,831 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:20:36,368 -[test_business_login03.py - 41] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:20:36,368 -[test_business_login03.py - 42] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login03.py", line 37, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-29 14:20:36,418 -[test_business_login03.py - 45] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:20:36,446 -[test_business_login03.py - 45] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:20:36,451 -[test_business_login03.py - 41] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:20:36,451 -[test_business_login03.py - 42] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'code': 1004} != {'code': 1007}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login03.py", line 39, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'code': 1004} != {'code': 1007}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:20:36,459 -[test_business_login03.py - 45] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:20:36,464 -[test_business_login03.py - 45] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:20:36,469 -[test_business_login03.py - 41] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:20:36,469 -[test_business_login03.py - 42] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'code': 1004} != {'code': 1005}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login03.py", line 39, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'code': 1004} != {'code': 1005}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:20:36,478 -[test_business_login03.py - 41] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:20:36,478 -[test_business_login03.py - 42] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'code': 1004} != {'code': 1006}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login03.py", line 39, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'code': 1004} != {'code': 1006}
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:21:08,779 -[test_business_login02.py - 53] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1007, 'msg': '用户名或者密码错误'}
2022-11-29 14:21:08,779 -[test_business_login02.py - 54] -ERROR:assert '用户名或者密码错误' == '登录成功'
  - 登录成功
  + 用户名或者密码错误
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login02.py", line 49, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名或者密码错误' == '登录成功'
  - 登录成功
  + 用户名或者密码错误
2022-11-29 14:21:08,851 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:21:08,856 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:21:08,861 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:21:08,866 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:21:08,870 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:21:08,874 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:21:08,878 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:21:47,603 -[test_business_login03.py - 41] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:21:47,603 -[test_business_login03.py - 42] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login03.py", line 37, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-29 14:21:47,670 -[test_business_login03.py - 45] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:21:47,676 -[test_business_login03.py - 45] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:21:47,682 -[test_business_login03.py - 41] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:21:47,682 -[test_business_login03.py - 42] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login03.py", line 39, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:21:47,691 -[test_business_login03.py - 45] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:21:47,695 -[test_business_login03.py - 45] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:21:47,700 -[test_business_login03.py - 41] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:21:47,700 -[test_business_login03.py - 42] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login03.py", line 39, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:21:47,709 -[test_business_login03.py - 41] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:21:47,709 -[test_business_login03.py - 42] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login03.py", line 39, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:22:05,837 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:22:05,837 -[test_business_login03.py - 41] -ERROR:assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login03.py", line 36, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名必须以字母开头，由字母和数字组成6到8位的字符串' == '登录成功'
  - 登录成功
  + 用户名必须以字母开头，由字母和数字组成6到8位的字符串
2022-11-29 14:22:05,892 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:22:05,897 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:22:05,902 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:{'code': 1007, 'msg': '用户名或者密码错误'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:22:05,902 -[test_business_login03.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login03.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1007...: '用户名或者密码错误'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': '用户名或者密码错误'}
  {'code': 1004} != {'code': 1007}
  Full diff:
  - {'code': 1007, 'msg': '用户名或者密码错误'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:22:05,911 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:22:05,916 -[test_business_login03.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:22:05,921 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:{'code': 1005, 'msg': 'typeId类型格式不正确'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:22:05,921 -[test_business_login03.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login03.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1005...ypeId类型格式不正确'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型格式不正确'}
  {'code': 1004} != {'code': 1005}
  Full diff:
  - {'code': 1005, 'msg': 'typeId类型格式不正确'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:22:05,929 -[test_business_login03.py - 40] -ERROR:断言失败，期望结果为:{'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'},实际结果为:{'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:22:05,929 -[test_business_login03.py - 41] -ERROR:assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login03.py", line 38, in test_login
    assert res == case['expect']  # 验证响应结果和登录结果一致
AssertionError: assert {'code': 1004...数字组成6到8位的字符串'} == {'code': 1006...配，该入口只能为普通用户'}
  Differing items:
  {'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'} != {'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  {'code': 1004} != {'code': 1006}
  Full diff:
  - {'code': 1006, 'msg': 'typeId类型不匹配，该入口只能为普通用户'}
  + {'code': 1004, 'msg': '用户名必须以字母开头，由字母和数字组成6到8位的字符串'}
2022-11-29 14:22:10,114 -[test_business_login02.py - 53] -ERROR:断言失败，期望结果为:登录成功,实际结果为:{'code': 1007, 'msg': '用户名或者密码错误'}
2022-11-29 14:22:10,115 -[test_business_login02.py - 54] -ERROR:assert '用户名或者密码错误' == '登录成功'
  - 登录成功
  + 用户名或者密码错误
Traceback (most recent call last):
  File "D:\tools\workspace\autotest03\test_cases\test_business\test_business01_login\test_business_login02.py", line 49, in test_login
    assert res['msg'] == case['expect']  # 响应结果中的msg对应的值==期望结果（登录成功）
AssertionError: assert '用户名或者密码错误' == '登录成功'
  - 登录成功
  + 用户名或者密码错误
2022-11-29 14:22:10,183 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:22:10,198 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:22:10,203 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:22:10,207 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:22:10,211 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:22:10,215 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:22:10,219 -[test_business_login02.py - 57] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:22:23,319 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 14:22:23,323 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:22:23,327 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:22:23,332 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:22:23,336 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:22:23,340 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:22:23,345 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:22:23,349 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:22:44,863 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 14:22:44,867 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:22:44,872 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:22:44,877 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:22:44,882 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:22:44,886 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:22:44,891 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:22:44,895 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:24:10,479 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 14:24:10,485 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:24:10,493 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:24:10,500 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:24:10,507 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:24:10,514 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:24:10,520 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:24:10,527 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:24:10,537 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 14:24:10,544 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:24:10,550 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:24:10,557 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:24:10,564 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:24:10,570 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:24:10,577 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:24:10,584 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:24:10,596 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 14:24:10,604 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 14:24:10,610 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 14:24:10,639 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 14:24:10,646 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 14:24:10,655 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 14:24:10,662 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 14:24:10,670 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 14:24:10,678 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 14:24:10,687 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 14:24:10,695 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 14:24:10,704 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 14:24:10,712 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 14:24:10,722 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 14:24:10,734 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 14:24:10,744 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 14:24:10,752 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 14:24:10,761 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 14:24:10,774 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 14:24:10,782 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 14:24:10,790 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 14:24:10,797 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 14:24:10,805 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 14:24:10,813 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 14:24:10,821 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 14:24:10,829 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 14:24:10,837 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 14:24:10,846 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 14:24:10,860 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 14:24:10,871 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 14:24:10,877 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 14:24:10,883 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 14:24:10,890 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 14:24:11,220 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 14:24:11,228 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 14:24:11,234 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 14:24:11,241 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 14:24:11,247 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 14:24:11,476 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 14:24:11,482 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 14:24:11,488 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 14:24:11,496 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 14:24:11,502 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 14:24:11,510 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 14:24:11,516 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 14:24:11,737 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 14:24:11,745 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 14:24:11,752 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 14:24:11,759 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 14:24:11,774 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 14:24:11,783 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 14:24:11,791 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 14:24:11,800 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 14:24:11,807 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 14:24:11,814 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 14:24:11,820 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 14:24:11,828 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 14:24:11,836 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 14:24:11,844 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 14:24:11,852 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 14:24:11,861 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 14:24:11,869 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 14:24:11,879 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 14:24:11,890 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 14:24:11,900 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 14:24:11,907 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 14:24:11,915 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 14:24:12,158 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 14:24:12,166 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 14:24:12,183 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 14:24:12,194 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 14:24:12,217 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 14:24:12,229 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 14:24:12,241 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 14:24:12,251 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 14:24:12,261 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 14:24:12,272 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 14:24:12,285 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 14:24:12,297 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 14:24:12,308 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 14:24:12,320 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 14:24:12,333 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 14:24:12,343 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 14:24:12,360 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 14:24:12,369 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 14:24:12,380 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 14:24:12,390 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 14:24:12,400 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 14:24:12,411 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 14:24:12,421 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 14:24:12,439 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 14:24:12,446 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 14:24:12,453 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 14:24:12,461 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 14:24:12,494 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 14:24:12,507 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 14:24:12,522 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 14:24:12,586 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 14:24:12,600 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 14:24:12,614 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 14:24:12,628 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 14:26:32,272 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 14:26:32,279 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:26:32,285 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:26:32,291 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:26:32,296 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:26:32,302 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:26:32,308 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:26:32,314 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:26:32,323 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 14:26:32,329 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:26:32,336 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:26:32,344 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:26:32,351 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:26:32,358 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:26:32,363 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:26:32,369 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:26:32,380 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 14:26:32,388 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 14:26:32,394 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 14:26:32,400 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 14:26:32,405 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 14:26:32,412 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 14:26:32,417 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 14:26:32,423 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 14:26:32,429 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 14:26:32,437 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 14:26:32,444 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 14:26:32,450 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 14:26:32,457 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 14:26:32,464 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 14:26:32,476 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 14:26:32,485 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 14:26:32,493 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 14:26:32,501 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 14:26:32,514 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 14:26:32,522 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 14:26:32,530 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 14:26:32,538 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 14:26:32,546 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 14:26:32,556 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 14:26:32,564 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 14:26:32,573 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 14:26:32,581 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 14:26:32,590 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 14:26:32,602 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 14:26:32,611 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 14:26:32,617 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 14:26:32,621 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 14:26:32,627 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 14:26:32,793 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 14:26:32,799 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 14:26:32,805 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 14:26:32,810 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 14:26:32,815 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 14:26:32,916 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 14:26:32,921 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 14:26:32,926 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 14:26:32,932 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 14:26:32,938 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 14:26:32,944 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 14:26:32,949 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 14:26:33,070 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 14:26:33,078 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 14:26:33,084 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 14:26:33,090 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 14:26:33,105 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 14:26:33,123 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 14:26:33,130 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 14:26:33,137 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 14:26:33,144 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 14:26:33,150 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 14:26:33,156 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 14:26:33,162 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 14:26:33,169 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 14:26:33,175 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 14:26:33,181 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 14:26:33,187 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 14:26:33,193 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 14:26:33,201 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 14:26:33,211 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 14:26:33,218 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 14:26:33,224 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 14:26:33,230 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 14:26:33,339 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 14:26:33,347 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 14:26:33,365 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 14:26:33,375 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 14:26:33,384 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 14:26:33,394 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 14:26:33,403 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 14:26:33,411 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 14:26:33,420 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 14:26:33,429 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 14:26:33,440 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 14:26:33,449 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 14:26:33,458 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 14:26:33,467 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 14:26:33,477 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 14:26:33,486 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 14:26:33,501 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 14:26:33,510 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 14:26:33,519 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 14:26:33,528 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 14:26:33,557 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 14:26:33,569 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 14:26:33,606 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 14:26:33,624 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 14:26:33,632 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 14:26:33,639 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 14:26:33,646 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 14:26:33,656 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 14:26:33,667 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 14:26:33,679 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 14:26:33,699 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 14:26:33,712 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 14:26:33,725 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 14:26:33,748 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 14:30:56,120 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 14:30:56,128 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:30:56,134 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:30:56,140 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:30:56,146 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:30:56,152 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:30:56,158 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:30:56,163 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:30:56,173 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 14:30:56,179 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:30:56,186 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:30:56,192 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:30:56,198 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:30:56,204 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:30:56,210 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:30:56,216 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:30:56,228 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 14:30:56,235 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 14:30:56,241 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 14:30:56,248 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 14:30:56,255 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 14:30:56,262 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 14:30:56,269 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 14:30:56,275 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 14:30:56,282 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 14:30:56,289 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 14:30:56,297 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 14:30:56,306 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 14:30:56,314 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 14:30:56,323 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 14:30:56,336 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 14:30:56,345 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 14:30:56,354 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 14:30:56,362 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 14:30:56,378 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 14:30:56,387 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 14:30:56,418 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 14:30:56,425 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 14:30:56,433 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 14:30:56,440 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 14:30:56,447 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 14:30:56,455 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 14:30:56,463 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 14:30:56,471 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 14:30:56,483 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 14:30:56,492 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 14:30:56,498 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 14:30:56,504 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 14:30:56,509 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 14:30:56,670 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 14:30:56,677 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 14:30:56,682 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 14:30:56,687 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 14:30:56,693 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 14:30:56,810 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 14:30:56,816 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 14:30:56,821 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 14:30:56,828 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 14:30:56,833 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 14:30:56,840 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 14:30:56,845 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 14:30:56,970 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 14:30:56,977 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 14:30:56,984 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 14:30:56,990 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 14:30:57,005 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 14:30:57,014 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 14:30:57,021 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 14:30:57,030 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 14:30:57,037 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 14:30:57,044 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 14:30:57,051 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 14:30:57,058 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 14:30:57,065 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 14:30:57,071 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 14:30:57,077 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 14:30:57,084 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 14:30:57,090 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 14:30:57,098 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 14:30:57,108 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 14:30:57,115 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 14:30:57,122 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 14:30:57,129 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 14:30:57,265 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 14:30:57,272 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 14:30:57,288 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 14:30:57,296 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 14:30:57,305 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 14:30:57,313 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 14:30:57,322 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 14:30:57,330 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 14:30:57,339 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 14:30:57,347 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 14:30:57,358 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 14:30:57,367 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 14:30:57,377 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 14:30:57,386 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 14:30:57,398 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 14:30:57,408 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 14:30:57,424 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 14:30:57,433 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 14:30:57,443 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 14:30:57,454 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 14:30:57,464 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 14:30:57,475 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 14:30:57,507 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 14:30:57,523 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 14:30:57,529 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 14:30:57,536 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 14:30:57,542 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 14:30:57,552 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 14:30:57,563 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 14:30:57,575 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 14:30:57,601 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 14:30:57,616 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 14:30:57,631 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 14:30:57,645 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 14:34:49,017 -[test_order_items.py - 65] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 14:34:49,023 -[test_order_items.py - 65] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 14:34:49,028 -[test_order_items.py - 65] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 14:34:49,038 -[test_order_items.py - 65] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 14:34:49,049 -[test_order_items.py - 65] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 14:34:49,181 -[test_order_items.py - 65] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 14:34:49,193 -[test_order_items.py - 65] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 14:34:49,206 -[test_order_items.py - 65] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 14:34:49,217 -[test_order_items.py - 65] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 14:35:14,760 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 14:35:14,765 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 14:35:14,771 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 14:35:14,775 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 14:35:14,784 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 14:35:14,793 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 14:35:14,803 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 14:35:14,814 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 14:35:14,825 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 14:35:14,836 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 14:35:14,847 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 14:35:25,577 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 14:35:25,583 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 14:35:25,589 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 14:35:25,594 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 14:35:25,604 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 14:35:25,614 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 14:35:25,626 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 14:35:25,638 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 14:35:25,651 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 14:35:25,663 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 14:35:25,674 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 14:38:40,163 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 14:38:40,171 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:38:40,177 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:38:40,183 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:38:40,189 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:38:40,195 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:38:40,202 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:38:40,208 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:38:40,219 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 14:38:40,225 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 14:38:40,231 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 14:38:40,238 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 14:38:40,244 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 14:38:40,250 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 14:38:40,256 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 14:38:40,263 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 14:38:40,275 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 14:38:40,283 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 14:38:40,289 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 14:38:40,295 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 14:38:40,302 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 14:38:40,309 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 14:38:40,315 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 14:38:40,321 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 14:38:40,328 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 14:38:40,336 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 14:38:40,343 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 14:38:40,350 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 14:38:40,359 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 14:38:40,367 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 14:38:40,381 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 14:38:40,390 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 14:38:40,399 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 14:38:40,409 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 14:38:40,424 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 14:38:40,433 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 14:38:40,441 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 14:38:40,450 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 14:38:40,459 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 14:38:40,467 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 14:38:40,476 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 14:38:40,484 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 14:38:40,492 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 14:38:40,500 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 14:38:40,514 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 14:38:40,524 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 14:38:40,529 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 14:38:40,535 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 14:38:40,540 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 14:38:40,695 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 14:38:40,702 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 14:38:40,708 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 14:38:40,714 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 14:38:40,720 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 14:38:40,820 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 14:38:40,826 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 14:38:40,831 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 14:38:40,838 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 14:38:40,844 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 14:38:40,851 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 14:38:40,856 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 14:38:40,971 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 14:38:40,978 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 14:38:40,984 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 14:38:40,989 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 14:38:41,004 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 14:38:41,012 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 14:38:41,019 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 14:38:41,027 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 14:38:41,034 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 14:38:41,041 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 14:38:41,047 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 14:38:41,055 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 14:38:41,063 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 14:38:41,071 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 14:38:41,078 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 14:38:41,084 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 14:38:41,091 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 14:38:41,099 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 14:38:41,109 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 14:38:41,117 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 14:38:41,123 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 14:38:41,130 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 14:38:41,235 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 14:38:41,242 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 14:38:41,258 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 14:38:41,267 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 14:38:41,276 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 14:38:41,285 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 14:38:41,294 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 14:38:41,302 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 14:38:41,311 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 14:38:41,319 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 14:38:41,329 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 14:38:41,338 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 14:38:41,347 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 14:38:41,356 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 14:38:41,366 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 14:38:41,375 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 14:38:41,391 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 14:38:41,400 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 14:38:41,410 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 14:38:41,420 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 14:38:41,429 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 14:38:41,440 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 14:38:41,451 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 14:38:41,469 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 14:38:41,477 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 14:38:41,484 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 14:38:41,490 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 14:38:41,501 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 14:38:41,512 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 14:38:41,524 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 14:38:41,537 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 14:38:41,551 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 14:38:41,565 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 14:38:41,578 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 15:07:12,302 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 15:07:12,308 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 15:07:12,327 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 15:07:12,335 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 15:07:12,342 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 15:07:12,349 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 15:07:12,355 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 15:07:12,361 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 15:07:12,371 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 15:07:12,377 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 15:07:12,383 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 15:07:12,389 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 15:07:12,395 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 15:07:12,401 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 15:07:12,407 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 15:07:12,413 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 15:07:12,425 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 15:07:12,431 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 15:07:12,437 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 15:07:12,443 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 15:07:12,449 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 15:07:12,456 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 15:07:12,462 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 15:07:12,468 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 15:07:12,474 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 15:07:12,482 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 15:07:12,489 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 15:07:12,497 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 15:07:12,504 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 15:07:12,512 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 15:07:12,524 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 15:07:12,532 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 15:07:12,540 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 15:07:12,548 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 15:07:12,560 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 15:07:12,568 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 15:07:12,575 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 15:07:12,583 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 15:07:12,591 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 15:07:12,600 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 15:07:12,608 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 15:07:12,615 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 15:07:12,623 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 15:07:12,631 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 15:07:12,643 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 15:07:12,652 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 15:07:12,657 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 15:07:12,662 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 15:07:12,667 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 15:07:12,820 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 15:07:12,827 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 15:07:12,833 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 15:07:12,838 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 15:07:12,843 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 15:07:12,945 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 15:07:12,952 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 15:07:12,958 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 15:07:12,965 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 15:07:12,971 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 15:07:12,978 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 15:07:12,984 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 15:07:13,105 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 15:07:13,113 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 15:07:13,119 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 15:07:13,125 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 15:07:13,139 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 15:07:13,147 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 15:07:13,154 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 15:07:13,163 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 15:07:13,171 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 15:07:13,179 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 15:07:13,186 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 15:07:13,194 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 15:07:13,201 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 15:07:13,208 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 15:07:13,215 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 15:07:13,222 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 15:07:13,229 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 15:07:13,239 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 15:07:13,249 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 15:07:13,256 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 15:07:13,262 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 15:07:13,269 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 15:07:13,373 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 15:07:13,380 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 15:07:13,396 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 15:07:13,405 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 15:07:13,414 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 15:07:13,424 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 15:07:13,433 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 15:07:13,442 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 15:07:13,476 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 15:07:13,485 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 15:07:13,497 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 15:07:13,506 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 15:07:13,515 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 15:07:13,524 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 15:07:13,534 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 15:07:13,542 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 15:07:13,556 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 15:07:13,564 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 15:07:13,573 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 15:07:13,584 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 15:07:13,595 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 15:07:13,607 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 15:07:13,618 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 15:07:13,638 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 15:07:13,646 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 15:07:13,654 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 15:07:13,661 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 15:07:13,674 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 15:07:13,687 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 15:07:13,701 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 15:07:13,716 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 15:07:13,730 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 15:07:13,743 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 15:07:13,757 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 15:07:14,191 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 15:07:14,203 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 15:07:14,215 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 15:07:58,744 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 15:07:58,750 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 15:07:58,756 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 15:07:58,762 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 15:07:58,768 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 15:07:58,774 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 15:07:58,780 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 15:07:58,786 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 15:07:58,796 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 15:07:58,802 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 15:07:58,808 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 15:07:58,815 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 15:07:58,821 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 15:07:58,840 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 15:07:58,846 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 15:07:58,853 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 15:07:58,865 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 15:07:58,872 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 15:07:58,879 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 15:07:58,885 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 15:07:58,891 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 15:07:58,898 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 15:07:58,904 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 15:07:58,910 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 15:07:58,918 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 15:07:58,926 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 15:07:58,934 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 15:07:58,942 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 15:07:58,950 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 15:07:58,960 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 15:07:58,972 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 15:07:58,981 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 15:07:58,989 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 15:07:58,998 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 15:07:59,012 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 15:07:59,020 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 15:07:59,028 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 15:07:59,036 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 15:07:59,045 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 15:07:59,053 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 15:07:59,060 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 15:07:59,067 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 15:07:59,075 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 15:07:59,082 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 15:07:59,094 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 15:07:59,104 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 15:07:59,110 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 15:07:59,115 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 15:07:59,120 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 15:07:59,295 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 15:07:59,302 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 15:07:59,308 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 15:07:59,313 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 15:07:59,318 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 15:07:59,429 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 15:07:59,435 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 15:07:59,440 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 15:07:59,447 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 15:07:59,453 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 15:07:59,459 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 15:07:59,465 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 15:07:59,580 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 15:07:59,588 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 15:07:59,594 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 15:07:59,600 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 15:07:59,615 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 15:07:59,623 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 15:07:59,630 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 15:07:59,639 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 15:07:59,646 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 15:07:59,653 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 15:07:59,660 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 15:07:59,667 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 15:07:59,673 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 15:07:59,680 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 15:07:59,686 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 15:07:59,691 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 15:07:59,698 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 15:07:59,705 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 15:07:59,715 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 15:07:59,722 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 15:07:59,729 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 15:07:59,734 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 15:07:59,841 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 15:07:59,848 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 15:07:59,865 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 15:07:59,876 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 15:07:59,887 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 15:07:59,897 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 15:07:59,906 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 15:07:59,916 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 15:07:59,925 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 15:07:59,934 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 15:07:59,945 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 15:07:59,954 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 15:07:59,963 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 15:07:59,973 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 15:07:59,984 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 15:07:59,992 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 15:08:00,008 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 15:08:00,017 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 15:08:00,027 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 15:08:00,038 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 15:08:00,048 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 15:08:00,060 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 15:08:00,072 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 15:08:00,090 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 15:08:00,097 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 15:08:00,104 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 15:08:00,112 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 15:08:00,124 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 15:08:00,137 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 15:08:00,149 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 15:08:00,162 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 15:08:00,176 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 15:08:00,189 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 15:08:00,203 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 15:08:00,626 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 15:08:00,637 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 15:08:00,648 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 15:13:33,285 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 15:13:33,292 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 15:13:33,298 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 15:13:33,305 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 15:13:33,312 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 15:13:33,318 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 15:13:33,324 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 15:13:33,331 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 15:13:33,341 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 15:13:33,348 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 15:13:33,355 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 15:13:33,362 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 15:13:33,368 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 15:13:33,374 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 15:13:33,381 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 15:13:33,388 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 15:13:33,400 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 15:13:33,407 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 15:13:33,413 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 15:13:33,419 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 15:13:33,424 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 15:13:33,431 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 15:13:33,437 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 15:13:33,443 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 15:13:33,450 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 15:13:33,458 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 15:13:33,465 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 15:13:33,473 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 15:13:33,481 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 15:13:33,490 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 15:13:33,502 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 15:13:33,511 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 15:13:33,520 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 15:13:33,528 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 15:13:33,542 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 15:13:33,549 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 15:13:33,557 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 15:13:33,565 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 15:13:33,574 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 15:13:33,582 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 15:13:33,589 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 15:13:33,596 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 15:13:33,604 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 15:13:33,612 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 15:13:33,624 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 15:13:33,633 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 15:13:33,639 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 15:13:33,644 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 15:13:33,649 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 15:13:33,803 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 15:13:33,809 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 15:13:33,814 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 15:13:33,820 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 15:13:33,825 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 15:13:33,934 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 15:13:33,940 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 15:13:33,947 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 15:13:33,954 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 15:13:33,961 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 15:13:33,968 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 15:13:33,975 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 15:13:34,090 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 15:13:34,096 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 15:13:34,102 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 15:13:34,107 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 15:13:34,121 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 15:13:34,128 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 15:13:34,135 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 15:13:34,144 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 15:13:34,153 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 15:13:34,161 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 15:13:34,169 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 15:13:34,178 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 15:13:34,185 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 15:13:34,192 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 15:13:34,200 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 15:13:34,207 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 15:13:34,215 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 15:13:34,224 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 15:13:34,235 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 15:13:34,243 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 15:13:34,250 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 15:13:34,256 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 15:13:34,361 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 15:13:34,369 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 15:13:34,386 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 15:13:34,396 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 15:13:34,407 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 15:13:34,418 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 15:13:34,428 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 15:13:34,438 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 15:13:34,448 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 15:13:34,458 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 15:13:34,470 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 15:13:34,480 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 15:13:34,490 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 15:13:34,499 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 15:13:34,510 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 15:13:34,519 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 15:13:34,533 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 15:13:34,542 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 15:13:34,551 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 15:13:34,561 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 15:13:34,571 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 15:13:34,583 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 15:13:34,594 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 15:13:34,613 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 15:13:34,621 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 15:13:34,629 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 15:13:34,636 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 15:13:34,650 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 15:13:34,663 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 15:13:34,676 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 15:13:34,690 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 15:13:34,703 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 15:13:34,716 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 15:13:34,729 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 15:13:35,173 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 15:13:35,183 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 15:13:35,194 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 15:14:04,217 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 15:14:04,223 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 15:14:04,229 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 15:14:04,236 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 15:14:04,242 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 15:14:04,248 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 15:14:04,253 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 15:14:04,259 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 15:14:04,268 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 15:14:04,274 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 15:14:04,281 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 15:14:04,287 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 15:14:04,293 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 15:14:04,299 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 15:14:04,304 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 15:14:04,310 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 15:14:04,322 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 15:14:04,329 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 15:14:04,335 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 15:14:04,341 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 15:14:04,347 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 15:14:04,353 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 15:14:04,359 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 15:14:04,364 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 15:14:04,370 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 15:14:04,379 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 15:14:04,387 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 15:14:04,396 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 15:14:04,403 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 15:14:04,412 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 15:14:04,425 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 15:14:04,434 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 15:14:04,442 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 15:14:04,451 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 15:14:04,464 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 15:14:04,472 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 15:14:04,480 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 15:14:04,487 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 15:14:04,494 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 15:14:04,502 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 15:14:04,509 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 15:14:04,517 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 15:14:04,525 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 15:14:04,534 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 15:14:04,548 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 15:14:04,558 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 15:14:04,564 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 15:14:04,569 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 15:14:04,574 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 15:14:04,737 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 15:14:04,743 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 15:14:04,748 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 15:14:04,753 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 15:14:04,758 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 15:14:04,862 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 15:14:04,869 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 15:14:04,875 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 15:14:04,882 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 15:14:04,888 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 15:14:04,895 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 15:14:04,901 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 15:14:05,016 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 15:14:05,023 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 15:14:05,030 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 15:14:05,035 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 15:14:05,051 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 15:14:05,059 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 15:14:05,066 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 15:14:05,076 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 15:14:05,083 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 15:14:05,091 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 15:14:05,098 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 15:14:05,105 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 15:14:05,112 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 15:14:05,118 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 15:14:05,124 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 15:14:05,130 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 15:14:05,137 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 15:14:05,144 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 15:14:05,153 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 15:14:05,161 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 15:14:05,168 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 15:14:05,174 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 15:14:05,279 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 15:14:05,286 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 15:14:05,304 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 15:14:05,314 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 15:14:05,324 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 15:14:05,334 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 15:14:05,343 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 15:14:05,353 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 15:14:05,362 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 15:14:05,370 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 15:14:05,381 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 15:14:05,390 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 15:14:05,399 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 15:14:05,408 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 15:14:05,418 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 15:14:05,427 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 15:14:05,441 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 15:14:05,450 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 15:14:05,459 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 15:14:05,468 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 15:14:05,476 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 15:14:05,488 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 15:14:05,500 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 15:14:05,518 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 15:14:05,526 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 15:14:05,534 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 15:14:05,542 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 15:14:05,555 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 15:14:05,568 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 15:14:05,582 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 15:14:05,596 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 15:14:05,610 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 15:14:05,623 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 15:14:05,637 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 15:14:06,066 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 15:14:06,077 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 15:14:06,088 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 15:14:14,332 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 15:14:14,339 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 15:14:14,345 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 15:14:14,351 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 15:14:14,357 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 15:14:14,363 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 15:14:14,369 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 15:14:14,374 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 15:14:14,384 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 15:14:14,389 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 15:14:14,395 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 15:14:14,401 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 15:14:14,407 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 15:14:14,413 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 15:14:14,418 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 15:14:14,424 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 15:14:14,436 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 15:14:14,443 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 15:14:14,448 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 15:14:14,454 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 15:14:14,460 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 15:14:14,466 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 15:14:14,472 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 15:14:14,478 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 15:14:14,484 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 15:14:14,492 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 15:14:14,501 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 15:14:14,509 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 15:14:14,517 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 15:14:14,526 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 15:14:14,538 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 15:14:14,546 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 15:14:14,553 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 15:14:14,562 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 15:14:14,576 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 15:14:14,584 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 15:14:14,592 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 15:14:14,599 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 15:14:14,607 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 15:14:14,615 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 15:14:14,623 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 15:14:14,631 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 15:14:14,638 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 15:14:14,646 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 15:14:14,658 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 15:14:14,667 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 15:14:14,673 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 15:14:14,678 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 15:14:14,683 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 15:14:14,844 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 15:14:14,850 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 15:14:14,856 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 15:14:14,861 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 15:14:14,866 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 15:14:14,970 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 15:14:14,977 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 15:14:14,983 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 15:14:14,990 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 15:14:14,997 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 15:14:15,004 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 15:14:15,010 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 15:14:15,124 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 15:14:15,131 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 15:14:15,136 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 15:14:15,141 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 15:14:15,155 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 15:14:15,163 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 15:14:15,169 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 15:14:15,178 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 15:14:15,185 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 15:14:15,192 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 15:14:15,199 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 15:14:15,207 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 15:14:15,214 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 15:14:15,221 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 15:14:15,228 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 15:14:15,236 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 15:14:15,243 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 15:14:15,252 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 15:14:15,263 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 15:14:15,271 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 15:14:15,277 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 15:14:15,284 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 15:14:15,389 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 15:14:15,397 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 15:14:15,414 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 15:14:15,424 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 15:14:15,434 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 15:14:15,445 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 15:14:15,455 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 15:14:15,465 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 15:14:15,475 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 15:14:15,485 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 15:14:15,496 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 15:14:15,504 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 15:14:15,514 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 15:14:15,522 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 15:14:15,534 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 15:14:15,543 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 15:14:15,557 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 15:14:15,566 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 15:14:15,575 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 15:14:15,585 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 15:14:15,595 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 15:14:15,606 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 15:14:15,617 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 15:14:15,636 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 15:14:15,643 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 15:14:15,650 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 15:14:15,656 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 15:14:15,668 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 15:14:15,681 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 15:14:15,694 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 15:14:15,708 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 15:14:15,722 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 15:14:15,735 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 15:14:15,748 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 15:14:16,179 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 15:14:16,190 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 15:14:16,200 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 15:30:54,144 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 15:30:54,152 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 15:30:54,156 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 15:30:54,159 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 15:30:54,163 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 15:30:54,317 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 15:30:54,323 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 15:30:54,327 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 15:30:54,332 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 15:30:54,337 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 15:30:54,441 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 15:30:54,445 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 15:30:54,450 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 15:30:54,454 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 15:30:54,458 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 15:30:54,463 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 15:30:54,467 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 15:30:54,566 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 15:30:54,572 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 15:30:54,577 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 15:30:54,581 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 15:31:57,134 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 15:31:57,141 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 15:31:57,147 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 15:31:57,154 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 15:31:57,160 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 15:31:57,166 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 15:31:57,172 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 15:31:57,178 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 15:31:57,188 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 15:31:57,196 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 15:31:57,202 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 15:31:57,209 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 15:31:57,215 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 15:31:57,221 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 15:31:57,227 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 15:31:57,233 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 15:31:57,245 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 15:31:57,252 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 15:31:57,258 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 15:31:57,264 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 15:31:57,270 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 15:31:57,293 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 15:31:57,300 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 15:31:57,307 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 15:31:57,314 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 15:31:57,321 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 15:31:57,329 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 15:31:57,337 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 15:31:57,344 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 15:31:57,353 -[test_business_good_select01.py - 85] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 15:31:57,364 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 15:31:57,372 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 15:31:57,380 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 15:31:57,388 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 15:31:57,401 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 15:31:57,408 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 15:31:57,417 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 15:31:57,424 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 15:31:57,432 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 15:31:57,439 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 15:31:57,446 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 15:31:57,452 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 15:31:57,459 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 15:31:57,467 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 15:31:57,479 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 15:31:57,488 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 15:31:57,493 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 15:31:57,498 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 15:31:57,503 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 15:31:57,510 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 15:31:57,516 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 15:31:57,522 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 15:31:57,530 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 15:31:57,537 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 15:31:57,543 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 15:31:57,550 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 15:31:57,556 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 15:31:57,564 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 15:31:57,570 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 15:31:57,579 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 15:31:57,585 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 15:31:57,591 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 15:31:57,599 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 15:31:57,606 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 15:31:57,611 -[test_business_register.py - 68] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 15:31:57,626 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 15:31:57,634 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 15:31:57,640 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 15:31:57,648 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 15:31:57,654 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 15:31:57,662 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 15:31:57,669 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 15:31:57,675 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 15:31:57,682 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 15:31:57,688 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 15:31:57,695 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 15:31:57,702 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 15:31:57,709 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 15:31:57,719 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 15:31:57,730 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 15:31:57,739 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 15:31:57,747 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 15:31:57,754 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 15:31:57,913 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 15:31:57,920 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 15:31:57,937 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 15:31:57,948 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 15:31:57,958 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 15:31:57,970 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 15:31:57,980 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 15:31:57,990 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 15:31:58,000 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 15:31:58,011 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 15:31:58,023 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 15:31:58,032 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 15:31:58,041 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 15:31:58,053 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 15:31:58,064 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 15:31:58,073 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 15:31:58,087 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 15:31:58,096 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 15:31:58,105 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 15:31:58,115 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 15:31:58,124 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 15:31:58,136 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 15:31:58,147 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 15:31:58,165 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 15:31:58,173 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 15:31:58,182 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 15:31:58,190 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 15:31:58,202 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 15:31:58,215 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 15:31:58,228 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 15:31:58,241 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 15:31:58,276 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 15:31:58,290 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 15:31:58,303 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 15:31:58,653 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 15:31:58,665 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 15:31:58,677 -[test_order_items01.py - 58] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 16:01:58,972 -[test_order_items01.py - 71] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 16:41:44,345 -[test_order_items01.py - 71] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 16:43:46,664 -[test_order_items01.py - 71] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 16:44:30,492 -[test_order_items01.py - 71] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 16:44:56,594 -[test_order_items01.py - 71] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 16:46:26,724 -[test_order_items01.py - 73] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 16:47:39,432 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 16:55:35,742 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 16:55:35,747 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 16:55:35,751 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 16:55:35,755 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 16:55:35,759 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 16:55:35,763 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 16:55:35,769 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 16:55:35,774 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 16:55:35,778 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 16:55:35,783 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 16:55:35,788 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 16:55:35,793 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 16:55:35,797 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 16:55:35,803 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 16:55:57,627 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 16:55:57,634 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 16:55:57,652 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 16:55:57,659 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 16:55:57,669 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 16:55:57,674 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 16:55:57,680 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 16:55:57,686 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 16:55:57,692 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 16:55:57,698 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 16:55:57,704 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 16:55:57,710 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 16:55:57,718 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 16:55:57,726 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 16:56:25,336 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 16:56:25,341 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 16:56:25,346 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 16:56:25,350 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 16:56:25,354 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 16:56:25,359 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 16:56:25,363 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 16:56:25,368 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 16:56:25,372 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 16:56:25,379 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 16:56:25,384 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 16:56:25,389 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 16:56:25,394 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 16:56:25,400 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 16:57:10,543 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 16:57:10,550 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 16:57:10,554 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 16:57:10,558 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 16:57:10,561 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 16:57:10,617 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 16:57:10,620 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 16:57:10,623 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 16:57:10,627 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 16:57:10,631 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 16:57:10,634 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 16:57:10,638 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 16:57:10,642 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 16:57:10,646 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 16:57:10,650 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 16:57:10,654 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 16:57:10,657 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 16:57:10,662 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 16:57:10,665 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 16:57:10,668 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 16:57:52,481 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 16:57:52,489 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 16:57:52,493 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 16:57:52,496 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 16:57:52,500 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 16:57:52,550 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 16:57:52,554 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 16:57:52,558 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 16:57:52,562 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 16:57:52,565 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 16:57:52,569 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 16:57:52,572 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 16:57:52,577 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 16:57:52,580 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 16:57:52,586 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 16:57:52,590 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 16:57:52,593 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 16:57:52,598 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 16:57:52,602 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 16:57:52,605 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 16:57:55,487 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 16:57:55,519 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 16:57:55,523 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 16:57:55,526 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 16:57:55,530 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 16:57:55,581 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 16:57:55,584 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 16:57:55,588 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 16:57:55,591 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 16:57:55,595 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 16:57:55,598 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 16:57:55,602 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 16:57:55,607 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 16:57:55,610 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 16:57:55,616 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 16:57:55,620 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 16:57:55,624 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 16:57:55,629 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 16:57:55,633 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 16:57:55,637 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 16:58:35,285 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 16:58:35,293 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 16:58:35,296 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 16:58:35,301 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 16:58:35,305 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 16:58:35,310 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 16:58:35,313 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 16:58:35,317 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 16:58:35,322 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 16:58:35,325 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 16:58:35,329 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 16:58:35,333 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 16:58:35,337 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 16:58:35,343 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 16:58:35,346 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 16:58:35,352 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 16:58:35,356 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 16:58:35,360 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 16:58:35,365 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 16:58:35,369 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 16:58:35,373 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 16:58:52,110 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 16:58:52,116 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 16:58:52,120 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 16:58:52,128 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 16:58:52,132 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 16:58:52,137 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 16:58:52,141 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 16:58:52,147 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 16:58:52,153 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 16:58:52,157 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 16:58:52,162 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 16:58:52,167 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 16:58:52,171 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 16:58:52,177 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 16:58:52,184 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 16:58:52,190 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 16:58:52,194 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 16:58:52,199 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 16:58:52,203 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 16:58:52,207 -[test_goods_input.py - 56] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 17:00:19,746 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 17:00:19,753 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 17:00:19,763 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 17:00:19,771 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 17:00:19,778 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 17:00:19,785 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 17:00:19,792 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 17:00:19,799 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 17:00:19,808 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 17:00:19,815 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 17:00:19,822 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 17:00:19,829 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 17:00:19,838 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 17:00:19,845 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 17:04:09,087 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 17:04:38,947 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 17:04:38,952 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 17:04:38,957 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 17:04:38,961 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 17:04:38,969 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 17:04:38,980 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 17:04:38,991 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 17:04:39,000 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 17:04:39,010 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 17:04:39,019 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 17:04:39,028 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 17:04:53,698 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 17:04:53,704 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 17:04:53,708 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 17:04:53,713 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 17:04:53,722 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 17:04:53,734 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 17:04:53,745 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 17:04:53,755 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 17:04:53,765 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 17:04:53,776 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 17:04:53,786 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 17:05:01,254 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 17:05:01,261 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 17:05:01,267 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 17:05:01,273 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 17:05:01,280 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 17:05:01,288 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 17:05:01,295 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 17:05:01,301 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 17:05:01,311 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 17:05:01,317 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 17:05:01,323 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 17:05:01,330 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 17:05:01,336 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 17:05:01,342 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 17:05:01,348 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 17:05:01,354 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 17:05:01,366 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 17:05:01,373 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 17:05:01,379 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 17:05:01,386 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 17:05:01,392 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 17:05:01,398 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 17:05:01,404 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 17:05:01,410 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 17:05:01,417 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 17:05:01,425 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 17:05:01,433 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 17:05:01,439 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 17:05:01,447 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 17:05:01,455 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 17:05:01,467 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 17:05:01,477 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 17:05:01,484 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 17:05:01,503 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 17:05:01,516 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 17:05:01,525 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 17:05:01,532 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 17:05:01,541 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 17:05:01,549 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 17:05:01,558 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 17:05:01,565 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 17:05:01,573 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 17:05:01,580 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 17:05:01,588 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 17:05:01,601 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 17:05:01,610 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 17:05:01,615 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 17:05:01,620 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 17:05:01,625 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 17:05:01,631 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 17:05:01,638 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 17:05:01,643 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 17:05:01,651 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 17:05:01,658 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 17:05:01,669 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 17:05:01,675 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 17:05:01,681 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 17:05:01,688 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 17:05:01,695 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 17:05:01,703 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 17:05:01,710 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 17:05:01,716 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 17:05:01,724 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 17:05:01,730 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 17:05:01,736 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 17:05:01,751 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 17:05:01,759 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 17:05:01,765 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 17:05:01,773 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 17:05:01,780 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 17:05:01,786 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 17:05:01,793 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 17:05:01,800 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 17:05:01,807 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 17:05:01,812 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 17:05:01,820 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 17:05:01,827 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 17:05:01,833 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 17:05:01,841 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 17:05:01,850 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 17:05:01,859 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 17:05:01,866 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 17:05:01,873 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 17:05:01,880 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 17:05:01,887 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 17:05:01,905 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 17:05:01,915 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 17:05:01,925 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 17:05:01,934 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 17:05:01,943 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 17:05:01,953 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 17:05:01,962 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 17:05:01,970 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 17:05:01,980 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 17:05:01,988 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 17:05:01,997 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 17:05:02,005 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 17:05:02,015 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 17:05:02,024 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 17:05:02,037 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 17:05:02,046 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 17:05:02,054 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 17:05:02,064 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 17:05:02,073 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 17:05:02,084 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 17:05:02,095 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 17:05:02,138 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 17:05:02,165 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 17:05:02,173 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 17:05:02,179 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 17:05:02,189 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 17:05:02,200 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 17:05:02,211 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 17:05:02,222 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 17:05:02,235 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 17:05:02,248 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 17:05:02,260 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 17:05:02,277 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 17:05:02,284 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 17:05:02,292 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 17:05:02,299 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 17:05:02,312 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 17:05:02,323 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 17:05:02,337 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 17:05:02,350 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 17:05:02,364 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 17:05:02,375 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 17:05:02,386 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 17:06:40,721 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 17:06:40,728 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 17:06:40,734 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 17:06:40,740 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 17:06:40,746 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 17:06:40,751 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 17:06:40,757 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 17:06:40,763 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 17:06:40,773 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 17:06:40,779 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 17:06:40,786 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 17:06:40,793 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 17:06:40,798 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 17:06:40,804 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 17:06:40,810 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 17:06:40,815 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 17:06:40,828 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 17:06:40,834 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 17:06:40,840 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 17:06:40,846 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 17:06:40,853 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 17:06:40,860 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 17:06:40,865 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 17:06:40,871 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 17:06:40,878 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 17:06:40,886 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 17:06:40,894 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 17:06:40,902 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 17:06:40,909 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 17:06:40,918 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 17:06:40,931 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 17:06:40,961 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 17:06:40,970 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 17:06:40,978 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 17:06:40,991 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 17:06:40,998 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 17:06:41,006 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 17:06:41,014 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 17:06:41,020 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 17:06:41,028 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 17:06:41,034 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 17:06:41,042 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 17:06:41,049 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 17:06:41,057 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 17:06:41,071 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 17:06:41,080 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 17:06:41,086 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 17:06:41,092 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 17:06:41,099 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 17:06:41,106 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 17:06:41,113 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 17:06:41,119 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 17:06:41,125 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 17:06:41,131 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 17:06:41,136 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 17:06:41,142 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 17:06:41,148 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 17:06:41,157 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 17:06:41,163 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 17:06:41,170 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 17:06:41,175 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 17:06:41,181 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 17:06:41,187 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 17:06:41,192 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 17:06:41,197 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 17:06:41,212 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 17:06:41,219 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 17:06:41,226 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 17:06:41,233 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 17:06:41,239 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 17:06:41,245 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 17:06:41,251 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 17:06:41,258 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 17:06:41,264 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 17:06:41,272 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 17:06:41,278 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 17:06:41,284 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 17:06:41,291 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 17:06:41,300 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 17:06:41,310 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 17:06:41,317 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 17:06:41,323 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 17:06:41,330 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 17:06:41,360 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 17:06:41,367 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 17:06:41,383 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 17:06:41,391 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 17:06:41,400 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 17:06:41,408 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 17:06:41,416 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 17:06:41,425 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 17:06:41,433 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 17:06:41,441 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 17:06:41,451 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 17:06:41,459 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 17:06:41,469 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 17:06:41,478 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 17:06:41,489 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 17:06:41,497 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 17:06:41,513 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 17:06:41,522 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 17:06:41,532 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 17:06:41,541 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 17:06:41,550 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 17:06:41,560 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 17:06:41,570 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 17:06:41,588 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 17:06:41,596 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 17:06:41,603 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 17:06:41,609 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 17:06:41,619 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 17:06:41,630 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 17:06:41,641 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 17:06:41,655 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 17:06:41,668 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 17:06:41,682 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 17:06:41,695 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 17:06:41,712 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 17:06:41,720 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 17:06:41,728 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 17:06:41,736 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 17:06:41,748 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 17:06:41,760 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 17:06:41,773 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 17:06:41,784 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 17:06:41,795 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 17:06:41,808 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 17:06:41,819 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 17:15:37,688 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 17:15:37,696 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 17:15:37,702 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 17:15:37,707 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 17:15:37,718 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 17:15:37,723 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 17:15:37,728 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 17:15:37,734 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 17:15:37,740 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 17:15:37,746 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 17:15:37,751 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 17:15:37,756 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 17:15:37,761 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 17:15:37,767 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 19:49:50,434 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 19:49:50,440 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 19:49:50,445 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 19:49:50,451 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 19:49:50,461 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 19:49:50,466 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 19:49:50,471 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 19:49:50,476 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 19:49:50,482 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 19:49:50,488 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 19:49:50,494 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 19:49:50,501 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 19:49:50,508 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 19:49:50,514 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 19:49:52,990 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 19:49:52,996 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 19:49:53,001 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 19:49:53,006 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 19:49:53,015 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 19:49:53,022 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 19:49:53,027 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 19:49:53,032 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 19:49:53,037 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 19:49:53,043 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 19:49:53,048 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 19:49:53,054 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 19:49:53,060 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 19:49:53,067 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 19:49:56,021 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 19:49:56,027 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 19:49:56,032 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 19:49:56,037 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 19:49:56,046 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 19:49:56,051 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 19:49:56,055 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 19:49:56,060 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 19:49:56,066 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 19:49:56,073 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 19:49:56,079 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 19:49:56,084 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 19:49:56,090 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 19:49:56,096 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 19:49:58,952 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 19:49:58,958 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 19:49:58,963 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 19:49:58,968 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 19:49:58,977 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 19:49:58,982 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 19:49:58,987 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 19:49:58,992 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 19:49:58,997 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 19:49:59,002 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 19:49:59,008 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 19:49:59,013 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 19:49:59,019 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 19:49:59,025 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 19:50:01,622 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 19:50:01,628 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 19:50:01,633 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 19:50:01,638 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 19:50:01,670 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 19:50:01,676 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 19:50:01,681 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 19:50:01,686 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 19:50:01,692 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 19:50:01,697 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 19:50:01,703 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 19:50:01,708 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 19:50:01,714 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 19:50:01,720 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 19:55:29,691 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 19:55:29,698 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 19:55:29,704 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 19:55:29,712 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 19:55:29,718 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 19:55:29,724 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 19:55:29,731 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 19:55:29,738 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 19:55:29,750 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-29 19:55:29,757 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-29 19:55:29,764 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-29 19:55:29,770 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-29 19:55:29,777 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-29 19:55:29,784 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-29 19:55:29,790 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-29 19:55:29,797 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-29 19:55:29,811 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-29 19:55:29,819 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-29 19:55:29,825 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-29 19:55:29,831 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-29 19:55:29,838 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-29 19:55:29,846 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-29 19:55:29,852 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-29 19:55:29,859 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-29 19:55:29,867 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-29 19:55:29,875 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-29 19:55:29,882 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-29 19:55:29,891 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-29 19:55:29,899 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-29 19:55:29,907 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-29 19:55:29,920 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 19:55:29,930 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 19:55:29,940 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 19:55:29,949 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 19:55:29,963 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 19:55:29,972 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 19:55:29,980 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 19:55:29,988 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 19:55:29,996 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 19:55:30,004 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 19:55:30,012 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 19:55:30,020 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 19:55:30,029 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 19:55:30,038 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 19:55:30,053 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-29 19:55:30,065 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-29 19:55:30,071 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-29 19:55:30,077 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-29 19:55:30,082 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-29 19:55:30,089 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-29 19:55:30,096 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-29 19:55:30,102 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-29 19:55:30,109 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-29 19:55:30,116 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-29 19:55:30,122 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-29 19:55:30,128 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-29 19:55:30,134 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-29 19:55:30,142 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-29 19:55:30,149 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-29 19:55:30,156 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-29 19:55:30,162 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-29 19:55:30,167 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-29 19:55:30,175 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-29 19:55:30,180 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-29 19:55:30,186 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-29 19:55:30,201 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-29 19:55:30,209 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-29 19:55:30,216 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-29 19:55:30,224 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-29 19:55:30,231 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-29 19:55:30,237 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-29 19:55:30,243 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-29 19:55:30,250 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-29 19:55:30,258 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-29 19:55:30,266 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-29 19:55:30,273 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-29 19:55:30,279 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-29 19:55:30,286 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-29 19:55:30,294 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-29 19:55:30,304 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-29 19:55:30,313 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-29 19:55:30,320 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-29 19:55:30,328 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-29 19:55:30,335 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-29 19:55:30,341 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-29 19:55:30,358 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-29 19:55:30,367 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-29 19:55:30,376 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-29 19:55:30,385 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-29 19:55:30,393 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-29 19:55:30,401 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-29 19:55:30,411 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-29 19:55:30,420 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-29 19:55:30,431 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-29 19:55:30,439 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-29 19:55:30,449 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-29 19:55:30,457 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-29 19:55:30,467 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-29 19:55:30,478 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-29 19:55:30,494 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-29 19:55:30,504 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-29 19:55:30,514 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-29 19:55:30,525 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-29 19:55:30,534 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-29 19:55:30,545 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 19:55:30,557 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-29 19:55:30,576 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 19:55:30,584 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 19:55:30,590 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 19:55:30,597 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 19:55:30,609 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 19:55:30,620 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 19:55:30,633 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 19:55:30,648 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 19:55:30,661 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 19:55:30,674 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 19:55:30,689 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 19:55:30,709 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-29 19:55:30,717 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-29 19:55:30,725 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-29 19:55:30,733 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-29 19:55:30,745 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-29 19:55:30,757 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-29 19:55:30,770 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-29 19:55:30,782 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-29 19:55:30,795 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-29 19:55:30,806 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-29 19:55:30,819 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-29 20:03:22,443 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:03:22,454 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:03:22,463 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:03:22,472 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:03:22,488 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:03:22,496 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:03:22,505 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:03:22,515 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:03:22,524 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:03:22,534 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:03:22,544 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:03:22,555 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:03:22,566 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:03:22,597 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:03:23,585 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:03:23,593 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:03:23,598 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:03:23,604 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:03:23,614 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:03:23,619 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:03:23,624 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:03:23,631 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:03:23,637 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:03:23,644 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:03:23,650 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:03:23,656 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:03:23,662 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:03:23,669 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:03:26,417 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:03:26,425 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:03:26,430 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:03:26,435 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:03:26,444 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:03:26,449 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:03:26,454 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:03:26,459 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:03:26,464 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:03:26,470 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:03:26,475 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:03:26,480 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:03:26,486 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:03:26,492 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:03:29,070 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:03:29,076 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:03:29,081 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:03:29,087 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:03:29,096 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:03:29,101 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:03:29,106 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:03:29,112 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:03:29,118 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:03:29,145 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:03:29,151 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:03:29,157 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:03:29,163 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:03:29,169 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:03:31,779 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:03:31,785 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:03:31,791 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:03:31,796 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:03:31,806 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:03:31,811 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:03:31,816 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:03:31,821 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:03:31,826 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:03:31,833 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:03:31,839 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:03:31,845 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:03:31,851 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:03:31,857 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:03:34,410 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:03:34,416 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:03:34,421 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:03:34,426 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:03:34,436 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:03:34,441 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:03:34,446 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:03:34,451 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:03:34,456 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:03:34,463 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:03:34,469 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:03:34,474 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:03:34,480 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:03:34,486 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:03:36,732 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:03:36,738 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:03:36,743 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:03:36,749 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:03:36,758 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:03:36,763 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:03:36,768 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:03:36,782 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:03:36,789 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:03:36,794 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:03:36,800 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:03:36,805 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:03:36,811 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:03:36,820 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:03:39,485 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:03:39,491 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:03:39,496 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:03:39,501 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:03:39,510 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:03:39,514 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:03:39,519 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:03:39,524 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:03:39,530 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:03:39,535 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:03:39,541 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:03:39,546 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:03:39,552 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:03:39,558 -[test_business_good_select02.py - 113] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:10:05,676 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:10:05,682 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:10:05,688 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:10:05,694 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:10:05,706 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:10:05,712 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:10:05,719 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:10:05,724 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:10:05,731 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:10:05,737 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:10:05,743 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:10:05,750 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:10:05,756 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:10:05,763 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:12:25,464 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:12:25,471 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:12:25,476 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:12:25,482 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:12:25,492 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:12:25,498 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:12:25,504 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:12:25,510 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:12:25,516 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:12:25,522 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:12:25,528 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:12:25,535 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:12:25,541 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:12:25,548 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:14:33,686 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:14:33,693 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:14:33,699 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:14:33,705 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:14:33,716 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:14:33,722 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:14:33,729 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:14:33,736 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:14:33,742 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:14:33,748 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:14:33,754 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:14:33,760 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:14:33,767 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:14:33,774 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:15:36,394 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:15:36,401 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:15:36,406 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:15:36,412 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:15:36,421 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:15:36,427 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:15:36,432 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:15:36,438 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:15:36,444 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:15:36,451 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:15:36,460 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:15:36,466 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:15:36,472 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:15:36,480 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:16:29,655 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:16:29,661 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:16:29,666 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:16:29,672 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:16:29,681 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:16:29,686 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:16:29,691 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:16:29,696 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:16:29,701 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:16:29,708 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:16:29,734 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:16:29,740 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:16:29,745 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:16:29,752 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:17:17,700 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:17:17,706 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:17:17,712 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:17:17,718 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:17:17,728 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:17:17,734 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:17:17,739 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:17:17,744 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:17:17,750 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:17:17,756 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:17:17,763 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:17:17,769 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:17:17,775 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:17:17,782 -[test_business_good_select02.py - 115] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-29 20:17:56,104 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-29 20:17:56,111 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-29 20:17:56,117 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-29 20:17:56,122 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-29 20:17:56,133 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-29 20:17:56,139 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-29 20:17:56,144 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-29 20:17:56,150 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-29 20:17:56,156 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-29 20:17:56,164 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-29 20:17:56,187 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-29 20:17:56,193 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-29 20:17:56,199 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-29 20:17:56,205 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-30 09:22:39,319 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-30 09:22:39,326 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-30 09:22:39,333 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-30 09:22:39,339 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-30 09:22:39,347 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-30 09:22:39,354 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-30 09:22:39,360 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-30 09:22:39,366 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-30 09:22:39,376 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-11-30 09:22:39,383 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-11-30 09:22:39,389 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-11-30 09:22:39,396 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-11-30 09:22:39,402 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-11-30 09:22:39,409 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-11-30 09:22:39,417 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-11-30 09:22:39,423 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-11-30 09:22:39,436 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-11-30 09:22:39,443 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-11-30 09:22:39,450 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-11-30 09:22:39,456 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-11-30 09:22:39,462 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-11-30 09:22:39,469 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-11-30 09:22:39,476 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-11-30 09:22:39,483 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-11-30 09:22:39,490 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-11-30 09:22:39,499 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-11-30 09:22:39,507 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-11-30 09:22:39,515 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-11-30 09:22:39,523 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-11-30 09:22:39,532 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-11-30 09:22:39,546 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-11-30 09:22:39,556 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-11-30 09:22:39,564 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-11-30 09:22:39,573 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-11-30 09:22:39,588 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-11-30 09:22:39,596 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-11-30 09:22:39,605 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-11-30 09:22:39,614 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-11-30 09:22:39,623 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-11-30 09:22:39,631 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-11-30 09:22:39,639 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-11-30 09:22:39,648 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-11-30 09:22:39,656 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-11-30 09:22:39,664 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-11-30 09:22:39,678 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-11-30 09:22:39,688 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-11-30 09:22:39,696 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-11-30 09:22:39,702 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-11-30 09:22:39,707 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-11-30 09:22:39,714 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-11-30 09:22:39,721 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-11-30 09:22:39,728 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-11-30 09:22:39,734 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-11-30 09:22:39,742 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-11-30 09:22:39,749 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-11-30 09:22:39,755 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-11-30 09:22:39,763 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-11-30 09:22:39,773 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-11-30 09:22:39,780 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-11-30 09:22:39,788 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-11-30 09:22:39,796 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-11-30 09:22:39,802 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-11-30 09:22:39,811 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-11-30 09:22:39,818 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-11-30 09:22:39,825 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-11-30 09:22:39,840 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-11-30 09:22:39,850 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-11-30 09:22:39,858 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-11-30 09:22:39,866 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-11-30 09:22:39,873 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-11-30 09:22:39,880 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-11-30 09:22:39,887 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-11-30 09:22:39,894 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-11-30 09:22:39,900 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-11-30 09:22:39,907 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-11-30 09:22:39,914 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-11-30 09:22:39,921 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-11-30 09:22:39,929 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-11-30 09:22:39,939 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-11-30 09:22:39,950 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-11-30 09:22:39,960 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-11-30 09:22:39,967 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-11-30 09:22:39,977 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-11-30 09:22:39,986 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-11-30 09:22:39,995 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-11-30 09:22:40,014 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-11-30 09:22:40,025 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-11-30 09:22:40,036 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-11-30 09:22:40,046 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-11-30 09:22:40,055 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-11-30 09:22:40,066 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-11-30 09:22:40,076 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-11-30 09:22:40,085 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-11-30 09:22:40,096 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-11-30 09:22:40,105 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-11-30 09:22:40,115 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-11-30 09:22:40,124 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-11-30 09:22:40,137 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-11-30 09:22:40,175 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-11-30 09:22:40,192 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-11-30 09:22:40,203 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-11-30 09:22:40,214 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-11-30 09:22:40,226 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-11-30 09:22:40,236 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-11-30 09:22:40,248 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-30 09:22:40,259 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-11-30 09:22:40,276 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-30 09:22:40,283 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-30 09:22:40,290 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-30 09:22:40,297 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-30 09:22:40,308 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-30 09:22:40,321 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-30 09:22:40,333 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-30 09:22:40,349 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-30 09:22:40,366 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-30 09:22:40,382 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-30 09:22:40,399 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-11-30 09:22:40,417 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-11-30 09:22:40,426 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-11-30 09:22:40,435 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-11-30 09:22:40,443 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-11-30 09:22:40,454 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-11-30 09:22:40,466 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-11-30 09:22:40,480 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-11-30 09:22:40,492 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-11-30 09:22:40,504 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-11-30 09:22:40,516 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-11-30 09:22:40,530 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-12-02 13:27:42,741 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-12-02 13:27:42,749 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-12-02 13:27:42,757 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-12-02 13:27:42,765 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-12-02 13:27:42,773 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-12-02 13:27:42,780 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-12-02 13:27:42,786 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-12-02 13:27:42,793 -[test_business_login01.py - 44] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-12-02 13:27:42,803 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:1,测试场景:登录接口-测试主流程
2022-12-02 13:27:42,809 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:2,测试场景:登录接口-用户名为空
2022-12-02 13:27:42,816 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:3,测试场景:登录接口-用户名错误
2022-12-02 13:27:42,823 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:4,测试场景:登录接口-密码错误
2022-12-02 13:27:42,829 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:5,测试场景:登录接口-密码为空
2022-12-02 13:27:42,836 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:6,测试场景:登录接口-typeId为空
2022-12-02 13:27:42,842 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:7,测试场景:登录接口-typeId错误(>3位)
2022-12-02 13:27:42,848 -[test_business_login04.py - 54] -INFO:运行成功,测试编号为:8,测试场景:登录接口-typeId错误
2022-12-02 13:27:42,862 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:1,测试场景:查询商品正确流程1
2022-12-02 13:27:42,869 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:2,测试场景:查询商品正确流程2-全部填写
2022-12-02 13:27:42,876 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:3,测试场景:查询商品token值为空
2022-12-02 13:27:42,883 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:4,测试场景:查询商品token值错误
2022-12-02 13:27:42,890 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:5,测试场景:查询商品token值失效
2022-12-02 13:27:42,897 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:6,测试场景:查询商品goodsId不存在
2022-12-02 13:27:42,904 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:7,测试场景:查询商品isOnSale无效
2022-12-02 13:27:42,910 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:8,测试场景:查询商品isPromote无效
2022-12-02 13:27:42,918 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:9,测试场景:查询商品goodsId
2022-12-02 13:27:42,929 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:10,测试场景:查询商品isOnSale
2022-12-02 13:27:42,940 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:11,测试场景:查询商品isPromote
2022-12-02 13:27:42,950 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:12,测试场景:查询商品goodsId和isOnSale
2022-12-02 13:27:42,962 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:13,测试场景:查询商品goodsId和isPromote
2022-12-02 13:27:42,974 -[test_business_good_select01.py - 84] -INFO:运行成功,测试编号为:14,测试场景:查询商品isOnSale和isPromote
2022-12-02 13:27:42,991 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为1,测试场景:查询商品正确流程1
2022-12-02 13:27:43,002 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为2,测试场景:查询商品正确流程2-全部填写
2022-12-02 13:27:43,013 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为3,测试场景:查询商品token值为空
2022-12-02 13:27:43,041 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为4,测试场景:查询商品token值错误
2022-12-02 13:27:43,056 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为5,测试场景:查询商品token值失效
2022-12-02 13:27:43,065 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为6,测试场景:查询商品goodsId不存在
2022-12-02 13:27:43,076 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为7,测试场景:查询商品isOnSale无效
2022-12-02 13:27:43,085 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为8,测试场景:查询商品isPromote无效
2022-12-02 13:27:43,097 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为9,测试场景:查询商品goodsId
2022-12-02 13:27:43,107 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为10,测试场景:查询商品isOnSale
2022-12-02 13:27:43,119 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为11,测试场景:查询商品isPromote
2022-12-02 13:27:43,154 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为12,测试场景:查询商品goodsId和isOnSale
2022-12-02 13:27:43,164 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为13,测试场景:查询商品goodsId和isPromote
2022-12-02 13:27:43,176 -[test_business_good_select02.py - 114] -INFO:运行成功,测试编号为14,测试场景:查询商品isOnSale和isPromote
2022-12-02 13:27:43,193 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:1,测试场景:business注册-正确流程(可选字段均不填）
2022-12-02 13:27:43,206 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:2,测试场景:business注册-正确流程(可选字段全部填写）
2022-12-02 13:27:43,214 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:3,测试场景:business注册-用户名为空
2022-12-02 13:27:43,222 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:4,测试场景:business注册-用户名错误5位
2022-12-02 13:27:43,230 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:5,测试场景:business注册-用户名非字母开头
2022-12-02 13:27:43,239 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:7,测试场景:business注册-已注册用户名
2022-12-02 13:27:43,246 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:8,测试场景:business注册-密码为空
2022-12-02 13:27:43,253 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:9,测试场景:business注册-密码5位
2022-12-02 13:27:43,260 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:10,测试场景:business注册-密码5位
2022-12-02 13:27:43,266 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:11,测试场景:business注册-密码纯数字
2022-12-02 13:27:43,272 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:13,测试场景:business注册-两次密码不一致
2022-12-02 13:27:43,278 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:14,测试场景:business注册-手机号为空
2022-12-02 13:27:43,285 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:15,测试场景:business注册-手机号非11位数字
2022-12-02 13:27:43,292 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:16,测试场景:business注册-手机号已注册
2022-12-02 13:27:43,298 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:17,测试场景:business注册-手机号11位非数字
2022-12-02 13:27:43,304 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:18,测试场景:business注册-性别非男女其他字符
2022-12-02 13:27:43,310 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:19,测试场景:business注册-非时间格式
2022-12-02 13:27:43,317 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:21,测试场景:business注册-qq号错误
2022-12-02 13:27:43,343 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱重复
2022-12-02 13:27:43,349 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:22,测试场景:business注册-邮箱不含@
2022-12-02 13:27:43,355 -[test_business_register.py - 66] -INFO:运行成功,测试编号为:23,测试场景:business注册-邮箱不含@ com或者cn
2022-12-02 13:27:43,370 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:1,测试场景:商品信息录入-正确流程
2022-12-02 13:27:43,380 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:2,测试场景:商品信息录入-token为空
2022-12-02 13:27:43,390 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:3,测试场景:商品信息录入-tooken失效
2022-12-02 13:27:43,425 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:4,测试场景:商品信息录入-goodsName重复
2022-12-02 13:27:43,433 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:5,测试场景:商品信息录入-goodsName为空
2022-12-02 13:27:43,442 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:6,测试场景:商品信息录入-goodsName为2位
2022-12-02 13:27:43,471 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:7,测试场景:商品信息录入-goodsName为2位
2022-12-02 13:27:43,480 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:8,测试场景:商品信息录入-goodsName不存在的分类
2022-12-02 13:27:43,487 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:9,测试场景:商品信息录入-库存为空
2022-12-02 13:27:43,495 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:10,测试场景:商品信息录入-库存为负数
2022-12-02 13:27:43,502 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:11,测试场景:商品信息录入-库存为非数字
2022-12-02 13:27:43,509 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:12,测试场景:商品信息录入-库存为9位
2022-12-02 13:27:43,516 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:13,测试场景:商品信息录入-商品描述错误
2022-12-02 13:27:43,525 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:14,测试场景:商品信息录入-商品价格(0.00!)
2022-12-02 13:27:43,534 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:15,测试场景:商品信息录入-商品价格(最大)
2022-12-02 13:27:43,542 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:16,测试场景:商品信息录入-商品价格为空
2022-12-02 13:27:43,549 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:17,测试场景:商品信息录入-商品价格1位小数
2022-12-02 13:27:43,556 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:18,测试场景:商品信息录入-商品价格整数
2022-12-02 13:27:43,563 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:20,测试场景:商品信息录入-商品价格负数
2022-12-02 13:27:43,569 -[test_goods_input.py - 54] -INFO:运行成功,测试编号为:21,测试场景:商品信息录入-商品价格大于2位小数
2022-12-02 13:27:43,586 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:1,测试场景:促销设置-正确流程
2022-12-02 13:27:43,596 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:2,测试场景:促销设置-token为空
2022-12-02 13:27:43,607 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:3,测试场景:促销设置-token失效
2022-12-02 13:27:43,618 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:4,测试场景:促销设置-token错误
2022-12-02 13:27:43,630 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:5,测试场景:促销设置-开始时间为空
2022-12-02 13:27:43,642 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:6,测试场景:促销设置-开始时间比当前时间小
2022-12-02 13:27:43,653 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:7,测试场景:促销设置-开始时间大于促销结束时间
2022-12-02 13:27:43,665 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:8,测试场景:促销设置-错误时间格式
2022-12-02 13:27:43,680 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:9,测试场景:促销设置-开始时间等于结束时间
2022-12-02 13:27:43,690 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:10,测试场景:促销设置-开始时间小于当前
2022-12-02 13:27:43,700 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:11,测试场景:促销设置-不存在的商品编号
2022-12-02 13:27:43,709 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:12,测试场景:促销设置-商品编号为空
2022-12-02 13:27:43,720 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:13,测试场景:促销设置-已经促销的商品
2022-12-02 13:27:43,730 -[test_goods_promote.py - 65] -INFO:运行成功,测试编号为:14,测试场景:促销设置-开始时间等于当前时间
2022-12-02 13:27:43,744 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:1,测试场景:商品删除-正确流程
2022-12-02 13:27:43,753 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:2,测试场景:商品删除-token为空
2022-12-02 13:27:43,762 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:3,测试场景:商品删除-token失效
2022-12-02 13:27:43,772 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:4,测试场景:商品删除-token错误
2022-12-02 13:27:43,781 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:5,测试场景:商品删除-goodsId为空
2022-12-02 13:27:43,792 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-12-02 13:27:43,805 -[test_goods_delete.py - 50] -INFO:运行成功,测试编号为:6,测试场景:商品删除-goodsId未下架商品
2022-12-02 13:27:43,846 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-12-02 13:27:43,855 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-12-02 13:27:43,864 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-12-02 13:27:43,873 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-12-02 13:27:43,888 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-12-02 13:27:43,903 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-12-02 13:27:43,918 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-12-02 13:27:43,934 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-12-02 13:27:43,947 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-12-02 13:27:43,961 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-12-02 13:27:43,975 -[test_order_items.py - 64] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2022-12-02 13:27:43,992 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:1,测试场景:订单信息查询-正确流程(单个商品)
2022-12-02 13:27:43,999 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:2,测试场景:订单信息查询-token失效
2022-12-02 13:27:44,008 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:3,测试场景:订单信息查询-token错误
2022-12-02 13:27:44,040 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:4,测试场景:订单信息查询-token为空
2022-12-02 13:27:44,055 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:5,测试场景:订单信息查询-orderId为空
2022-12-02 13:27:44,070 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:6,测试场景:订单信息查询-orderId不存在
2022-12-02 13:27:44,111 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:7,测试场景:订单信息查询-orderId(多个商品)
2022-12-02 13:27:44,125 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:8,测试场景:订单信息查询-orderId状态(status 0:未支付)
2022-12-02 13:27:44,137 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:9,测试场景:订单信息查询-orderId状态(status 1:已支付)
2022-12-02 13:27:44,150 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:10,测试场景:订单信息查询-orderId状态(status 2:已取消)
2022-12-02 13:27:44,163 -[test_order_items01.py - 74] -INFO:运行成功,测试编号为:11,测试场景:订单信息查询-orderId状态(status 3:已发货)
2023-02-21 10:00:51,954 -[test_register.py - 39] -INFO:测试成功,测试编号为:1,测试场景:注册
2023-02-21 10:03:29,279 -[test_login.py - 43] -ERROR:测试失败，期望结果为:{'code': 1000, 'msg': '登录成功'},实际结果为:{'code': 1000, 'msg': '登录成功'}
2023-02-21 10:03:29,279 -[test_login.py - 44] -ERROR:assert '登录成功' == {'code': 1000, 'msg': '登录成功'}
Traceback (most recent call last):
  File "D:\TDpytest\test_cases\test_business\test_login\test_login.py", line 39, in test_login
    assert res['msg'] == case['expect']
AssertionError: assert '登录成功' == {'code': 1000, 'msg': '登录成功'}
2023-02-21 10:03:29,367 -[test_login.py - 47] -INFO:测试成功,测试编号为:3,测试场景:登录
2023-02-21 10:03:29,477 -[test_register.py - 39] -INFO:测试成功,测试编号为:1,测试场景:注册
