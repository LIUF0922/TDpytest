{"name": "登录", "status": "failed", "statusDetails": {"message": "AssertionError: assert '登录成功' == {'code': 1000, 'msg': '登录成功'}", "trace": "self = <TDpytest.test_cases.test_business.test_login.test_login.TestLogin object at 0x0000000003FE6550>\ncase = {'case_data': {'passwd': '123456789', 'username': 'xiaosun'}, 'case_id': 1, 'case_title': '登录', 'expect': {'code': 1000, 'msg': '登录成功'}, ...}\n\n    @pytest.mark.parametrize('case', cases, ids=ids)\n    def test_login(self, case):\n        allure.dynamic.title(case['case_title'])\n        if '#username#' in case['case_data'].values():\n            case['case_data']['username'] = self.data_name\n        if '#password#' in case['case_data'].values():\n            case['case_data']['password'] = self.data_password\n        response = requests.post(url=case['url'], data=case[\"case_data\"])\n        res = response.json()\n        try:\n            if case['case_id'] == 1:\n                assert res['msg'] == case['expect']\n            else:\n                assert res == case['expect']\n        except AssertionError as e:\n            logger.error('测试失败，期望结果为:{},实际结果为:{}'.format(case['expect'], res))\n            logger.exception(e)\n>           raise e\n\ntest_cases\\test_business\\test_login\\test_login.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <TDpytest.test_cases.test_business.test_login.test_login.TestLogin object at 0x0000000003FE6550>\ncase = {'case_data': {'passwd': '123456789', 'username': 'xiaosun'}, 'case_id': 1, 'case_title': '登录', 'expect': {'code': 1000, 'msg': '登录成功'}, ...}\n\n    @pytest.mark.parametrize('case', cases, ids=ids)\n    def test_login(self, case):\n        allure.dynamic.title(case['case_title'])\n        if '#username#' in case['case_data'].values():\n            case['case_data']['username'] = self.data_name\n        if '#password#' in case['case_data'].values():\n            case['case_data']['password'] = self.data_password\n        response = requests.post(url=case['url'], data=case[\"case_data\"])\n        res = response.json()\n        try:\n            if case['case_id'] == 1:\n>               assert res['msg'] == case['expect']\nE               AssertionError: assert '登录成功' == {'code': 1000, 'msg': '登录成功'}\n\ntest_cases\\test_business\\test_login\\test_login.py:39: AssertionError"}, "attachments": [{"name": "log", "source": "1ba18098-d8b3-4001-9487-beda478936fb-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "70ced60c-d039-49b2-9882-ae8db74d5cda-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 1, 'case_title': '登录', 'interface': '正常流程', 'url': 'http://127.0.0.1:5000/user_login', 'case_data': {'username': 'xiaosun', 'passwd': '123456789'}, 'expect': {'code': 1000, 'msg': '登录成功'}}"}], "start": 1676945009259, "stop": 1676945009280, "uuid": "5a4048ae-bf79-476f-929a-829bf2b030bb", "historyId": "16eb2fcd0d922185666e97e30fb7f767", "testCaseId": "745f7f2c40601f3409af66ae2aebb521", "fullName": "test_cases.test_business.test_login.test_login.TestLogin#test_login", "labels": [{"name": "feature", "value": "登录测试"}, {"name": "epic", "value": "自己开发的接口"}, {"name": "parentSuite", "value": "test_cases.test_business.test_login"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "SD-20210312IQVR"}, {"name": "thread", "value": "11276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_business.test_login.test_login"}]}